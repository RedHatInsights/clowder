apiVersion: v1
kind: Template
metadata:
  name: clowder
objects:
- apiVersion: v1
  kind: Namespace
  metadata:
    labels:
      control-plane: controller-manager
    name: clowder-system
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.8.0
    creationTimestamp: null
    name: clowdapps.cloud.redhat.com
  spec:
    group: cloud.redhat.com
    names:
      kind: ClowdApp
      listKind: ClowdAppList
      plural: clowdapps
      shortNames:
      - app
      singular: clowdapp
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.deployments.readyDeployments
        name: Ready
        type: integer
      - jsonPath: .status.deployments.managedDeployments
        name: Managed
        type: integer
      - jsonPath: .spec.envName
        name: EnvName
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClowdApp is the Schema for the clowdapps API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: A ClowdApp specification.
              properties:
                cyndi:
                  description: Configures 'cyndi' database syndication for this app.
                    When the app's ClowdEnvironment has the kafka provider set to
                    (*_operator_*) mode, Clowder will configure a CyndiPipeline for
                    this app in the environment's kafka-connect namespace. When the
                    kafka provider is in (*_app-interface_*) mode, Clowder will check
                    to ensure that a CyndiPipeline resource exists for the application
                    in the environment's kafka-connect namespace. For all other kafka
                    provider modes, this configuration option has no effect.
                  properties:
                    additionalFilters:
                      description: AdditionalFilters
                      items:
                        additionalProperties:
                          type: string
                        type: object
                      type: array
                    appName:
                      description: Application name - if empty will default to Clowdapp's
                        name
                      maxLength: 64
                      minLength: 1
                      pattern: '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
                      type: string
                    enabled:
                      description: Enables or Disables the Cyndi pipeline for the
                        Clowdapp
                      type: boolean
                    insightsOnly:
                      description: Desired host syndication type (all or Insights
                        hosts only) - defaults to false (All hosts)
                      type: boolean
                  type: object
                database:
                  description: The database specification defines a single database,
                    the configuration of which will be made available to all the pods
                    in the ClowdApp.
                  properties:
                    dbResourceSize:
                      description: T-shirt size, one of small, medium, large
                      enum:
                      - small
                      - medium
                      - large
                      type: string
                    dbVolumeSize:
                      description: T-shirt size, one of small, medium, large
                      enum:
                      - small
                      - medium
                      - large
                      type: string
                    name:
                      description: 'Defines the Name of the database used by this
                        app. This will be used as the name of the logical database
                        created by Clowder when the DB provider is in (*_local_*)
                        mode. In (*_app-interface_*) mode, the name here is used to
                        locate the DB secret as a fallback mechanism in cases where
                        there is no ''clowder/database: <app-name>'' annotation set
                        on any secrets by looking for a secret with ''db.host'' starting
                        with ''<name>-<env>'' where env is usually ''stage'' or ''prod'''
                      type: string
                    sharedDbAppName:
                      description: Defines the Name of the app to share a database
                        from
                      type: string
                    version:
                      description: Defines the Version of the PostGreSQL database,
                        defaults to 12.
                      enum:
                      - 12
                      - 13
                      - 14
                      - 15
                      - 16
                      format: int32
                      type: integer
                  type: object
                dependencies:
                  description: A list of dependencies in the form of the name of the
                    ClowdApps that are required to be present for this ClowdApp to
                    function.
                  items:
                    type: string
                  type: array
                deployments:
                  description: A list of deployments
                  items:
                    description: Deployment defines a service running inside a ClowdApp
                      and will output a deployment resource. Only one container per
                      pod is allowed and this is defined in the PodSpec attribute.
                    properties:
                      autoScaler:
                        description: AutoScaler defines the configuration for the
                          Keda auto scaler
                        properties:
                          advanced:
                            description: AdvancedConfig specifies advance scaling
                              options
                            properties:
                              horizontalPodAutoscalerConfig:
                                description: HorizontalPodAutoscalerConfig specifies
                                  horizontal scale config
                                properties:
                                  behavior:
                                    description: HorizontalPodAutoscalerBehavior configures
                                      the scaling behavior of the target in both Up
                                      and Down directions (scaleUp and scaleDown fields
                                      respectively).
                                    properties:
                                      scaleDown:
                                        description: scaleDown is scaling policy for
                                          scaling Down. If not set, the default value
                                          is to allow to scale down to minReplicas
                                          pods, with a 300 second stabilization window
                                          (i.e., the highest recommendation for the
                                          last 300sec is used).
                                        properties:
                                          policies:
                                            description: policies is a list of potential
                                              scaling polices which can be used during
                                              scaling. At least one policy must be
                                              specified, otherwise the HPAScalingRules
                                              will be discarded as invalid
                                            items:
                                              description: HPAScalingPolicy is a single
                                                policy which must hold true for a
                                                specified past interval.
                                              properties:
                                                periodSeconds:
                                                  description: periodSeconds specifies
                                                    the window of time for which the
                                                    policy should hold true. PeriodSeconds
                                                    must be greater than zero and
                                                    less than or equal to 1800 (30
                                                    min).
                                                  format: int32
                                                  type: integer
                                                type:
                                                  description: type is used to specify
                                                    the scaling policy.
                                                  type: string
                                                value:
                                                  description: value contains the
                                                    amount of change which is permitted
                                                    by the policy. It must be greater
                                                    than zero
                                                  format: int32
                                                  type: integer
                                              required:
                                              - periodSeconds
                                              - type
                                              - value
                                              type: object
                                            type: array
                                          selectPolicy:
                                            description: selectPolicy is used to specify
                                              which policy should be used. If not
                                              set, the default value MaxPolicySelect
                                              is used.
                                            type: string
                                          stabilizationWindowSeconds:
                                            description: 'stabilizationWindowSeconds
                                              is the number of seconds for which past
                                              recommendations should be considered
                                              while scaling up or scaling down. StabilizationWindowSeconds
                                              must be greater than or equal to zero
                                              and less than or equal to 3600 (one
                                              hour). If not set, use the default values:
                                              - For scale up: 0 (i.e. no stabilization
                                              is done). - For scale down: 300 (i.e.
                                              the stabilization window is 300 seconds
                                              long).'
                                            format: int32
                                            type: integer
                                        type: object
                                      scaleUp:
                                        description: 'scaleUp is scaling policy for
                                          scaling Up. If not set, the default value
                                          is the higher of: * increase no more than
                                          4 pods per 60 seconds * double the number
                                          of pods per 60 seconds No stabilization
                                          is used.'
                                        properties:
                                          policies:
                                            description: policies is a list of potential
                                              scaling polices which can be used during
                                              scaling. At least one policy must be
                                              specified, otherwise the HPAScalingRules
                                              will be discarded as invalid
                                            items:
                                              description: HPAScalingPolicy is a single
                                                policy which must hold true for a
                                                specified past interval.
                                              properties:
                                                periodSeconds:
                                                  description: periodSeconds specifies
                                                    the window of time for which the
                                                    policy should hold true. PeriodSeconds
                                                    must be greater than zero and
                                                    less than or equal to 1800 (30
                                                    min).
                                                  format: int32
                                                  type: integer
                                                type:
                                                  description: type is used to specify
                                                    the scaling policy.
                                                  type: string
                                                value:
                                                  description: value contains the
                                                    amount of change which is permitted
                                                    by the policy. It must be greater
                                                    than zero
                                                  format: int32
                                                  type: integer
                                              required:
                                              - periodSeconds
                                              - type
                                              - value
                                              type: object
                                            type: array
                                          selectPolicy:
                                            description: selectPolicy is used to specify
                                              which policy should be used. If not
                                              set, the default value MaxPolicySelect
                                              is used.
                                            type: string
                                          stabilizationWindowSeconds:
                                            description: 'stabilizationWindowSeconds
                                              is the number of seconds for which past
                                              recommendations should be considered
                                              while scaling up or scaling down. StabilizationWindowSeconds
                                              must be greater than or equal to zero
                                              and less than or equal to 3600 (one
                                              hour). If not set, use the default values:
                                              - For scale up: 0 (i.e. no stabilization
                                              is done). - For scale down: 300 (i.e.
                                              the stabilization window is 300 seconds
                                              long).'
                                            format: int32
                                            type: integer
                                        type: object
                                    type: object
                                  name:
                                    type: string
                                type: object
                              restoreToOriginalReplicaCount:
                                type: boolean
                            type: object
                          cooldownPeriod:
                            description: CooldownPeriod is the interval (in seconds)
                              to wait after the last trigger reported active before
                              scaling the deployment down. Default is 5 minutes (300
                              seconds).
                            format: int32
                            type: integer
                          externalHPA:
                            description: ExternalHPA allows replicas on deployments
                              to be controlled by another resource, but will not be
                              allowed to fall under the minReplicas as set in the
                              ClowdApp.
                            type: boolean
                          fallback:
                            description: Fallback is the spec for fallback options
                            properties:
                              failureThreshold:
                                format: int32
                                type: integer
                              replicas:
                                format: int32
                                type: integer
                            required:
                            - failureThreshold
                            - replicas
                            type: object
                          maxReplicaCount:
                            description: MaxReplicaCount is the maximum number of
                              replicas the scaler will scale the deployment to. Default
                              is 10.
                            format: int32
                            type: integer
                          minReplicaCount:
                            description: MinReplicaCount is the minimum number of
                              replicas the scaler will scale the deployment to.
                            format: int32
                            type: integer
                          pollingInterval:
                            description: PollingInterval is the interval (in seconds)
                              to check each trigger on. Default is 30 seconds.
                            format: int32
                            type: integer
                          triggers:
                            items:
                              description: ScaleTriggers reference the scaler that
                                will be used
                              properties:
                                authenticationRef:
                                  description: ScaledObjectAuthRef points to the TriggerAuthentication
                                    or ClusterTriggerAuthentication object that is
                                    used to authenticate the scaler with the environment
                                  properties:
                                    kind:
                                      description: Kind of the resource being referred
                                        to. Defaults to TriggerAuthentication.
                                      type: string
                                    name:
                                      type: string
                                  required:
                                  - name
                                  type: object
                                metadata:
                                  additionalProperties:
                                    type: string
                                  type: object
                                metricType:
                                  description: MetricTargetType specifies the type
                                    of metric being targeted, and should be either
                                    "Value", "AverageValue", or "Utilization"
                                  type: string
                                name:
                                  type: string
                                type:
                                  type: string
                              required:
                              - metadata
                              - type
                              type: object
                            type: array
                        type: object
                      autoScalerSimple:
                        description: SimpleAutoScaler defines a simple HPA with scaling
                          for RAM and CPU by value and utilization thresholds, along
                          with replica count limits
                        properties:
                          cpu:
                            description: SimpleAutoScalerMetric defines a metric of
                              either a value or utilization
                            properties:
                              scaleAtUtilization:
                                format: int32
                                type: integer
                              scaleAtValue:
                                type: string
                            type: object
                          ram:
                            description: SimpleAutoScalerMetric defines a metric of
                              either a value or utilization
                            properties:
                              scaleAtUtilization:
                                format: int32
                                type: integer
                              scaleAtValue:
                                type: string
                            type: object
                          replicas:
                            description: SimpleAutoScalerReplicas defines the minimum
                              and maximum replica counts for the auto scaler
                            properties:
                              max:
                                format: int32
                                type: integer
                              min:
                                format: int32
                                type: integer
                            required:
                            - max
                            - min
                            type: object
                        required:
                        - replicas
                        type: object
                      deploymentStrategy:
                        description: DeploymentStrategy allows the deployment strategy
                          to be set only if the deployment has no public service enabled
                        properties:
                          privateStrategy:
                            description: PrivateStrategy allows a deployment that
                              only uses a private port to set the deployment strategy
                              one of Recreate or Rolling, default for a private service
                              is Recreate. This is to enable a quicker roll out for
                              services that do not have public facing endpoints.
                            type: string
                        type: object
                      k8sAccessLevel:
                        description: K8sAccessLevel defines the level of access for
                          this deployment
                        enum:
                        - default
                        - view
                        - ''
                        - edit
                        type: string
                      metadata:
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      minReplicas:
                        description: 'Deprecated: Use Replicas instead If Replicas
                          is not set and MinReplicas is set, then MinReplicas will
                          be used'
                        format: int32
                        type: integer
                      name:
                        description: Name defines the identifier of a Pod inside the
                          ClowdApp. This name will be used along side the name of
                          the ClowdApp itself to form a <app>-<pod> pattern which
                          will be used for all other created resources and also for
                          some labels. It must be unique within a ClowdApp.
                        type: string
                      podSpec:
                        description: PodSpec defines a container running inside a
                          ClowdApp.
                        properties:
                          args:
                            description: A list of args to be passed to the pod container.
                            items:
                              type: string
                            type: array
                          command:
                            description: The command that will be invoked inside the
                              pod at startup.
                            items:
                              type: string
                            type: array
                          env:
                            description: A list of environment variables in k8s defined
                              format.
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          image:
                            description: Image refers to the container image used
                              to create the pod.
                            type: string
                          initContainers:
                            description: A list of init containers used to perform
                              at-startup operations.
                            items:
                              description: InitContainer is a struct defining a k8s
                                init container. This will be deployed along with the
                                parent pod and is used to carry out one time initialization
                                procedures.
                              properties:
                                args:
                                  description: A list of args to be passed to the
                                    init container.
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: A list of commands to run inside the
                                    parent Pod.
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: A list of environment variables used
                                    only by the initContainer.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previously defined
                                          environment variables in the container and
                                          any service environment variables. If a
                                          variable cannot be resolved, the reference
                                          in the input string will be unchanged. Double
                                          $$ are reduced to a single $, which allows
                                          for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal
                                          "$(VAR_NAME)". Escaped references will never
                                          be expanded, regardless of whether the variable
                                          exists or not. Defaults to "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          fieldRef:
                                            description: 'Selects a field of the pod:
                                              supports metadata.name, metadata.namespace,
                                              `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                              spec.nodeName, spec.serviceAccountName,
                                              status.hostIP, status.podIP, status.podIPs.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              limits.ephemeral-storage, requests.cpu,
                                              requests.memory and requests.ephemeral-storage)
                                              are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                image:
                                  description: Image refers to the container image
                                    used to create the init container (if different
                                    from the primary pod image).
                                  type: string
                                inheritEnv:
                                  description: If true, inheirts the environment variables
                                    from the parent pod. specification
                                  type: boolean
                                name:
                                  description: Name gives an identifier in the situation
                                    where multiple init containers exist
                                  type: string
                              type: object
                            type: array
                          lifecycle:
                            description: A pass-through of Lifecycle specification
                              in standard k8s format
                            properties:
                              postStart:
                                description: 'PostStart is called immediately after
                                  a container is created. If the handler fails, the
                                  container is terminated and restarted according
                                  to its restart policy. Other management of the container
                                  blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The command
                                          is simply exec'd, it is not run inside a
                                          shell, so traditional shell instructions
                                          ('|', etc) won't work. To use a shell, you
                                          need to explicitly call out to that shell.
                                          Exit status of 0 is treated as live/healthy
                                          and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set
                                          "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the
                                          request. HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name.
                                                This will be canonicalized upon output,
                                                so case-variant names will be understood
                                                as the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Name or number of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting
                                          to the host. Defaults to HTTP.
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  sleep:
                                    description: Sleep represents the duration that
                                      the container should sleep before being terminated.
                                    properties:
                                      seconds:
                                        description: Seconds is the number of seconds
                                          to sleep.
                                        format: int64
                                        type: integer
                                    required:
                                    - seconds
                                    type: object
                                  tcpSocket:
                                    description: Deprecated. TCPSocket is NOT supported
                                      as a LifecycleHandler and kept for the backward
                                      compatibility. There are no validation of this
                                      field and lifecycle hooks will fail in runtime
                                      when tcp handler is specified.
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                          to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Number or name of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                type: object
                              preStop:
                                description: 'PreStop is called immediately before
                                  a container is terminated due to an API request
                                  or management event such as liveness/startup probe
                                  failure, preemption, resource contention, etc. The
                                  handler is not called if the container crashes or
                                  exits. The Pod''s termination grace period countdown
                                  begins before the PreStop hook is executed. Regardless
                                  of the outcome of the handler, the container will
                                  eventually terminate within the Pod''s termination
                                  grace period (unless delayed by finalizers). Other
                                  management of the container blocks until the hook
                                  completes or until the termination grace period
                                  is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The command
                                          is simply exec'd, it is not run inside a
                                          shell, so traditional shell instructions
                                          ('|', etc) won't work. To use a shell, you
                                          need to explicitly call out to that shell.
                                          Exit status of 0 is treated as live/healthy
                                          and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set
                                          "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the
                                          request. HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name.
                                                This will be canonicalized upon output,
                                                so case-variant names will be understood
                                                as the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Name or number of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting
                                          to the host. Defaults to HTTP.
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  sleep:
                                    description: Sleep represents the duration that
                                      the container should sleep before being terminated.
                                    properties:
                                      seconds:
                                        description: Seconds is the number of seconds
                                          to sleep.
                                        format: int64
                                        type: integer
                                    required:
                                    - seconds
                                    type: object
                                  tcpSocket:
                                    description: Deprecated. TCPSocket is NOT supported
                                      as a LifecycleHandler and kept for the backward
                                      compatibility. There are no validation of this
                                      field and lifecycle hooks will fail in runtime
                                      when tcp handler is specified.
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                          to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Number or name of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                type: object
                            type: object
                          livenessProbe:
                            description: A pass-through of a Liveness Probe specification
                              in standard k8s format. If omitted, a standard probe
                              will be setup point to the webPort defined in the ClowdEnvironment
                              and a path of /healthz. Ignored if Web is set to false.
                            properties:
                              exec:
                                description: Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              grpc:
                                description: GRPC specifies an action involving a
                                  GRPC port.
                                properties:
                                  port:
                                    description: Port number of the gRPC service.
                                      Number must be in the range 1 to 65535.
                                    format: int32
                                    type: integer
                                  service:
                                    description: "Service is the name of the service\
                                      \ to place in the gRPC HealthCheckRequest (see\
                                      \ https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                      \ \n If this is not specified, the default behavior\
                                      \ is defined by gRPC."
                                    type: string
                                required:
                                - port
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name. This
                                            will be canonicalized upon output, so
                                            case-variant names will be understood
                                            as the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: TCPSocket specifies an action involving
                                  a TCP port.
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is a beta field and requires enabling ProbeTerminationGracePeriod
                                  feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                  is used if unset.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          machinePool:
                            description: MachinePool allows the pod to be scheduled
                              to a particular machine pool.
                            type: string
                          metadata:
                            description: Allows for defining custom PodSpec metadata,
                              such as annotations
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          readinessProbe:
                            description: A pass-through of a Readiness Probe specification
                              in standard k8s format. If omitted, a standard probe
                              will be setup point to the webPort defined in the ClowdEnvironment
                              and a path of /healthz. Ignored if Web is set to false.
                            properties:
                              exec:
                                description: Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              grpc:
                                description: GRPC specifies an action involving a
                                  GRPC port.
                                properties:
                                  port:
                                    description: Port number of the gRPC service.
                                      Number must be in the range 1 to 65535.
                                    format: int32
                                    type: integer
                                  service:
                                    description: "Service is the name of the service\
                                      \ to place in the gRPC HealthCheckRequest (see\
                                      \ https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                      \ \n If this is not specified, the default behavior\
                                      \ is defined by gRPC."
                                    type: string
                                required:
                                - port
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name. This
                                            will be canonicalized upon output, so
                                            case-variant names will be understood
                                            as the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: TCPSocket specifies an action involving
                                  a TCP port.
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is a beta field and requires enabling ProbeTerminationGracePeriod
                                  feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                  is used if unset.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: A pass-through of a resource requirements
                              in k8s ResourceRequirements format. If omitted, the
                              default resource requirements from the ClowdEnvironment
                              will be used.
                            properties:
                              claims:
                                description: "Claims lists the names of resources,\
                                  \ defined in spec.resourceClaims, that are used\
                                  \ by this container. \n This is an alpha field and\
                                  \ requires enabling the DynamicResourceAllocation\
                                  \ feature gate. \n This field is immutable. It can\
                                  \ only be set for containers."
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: Name must match the name of one
                                        entry in pod.spec.resourceClaims of the Pod
                                        where this field is used. It makes that resource
                                        available inside a container.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. Requests cannot exceed Limits. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          sidecars:
                            description: Lists the expected side cars, will be validated
                              in the validating webhook
                            items:
                              properties:
                                enabled:
                                  description: Defines if the sidecar is enabled,
                                    defaults to False
                                  type: boolean
                                name:
                                  description: The name of the sidecar, only supported
                                    names allowed, (otel-collector, token-refresher)
                                  type: string
                              required:
                              - enabled
                              - name
                              type: object
                            type: array
                          terminationGracePeriodSeconds:
                            description: A pass-through of TerminationGracePeriodSeconds
                              specification in standard k8s format default is 30 seconds
                            format: int64
                            type: integer
                          volumeMounts:
                            description: A pass-through of a list of VolumesMounts
                              in standa k8s format.
                            items:
                              description: VolumeMount describes a mounting of a Volume
                                within a container.
                              properties:
                                mountPath:
                                  description: Path within the container at which
                                    the volume should be mounted.  Must not contain
                                    ':'.
                                  type: string
                                mountPropagation:
                                  description: mountPropagation determines how mounts
                                    are propagated from the host to container and
                                    the other way around. When not set, MountPropagationNone
                                    is used. This field is beta in 1.10.
                                  type: string
                                name:
                                  description: This must match the Name of a Volume.
                                  type: string
                                readOnly:
                                  description: Mounted read-only if true, read-write
                                    otherwise (false or unspecified). Defaults to
                                    false.
                                  type: boolean
                                subPath:
                                  description: Path within the volume from which the
                                    container's volume should be mounted. Defaults
                                    to "" (volume's root).
                                  type: string
                                subPathExpr:
                                  description: Expanded path within the volume from
                                    which the container's volume should be mounted.
                                    Behaves similarly to SubPath but environment variable
                                    references $(VAR_NAME) are expanded using the
                                    container's environment. Defaults to "" (volume's
                                    root). SubPathExpr and SubPath are mutually exclusive.
                                  type: string
                              required:
                              - mountPath
                              - name
                              type: object
                            type: array
                          volumes:
                            description: A pass-through of a list of Volumes in standa
                              k8s format.
                            items:
                              description: Volume represents a named volume in a pod
                                that may be accessed by any container in the pod.
                              properties:
                                awsElasticBlockStore:
                                  description: 'awsElasticBlockStore represents an
                                    AWS Disk resource that is attached to a kubelet''s
                                    host machine and then exposed to the pod. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    partition:
                                      description: 'partition is the partition in
                                        the volume that you want to mount. If omitted,
                                        the default is to mount by volume name. Examples:
                                        For volume /dev/sda1, you specify the partition
                                        as "1". Similarly, the volume partition for
                                        /dev/sda is "0" (or you can leave the property
                                        empty).'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: 'readOnly value true will force
                                        the readOnly setting in VolumeMounts. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      type: boolean
                                    volumeID:
                                      description: 'volumeID is unique ID of the persistent
                                        disk resource in AWS (Amazon EBS volume).
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                azureDisk:
                                  description: azureDisk represents an Azure Data
                                    Disk mount on the host and bind mount to the pod.
                                  properties:
                                    cachingMode:
                                      description: 'cachingMode is the Host Caching
                                        mode: None, Read Only, Read Write.'
                                      type: string
                                    diskName:
                                      description: diskName is the Name of the data
                                        disk in the blob storage
                                      type: string
                                    diskURI:
                                      description: diskURI is the URI of data disk
                                        in the blob storage
                                      type: string
                                    fsType:
                                      description: fsType is Filesystem type to mount.
                                        Must be a filesystem type supported by the
                                        host operating system. Ex. "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    kind:
                                      description: 'kind expected values are Shared:
                                        multiple blob disks per storage account  Dedicated:
                                        single blob disk per storage account  Managed:
                                        azure managed data disk (only in managed availability
                                        set). defaults to shared'
                                      type: string
                                    readOnly:
                                      description: readOnly Defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                  required:
                                  - diskName
                                  - diskURI
                                  type: object
                                azureFile:
                                  description: azureFile represents an Azure File
                                    Service mount on the host and bind mount to the
                                    pod.
                                  properties:
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretName:
                                      description: secretName is the  name of secret
                                        that contains Azure Storage Account Name and
                                        Key
                                      type: string
                                    shareName:
                                      description: shareName is the azure share Name
                                      type: string
                                  required:
                                  - secretName
                                  - shareName
                                  type: object
                                cephfs:
                                  description: cephFS represents a Ceph FS mount on
                                    the host that shares a pod's lifetime
                                  properties:
                                    monitors:
                                      description: 'monitors is Required: Monitors
                                        is a collection of Ceph monitors More info:
                                        https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      items:
                                        type: string
                                      type: array
                                    path:
                                      description: 'path is Optional: Used as the
                                        mounted root, rather than the full Ceph tree,
                                        default is /'
                                      type: string
                                    readOnly:
                                      description: 'readOnly is Optional: Defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: boolean
                                    secretFile:
                                      description: 'secretFile is Optional: SecretFile
                                        is the path to key ring for User, default
                                        is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: string
                                    secretRef:
                                      description: 'secretRef is Optional: SecretRef
                                        is reference to the authentication secret
                                        for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    user:
                                      description: 'user is optional: User is the
                                        rados user name, default is admin More info:
                                        https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: string
                                  required:
                                  - monitors
                                  type: object
                                cinder:
                                  description: 'cinder represents a cinder volume
                                    attached and mounted on kubelets host machine.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        to mount. Must be a filesystem type supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: string
                                    readOnly:
                                      description: 'readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is optional: points
                                        to a secret object containing parameters used
                                        to connect to OpenStack.'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    volumeID:
                                      description: 'volumeID used to identify the
                                        volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                configMap:
                                  description: configMap represents a configMap that
                                    should populate this volume
                                  properties:
                                    defaultMode:
                                      description: 'defaultMode is optional: mode
                                        bits used to set permissions on created files
                                        by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: items if unspecified, each key-value
                                        pair in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the ConfigMap, the
                                        volume setup will error unless it is marked
                                        optional. Paths must be relative and may not
                                        contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: optional specify whether the ConfigMap
                                        or its keys must be defined
                                      type: boolean
                                  type: object
                                csi:
                                  description: csi (Container Storage Interface) represents
                                    ephemeral storage that is handled by certain external
                                    CSI drivers (Beta feature).
                                  properties:
                                    driver:
                                      description: driver is the name of the CSI driver
                                        that handles this volume. Consult with your
                                        admin for the correct name as registered in
                                        the cluster.
                                      type: string
                                    fsType:
                                      description: fsType to mount. Ex. "ext4", "xfs",
                                        "ntfs". If not provided, the empty value is
                                        passed to the associated CSI driver which
                                        will determine the default filesystem to apply.
                                      type: string
                                    nodePublishSecretRef:
                                      description: nodePublishSecretRef is a reference
                                        to the secret object containing sensitive
                                        information to pass to the CSI driver to complete
                                        the CSI NodePublishVolume and NodeUnpublishVolume
                                        calls. This field is optional, and  may be
                                        empty if no secret is required. If the secret
                                        object contains more than one secret, all
                                        secret references are passed.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    readOnly:
                                      description: readOnly specifies a read-only
                                        configuration for the volume. Defaults to
                                        false (read/write).
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      description: volumeAttributes stores driver-specific
                                        properties that are passed to the CSI driver.
                                        Consult your driver's documentation for supported
                                        values.
                                      type: object
                                  required:
                                  - driver
                                  type: object
                                downwardAPI:
                                  description: downwardAPI represents downward API
                                    about the pod that should populate this volume
                                  properties:
                                    defaultMode:
                                      description: 'Optional: mode bits to use on
                                        created files by default. Must be a Optional:
                                        mode bits used to set permissions on created
                                        files by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: Items is a list of downward API
                                        volume file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name and namespace are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          mode:
                                            description: 'Optional: mode bits used
                                              to set permissions on this file, must
                                              be an octal value between 0000 and 0777
                                              or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal
                                              values, JSON requires decimal values
                                              for mode bits. If not specified, the
                                              volume defaultMode will be used. This
                                              might be in conflict with other options
                                              that affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              requests.cpu and requests.memory) are
                                              currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                        required:
                                        - path
                                        type: object
                                      type: array
                                  type: object
                                emptyDir:
                                  description: 'emptyDir represents a temporary directory
                                    that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                  properties:
                                    medium:
                                      description: 'medium represents what type of
                                        storage medium should back this directory.
                                        The default is "" which means to use the node''s
                                        default medium. Must be an empty string (default)
                                        or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      type: string
                                    sizeLimit:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: 'sizeLimit is the total amount
                                        of local storage required for this EmptyDir
                                        volume. The size limit is also applicable
                                        for memory medium. The maximum usage on memory
                                        medium EmptyDir would be the minimum value
                                        between the SizeLimit specified here and the
                                        sum of memory limits of all containers in
                                        a pod. The default is nil which means that
                                        the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                ephemeral:
                                  description: "ephemeral represents a volume that\
                                    \ is handled by a cluster storage driver. The\
                                    \ volume's lifecycle is tied to the pod that defines\
                                    \ it - it will be created before the pod starts,\
                                    \ and deleted when the pod is removed. \n Use\
                                    \ this if: a) the volume is only needed while\
                                    \ the pod runs, b) features of normal volumes\
                                    \ like restoring from snapshot or capacity tracking\
                                    \ are needed, c) the storage driver is specified\
                                    \ through a storage class, and d) the storage\
                                    \ driver supports dynamic volume provisioning\
                                    \ through a PersistentVolumeClaim (see EphemeralVolumeSource\
                                    \ for more information on the connection between\
                                    \ this volume type and PersistentVolumeClaim).\
                                    \ \n Use PersistentVolumeClaim or one of the vendor-specific\
                                    \ APIs for volumes that persist for longer than\
                                    \ the lifecycle of an individual pod. \n Use CSI\
                                    \ for light-weight local ephemeral volumes if\
                                    \ the CSI driver is meant to be used that way\
                                    \ - see the documentation of the driver for more\
                                    \ information. \n A pod can use both types of\
                                    \ ephemeral volumes and persistent volumes at\
                                    \ the same time."
                                  properties:
                                    volumeClaimTemplate:
                                      description: "Will be used to create a stand-alone\
                                        \ PVC to provision the volume. The pod in\
                                        \ which this EphemeralVolumeSource is embedded\
                                        \ will be the owner of the PVC, i.e. the PVC\
                                        \ will be deleted together with the pod. \
                                        \ The name of the PVC will be `<pod name>-<volume\
                                        \ name>` where `<volume name>` is the name\
                                        \ from the `PodSpec.Volumes` array entry.\
                                        \ Pod validation will reject the pod if the\
                                        \ concatenated name is not valid for a PVC\
                                        \ (for example, too long). \n An existing\
                                        \ PVC with that name that is not owned by\
                                        \ the pod will *not* be used for the pod to\
                                        \ avoid using an unrelated volume by mistake.\
                                        \ Starting the pod is then blocked until the\
                                        \ unrelated PVC is removed. If such a pre-created\
                                        \ PVC is meant to be used by the pod, the\
                                        \ PVC has to updated with an owner reference\
                                        \ to the pod once the pod exists. Normally\
                                        \ this should not be necessary, but it may\
                                        \ be useful when manually reconstructing a\
                                        \ broken cluster. \n This field is read-only\
                                        \ and no changes will be made by Kubernetes\
                                        \ to the PVC after it has been created. \n\
                                        \ Required, must not be nil."
                                      properties:
                                        metadata:
                                          description: May contain labels and annotations
                                            that will be copied into the PVC when
                                            creating it. No other fields are allowed
                                            and will be rejected during validation.
                                          type: object
                                        spec:
                                          description: The specification for the PersistentVolumeClaim.
                                            The entire content is copied unchanged
                                            into the PVC that gets created from this
                                            template. The same fields as in a PersistentVolumeClaim
                                            are also valid here.
                                          properties:
                                            accessModes:
                                              description: 'accessModes contains the
                                                desired access modes the volume should
                                                have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                              items:
                                                type: string
                                              type: array
                                            dataSource:
                                              description: 'dataSource field can be
                                                used to specify either: * An existing
                                                VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                * An existing PVC (PersistentVolumeClaim)
                                                If the provisioner or an external
                                                controller can support the specified
                                                data source, it will create a new
                                                volume based on the contents of the
                                                specified data source. When the AnyVolumeDataSource
                                                feature gate is enabled, dataSource
                                                contents will be copied to dataSourceRef,
                                                and dataSourceRef contents will be
                                                copied to dataSource when dataSourceRef.namespace
                                                is not specified. If the namespace
                                                is specified, then dataSourceRef will
                                                not be copied to dataSource.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            dataSourceRef:
                                              description: 'dataSourceRef specifies
                                                the object from which to populate
                                                the volume with data, if a non-empty
                                                volume is desired. This may be any
                                                object from a non-empty API group
                                                (non core object) or a PersistentVolumeClaim
                                                object. When this field is specified,
                                                volume binding will only succeed if
                                                the type of the specified object matches
                                                some installed volume populator or
                                                dynamic provisioner. This field will
                                                replace the functionality of the dataSource
                                                field and as such if both fields are
                                                non-empty, they must have the same
                                                value. For backwards compatibility,
                                                when namespace isn''t specified in
                                                dataSourceRef, both fields (dataSource
                                                and dataSourceRef) will be set to
                                                the same value automatically if one
                                                of them is empty and the other is
                                                non-empty. When namespace is specified
                                                in dataSourceRef, dataSource isn''t
                                                set to the same value and must be
                                                empty. There are three important differences
                                                between dataSource and dataSourceRef:
                                                * While dataSource only allows two
                                                specific types of objects, dataSourceRef
                                                allows any non-core object, as well
                                                as PersistentVolumeClaim objects.
                                                * While dataSource ignores disallowed
                                                values (dropping them), dataSourceRef
                                                preserves all values, and generates
                                                an error if a disallowed value is
                                                specified. * While dataSource only
                                                allows local objects, dataSourceRef
                                                allows objects in any namespaces.
                                                (Beta) Using this field requires the
                                                AnyVolumeDataSource feature gate to
                                                be enabled. (Alpha) Using the namespace
                                                field of dataSourceRef requires the
                                                CrossNamespaceVolumeDataSource feature
                                                gate to be enabled.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                                namespace:
                                                  description: Namespace is the namespace
                                                    of resource being referenced Note
                                                    that when a namespace is specified,
                                                    a gateway.networking.k8s.io/ReferenceGrant
                                                    object is required in the referent
                                                    namespace to allow that namespace's
                                                    owner to accept the reference.
                                                    See the ReferenceGrant documentation
                                                    for details. (Alpha) This field
                                                    requires the CrossNamespaceVolumeDataSource
                                                    feature gate to be enabled.
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            resources:
                                              description: 'resources represents the
                                                minimum resources the volume should
                                                have. If RecoverVolumeExpansionFailure
                                                feature is enabled users are allowed
                                                to specify resource requirements that
                                                are lower than previous value but
                                                must still be higher than capacity
                                                recorded in the status field of the
                                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                              properties:
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Limits describes the
                                                    maximum amount of compute resources
                                                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Requests describes
                                                    the minimum amount of compute
                                                    resources required. If Requests
                                                    is omitted for a container, it
                                                    defaults to Limits if that is
                                                    explicitly specified, otherwise
                                                    to an implementation-defined value.
                                                    Requests cannot exceed Limits.
                                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                              type: object
                                            selector:
                                              description: selector is a label query
                                                over volumes to consider for binding.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            storageClassName:
                                              description: 'storageClassName is the
                                                name of the StorageClass required
                                                by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                              type: string
                                            volumeAttributesClassName:
                                              description: 'volumeAttributesClassName
                                                may be used to set the VolumeAttributesClass
                                                used by this claim. If specified,
                                                the CSI driver will create or update
                                                the volume with the attributes defined
                                                in the corresponding VolumeAttributesClass.
                                                This has a different purpose than
                                                storageClassName, it can be changed
                                                after the claim is created. An empty
                                                string value means that no VolumeAttributesClass
                                                will be applied to the claim but it''s
                                                not allowed to reset this field to
                                                empty string once it is set. If unspecified
                                                and the PersistentVolumeClaim is unbound,
                                                the default VolumeAttributesClass
                                                will be set by the persistentvolume
                                                controller if it exists. If the resource
                                                referred to by volumeAttributesClass
                                                does not exist, this PersistentVolumeClaim
                                                will be set to a Pending state, as
                                                reflected by the modifyVolumeStatus
                                                field, until such as a resource exists.
                                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
                                                (Alpha) Using this field requires
                                                the VolumeAttributesClass feature
                                                gate to be enabled.'
                                              type: string
                                            volumeMode:
                                              description: volumeMode defines what
                                                type of volume is required by the
                                                claim. Value of Filesystem is implied
                                                when not included in claim spec.
                                              type: string
                                            volumeName:
                                              description: volumeName is the binding
                                                reference to the PersistentVolume
                                                backing this claim.
                                              type: string
                                          type: object
                                      required:
                                      - spec
                                      type: object
                                  type: object
                                fc:
                                  description: fc represents a Fibre Channel resource
                                    that is attached to a kubelet's host machine and
                                    then exposed to the pod.
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        to mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. TODO: how do we prevent errors
                                        in the filesystem from compromising the machine'
                                      type: string
                                    lun:
                                      description: 'lun is Optional: FC target lun
                                        number'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: 'readOnly is Optional: Defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.'
                                      type: boolean
                                    targetWWNs:
                                      description: 'targetWWNs is Optional: FC target
                                        worldwide names (WWNs)'
                                      items:
                                        type: string
                                      type: array
                                    wwids:
                                      description: 'wwids Optional: FC volume world
                                        wide identifiers (wwids) Either wwids or combination
                                        of targetWWNs and lun must be set, but not
                                        both simultaneously.'
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                flexVolume:
                                  description: flexVolume represents a generic volume
                                    resource that is provisioned/attached using an
                                    exec based plugin.
                                  properties:
                                    driver:
                                      description: driver is the name of the driver
                                        to use for this volume.
                                      type: string
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". The default filesystem depends
                                        on FlexVolume script.
                                      type: string
                                    options:
                                      additionalProperties:
                                        type: string
                                      description: 'options is Optional: this field
                                        holds extra command options if any.'
                                      type: object
                                    readOnly:
                                      description: 'readOnly is Optional: defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is Optional: secretRef
                                        is reference to the secret object containing
                                        sensitive information to pass to the plugin
                                        scripts. This may be empty if no secret object
                                        is specified. If the secret object contains
                                        more than one secret, all secrets are passed
                                        to the plugin scripts.'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                  required:
                                  - driver
                                  type: object
                                flocker:
                                  description: flocker represents a Flocker volume
                                    attached to a kubelet's host machine. This depends
                                    on the Flocker control service being running
                                  properties:
                                    datasetName:
                                      description: datasetName is Name of the dataset
                                        stored as metadata -> name on the dataset
                                        for Flocker should be considered as deprecated
                                      type: string
                                    datasetUUID:
                                      description: datasetUUID is the UUID of the
                                        dataset. This is unique identifier of a Flocker
                                        dataset
                                      type: string
                                  type: object
                                gcePersistentDisk:
                                  description: 'gcePersistentDisk represents a GCE
                                    Disk resource that is attached to a kubelet''s
                                    host machine and then exposed to the pod. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                  properties:
                                    fsType:
                                      description: 'fsType is filesystem type of the
                                        volume that you want to mount. Tip: Ensure
                                        that the filesystem type is supported by the
                                        host operating system. Examples: "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    partition:
                                      description: 'partition is the partition in
                                        the volume that you want to mount. If omitted,
                                        the default is to mount by volume name. Examples:
                                        For volume /dev/sda1, you specify the partition
                                        as "1". Similarly, the volume partition for
                                        /dev/sda is "0" (or you can leave the property
                                        empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      format: int32
                                      type: integer
                                    pdName:
                                      description: 'pdName is unique name of the PD
                                        resource in GCE. Used to identify the disk
                                        in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      type: boolean
                                  required:
                                  - pdName
                                  type: object
                                gitRepo:
                                  description: 'gitRepo represents a git repository
                                    at a particular revision. DEPRECATED: GitRepo
                                    is deprecated. To provision a container with a
                                    git repo, mount an EmptyDir into an InitContainer
                                    that clones the repo using git, then mount the
                                    EmptyDir into the Pod''s container.'
                                  properties:
                                    directory:
                                      description: directory is the target directory
                                        name. Must not contain or start with '..'.  If
                                        '.' is supplied, the volume directory will
                                        be the git repository.  Otherwise, if specified,
                                        the volume will contain the git repository
                                        in the subdirectory with the given name.
                                      type: string
                                    repository:
                                      description: repository is the URL
                                      type: string
                                    revision:
                                      description: revision is the commit hash for
                                        the specified revision.
                                      type: string
                                  required:
                                  - repository
                                  type: object
                                glusterfs:
                                  description: 'glusterfs represents a Glusterfs mount
                                    on the host that shares a pod''s lifetime. More
                                    info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                  properties:
                                    endpoints:
                                      description: 'endpoints is the endpoint name
                                        that details Glusterfs topology. More info:
                                        https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: string
                                    path:
                                      description: 'path is the Glusterfs volume path.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the Glusterfs
                                        volume to be mounted with read-only permissions.
                                        Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: boolean
                                  required:
                                  - endpoints
                                  - path
                                  type: object
                                hostPath:
                                  description: 'hostPath represents a pre-existing
                                    file or directory on the host machine that is
                                    directly exposed to the container. This is generally
                                    used for system agents or other privileged things
                                    that are allowed to see the host machine. Most
                                    containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                    --- TODO(jonesdl) We need to restrict who can
                                    use host directory mounts and who can/can not
                                    mount host directories as read/write.'
                                  properties:
                                    path:
                                      description: 'path of the directory on the host.
                                        If the path is a symlink, it will follow the
                                        link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                      type: string
                                    type:
                                      description: 'type for HostPath Volume Defaults
                                        to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                      type: string
                                  required:
                                  - path
                                  type: object
                                iscsi:
                                  description: 'iscsi represents an ISCSI Disk resource
                                    that is attached to a kubelet''s host machine
                                    and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                  properties:
                                    chapAuthDiscovery:
                                      description: chapAuthDiscovery defines whether
                                        support iSCSI Discovery CHAP authentication
                                      type: boolean
                                    chapAuthSession:
                                      description: chapAuthSession defines whether
                                        support iSCSI Session CHAP authentication
                                      type: boolean
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    initiatorName:
                                      description: initiatorName is the custom iSCSI
                                        Initiator Name. If initiatorName is specified
                                        with iscsiInterface simultaneously, new iSCSI
                                        interface <target portal>:<volume name> will
                                        be created for the connection.
                                      type: string
                                    iqn:
                                      description: iqn is the target iSCSI Qualified
                                        Name.
                                      type: string
                                    iscsiInterface:
                                      description: iscsiInterface is the interface
                                        Name that uses an iSCSI transport. Defaults
                                        to 'default' (tcp).
                                      type: string
                                    lun:
                                      description: lun represents iSCSI Target Lun
                                        number.
                                      format: int32
                                      type: integer
                                    portals:
                                      description: portals is the iSCSI Target Portal
                                        List. The portal is either an IP or ip_addr:port
                                        if the port is other than default (typically
                                        TCP ports 860 and 3260).
                                      items:
                                        type: string
                                      type: array
                                    readOnly:
                                      description: readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                      type: boolean
                                    secretRef:
                                      description: secretRef is the CHAP Secret for
                                        iSCSI target and initiator authentication
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    targetPortal:
                                      description: targetPortal is iSCSI Target Portal.
                                        The Portal is either an IP or ip_addr:port
                                        if the port is other than default (typically
                                        TCP ports 860 and 3260).
                                      type: string
                                  required:
                                  - iqn
                                  - lun
                                  - targetPortal
                                  type: object
                                name:
                                  description: 'name of the volume. Must be a DNS_LABEL
                                    and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                nfs:
                                  description: 'nfs represents an NFS mount on the
                                    host that shares a pod''s lifetime More info:
                                    https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                  properties:
                                    path:
                                      description: 'path that is exported by the NFS
                                        server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the NFS
                                        export to be mounted with read-only permissions.
                                        Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: boolean
                                    server:
                                      description: 'server is the hostname or IP address
                                        of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: string
                                  required:
                                  - path
                                  - server
                                  type: object
                                persistentVolumeClaim:
                                  description: 'persistentVolumeClaimVolumeSource
                                    represents a reference to a PersistentVolumeClaim
                                    in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                  properties:
                                    claimName:
                                      description: 'claimName is the name of a PersistentVolumeClaim
                                        in the same namespace as the pod using this
                                        volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                      type: string
                                    readOnly:
                                      description: readOnly Will force the ReadOnly
                                        setting in VolumeMounts. Default false.
                                      type: boolean
                                  required:
                                  - claimName
                                  type: object
                                photonPersistentDisk:
                                  description: photonPersistentDisk represents a PhotonController
                                    persistent disk attached and mounted on kubelets
                                    host machine
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified.
                                      type: string
                                    pdID:
                                      description: pdID is the ID that identifies
                                        Photon Controller persistent disk
                                      type: string
                                  required:
                                  - pdID
                                  type: object
                                portworxVolume:
                                  description: portworxVolume represents a portworx
                                    volume attached and mounted on kubelets host machine
                                  properties:
                                    fsType:
                                      description: fSType represents the filesystem
                                        type to mount Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    volumeID:
                                      description: volumeID uniquely identifies a
                                        Portworx volume
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                projected:
                                  description: projected items for all in one resources
                                    secrets, configmaps, and downward API
                                  properties:
                                    defaultMode:
                                      description: defaultMode are the mode bits used
                                        to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777
                                        or a decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values, JSON
                                        requires decimal values for mode bits. Directories
                                        within the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    sources:
                                      description: sources is the list of volume projections
                                      items:
                                        description: Projection that may be projected
                                          along with other supported volume types
                                        properties:
                                          clusterTrustBundle:
                                            description: "ClusterTrustBundle allows\
                                              \ a pod to access the `.spec.trustBundle`\
                                              \ field of ClusterTrustBundle objects\
                                              \ in an auto-updating file. \n Alpha,\
                                              \ gated by the ClusterTrustBundleProjection\
                                              \ feature gate. \n ClusterTrustBundle\
                                              \ objects can either be selected by\
                                              \ name, or by the combination of signer\
                                              \ name and a label selector. \n Kubelet\
                                              \ performs aggressive normalization\
                                              \ of the PEM contents written into the\
                                              \ pod filesystem.  Esoteric PEM features\
                                              \ such as inter-block comments and block\
                                              \ headers are stripped.  Certificates\
                                              \ are deduplicated. The ordering of\
                                              \ certificates within the file is arbitrary,\
                                              \ and Kubelet may change the order over\
                                              \ time."
                                            properties:
                                              labelSelector:
                                                description: Select all ClusterTrustBundles
                                                  that match this label selector.  Only
                                                  has effect if signerName is set.  Mutually-exclusive
                                                  with name.  If unset, interpreted
                                                  as "match nothing".  If set but
                                                  empty, interpreted as "match everything".
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              name:
                                                description: Select a single ClusterTrustBundle
                                                  by object name.  Mutually-exclusive
                                                  with signerName and labelSelector.
                                                type: string
                                              optional:
                                                description: If true, don't block
                                                  pod startup if the referenced ClusterTrustBundle(s)
                                                  aren't available.  If using name,
                                                  then the named ClusterTrustBundle
                                                  is allowed not to exist.  If using
                                                  signerName, then the combination
                                                  of signerName and labelSelector
                                                  is allowed to match zero ClusterTrustBundles.
                                                type: boolean
                                              path:
                                                description: Relative path from the
                                                  volume root to write the bundle.
                                                type: string
                                              signerName:
                                                description: Select all ClusterTrustBundles
                                                  that match this signer name. Mutually-exclusive
                                                  with name.  The contents of all
                                                  selected ClusterTrustBundles will
                                                  be unified and deduplicated.
                                                type: string
                                            required:
                                            - path
                                            type: object
                                          configMap:
                                            description: configMap information about
                                              the configMap data to project
                                            properties:
                                              items:
                                                description: items if unspecified,
                                                  each key-value pair in the Data
                                                  field of the referenced ConfigMap
                                                  will be projected into the volume
                                                  as a file whose name is the key
                                                  and content is the value. If specified,
                                                  the listed keys will be projected
                                                  into the specified paths, and unlisted
                                                  keys will not be present. If a key
                                                  is specified which is not present
                                                  in the ConfigMap, the volume setup
                                                  will error unless it is marked optional.
                                                  Paths must be relative and may not
                                                  contain the '..' path or start with
                                                  '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: 'mode is Optional:
                                                        mode bits used to set permissions
                                                        on this file. Must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: path is the relative
                                                        path of the file to map the
                                                        key to. May not be an absolute
                                                        path. May not contain the
                                                        path element '..'. May not
                                                        start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: optional specify whether
                                                  the ConfigMap or its keys must be
                                                  defined
                                                type: boolean
                                            type: object
                                          downwardAPI:
                                            description: downwardAPI information about
                                              the downwardAPI data to project
                                            properties:
                                              items:
                                                description: Items is a list of DownwardAPIVolume
                                                  file
                                                items:
                                                  description: DownwardAPIVolumeFile
                                                    represents information to create
                                                    the file containing the pod field
                                                  properties:
                                                    fieldRef:
                                                      description: 'Required: Selects
                                                        a field of the pod: only annotations,
                                                        labels, name and namespace
                                                        are supported.'
                                                      properties:
                                                        apiVersion:
                                                          description: Version of
                                                            the schema the FieldPath
                                                            is written in terms of,
                                                            defaults to "v1".
                                                          type: string
                                                        fieldPath:
                                                          description: Path of the
                                                            field to select in the
                                                            specified API version.
                                                          type: string
                                                      required:
                                                      - fieldPath
                                                      type: object
                                                    mode:
                                                      description: 'Optional: mode
                                                        bits used to set permissions
                                                        on this file, must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: 'Required: Path
                                                        is  the relative path name
                                                        of the file to be created.
                                                        Must not be absolute or contain
                                                        the ''..'' path. Must be utf-8
                                                        encoded. The first item of
                                                        the relative path must not
                                                        start with ''..'''
                                                      type: string
                                                    resourceFieldRef:
                                                      description: 'Selects a resource
                                                        of the container: only resources
                                                        limits and requests (limits.cpu,
                                                        limits.memory, requests.cpu
                                                        and requests.memory) are currently
                                                        supported.'
                                                      properties:
                                                        containerName:
                                                          description: 'Container
                                                            name: required for volumes,
                                                            optional for env vars'
                                                          type: string
                                                        divisor:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Specifies the
                                                            output format of the exposed
                                                            resources, defaults to
                                                            "1"
                                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                          x-kubernetes-int-or-string: true
                                                        resource:
                                                          description: 'Required:
                                                            resource to select'
                                                          type: string
                                                      required:
                                                      - resource
                                                      type: object
                                                  required:
                                                  - path
                                                  type: object
                                                type: array
                                            type: object
                                          secret:
                                            description: secret information about
                                              the secret data to project
                                            properties:
                                              items:
                                                description: items if unspecified,
                                                  each key-value pair in the Data
                                                  field of the referenced Secret will
                                                  be projected into the volume as
                                                  a file whose name is the key and
                                                  content is the value. If specified,
                                                  the listed keys will be projected
                                                  into the specified paths, and unlisted
                                                  keys will not be present. If a key
                                                  is specified which is not present
                                                  in the Secret, the volume setup
                                                  will error unless it is marked optional.
                                                  Paths must be relative and may not
                                                  contain the '..' path or start with
                                                  '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: 'mode is Optional:
                                                        mode bits used to set permissions
                                                        on this file. Must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: path is the relative
                                                        path of the file to map the
                                                        key to. May not be an absolute
                                                        path. May not contain the
                                                        path element '..'. May not
                                                        start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: optional field specify
                                                  whether the Secret or its key must
                                                  be defined
                                                type: boolean
                                            type: object
                                          serviceAccountToken:
                                            description: serviceAccountToken is information
                                              about the serviceAccountToken data to
                                              project
                                            properties:
                                              audience:
                                                description: audience is the intended
                                                  audience of the token. A recipient
                                                  of a token must identify itself
                                                  with an identifier specified in
                                                  the audience of the token, and otherwise
                                                  should reject the token. The audience
                                                  defaults to the identifier of the
                                                  apiserver.
                                                type: string
                                              expirationSeconds:
                                                description: expirationSeconds is
                                                  the requested duration of validity
                                                  of the service account token. As
                                                  the token approaches expiration,
                                                  the kubelet volume plugin will proactively
                                                  rotate the service account token.
                                                  The kubelet will start trying to
                                                  rotate the token if the token is
                                                  older than 80 percent of its time
                                                  to live or if the token is older
                                                  than 24 hours.Defaults to 1 hour
                                                  and must be at least 10 minutes.
                                                format: int64
                                                type: integer
                                              path:
                                                description: path is the path relative
                                                  to the mount point of the file to
                                                  project the token into.
                                                type: string
                                            required:
                                            - path
                                            type: object
                                        type: object
                                      type: array
                                  type: object
                                quobyte:
                                  description: quobyte represents a Quobyte mount
                                    on the host that shares a pod's lifetime
                                  properties:
                                    group:
                                      description: group to map volume access to Default
                                        is no group
                                      type: string
                                    readOnly:
                                      description: readOnly here will force the Quobyte
                                        volume to be mounted with read-only permissions.
                                        Defaults to false.
                                      type: boolean
                                    registry:
                                      description: registry represents a single or
                                        multiple Quobyte Registry services specified
                                        as a string as host:port pair (multiple entries
                                        are separated with commas) which acts as the
                                        central registry for volumes
                                      type: string
                                    tenant:
                                      description: tenant owning the given Quobyte
                                        volume in the Backend Used with dynamically
                                        provisioned Quobyte volumes, value is set
                                        by the plugin
                                      type: string
                                    user:
                                      description: user to map volume access to Defaults
                                        to serivceaccount user
                                      type: string
                                    volume:
                                      description: volume is a string that references
                                        an already created Quobyte volume by name.
                                      type: string
                                  required:
                                  - registry
                                  - volume
                                  type: object
                                rbd:
                                  description: 'rbd represents a Rados Block Device
                                    mount on the host that shares a pod''s lifetime.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    image:
                                      description: 'image is the rados image name.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    keyring:
                                      description: 'keyring is the path to key ring
                                        for RBDUser. Default is /etc/ceph/keyring.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    monitors:
                                      description: 'monitors is a collection of Ceph
                                        monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      items:
                                        type: string
                                      type: array
                                    pool:
                                      description: 'pool is the rados pool name. Default
                                        is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is name of the authentication
                                        secret for RBDUser. If provided overrides
                                        keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    user:
                                      description: 'user is the rados user name. Default
                                        is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                  required:
                                  - image
                                  - monitors
                                  type: object
                                scaleIO:
                                  description: scaleIO represents a ScaleIO persistent
                                    volume attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Default is "xfs".
                                      type: string
                                    gateway:
                                      description: gateway is the host address of
                                        the ScaleIO API Gateway.
                                      type: string
                                    protectionDomain:
                                      description: protectionDomain is the name of
                                        the ScaleIO Protection Domain for the configured
                                        storage.
                                      type: string
                                    readOnly:
                                      description: readOnly Defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: secretRef references to the secret
                                        for ScaleIO user and other sensitive information.
                                        If this is not provided, Login operation will
                                        fail.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    sslEnabled:
                                      description: sslEnabled Flag enable/disable
                                        SSL communication with Gateway, default false
                                      type: boolean
                                    storageMode:
                                      description: storageMode indicates whether the
                                        storage for a volume should be ThickProvisioned
                                        or ThinProvisioned. Default is ThinProvisioned.
                                      type: string
                                    storagePool:
                                      description: storagePool is the ScaleIO Storage
                                        Pool associated with the protection domain.
                                      type: string
                                    system:
                                      description: system is the name of the storage
                                        system as configured in ScaleIO.
                                      type: string
                                    volumeName:
                                      description: volumeName is the name of a volume
                                        already created in the ScaleIO system that
                                        is associated with this volume source.
                                      type: string
                                  required:
                                  - gateway
                                  - secretRef
                                  - system
                                  type: object
                                secret:
                                  description: 'secret represents a secret that should
                                    populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                  properties:
                                    defaultMode:
                                      description: 'defaultMode is Optional: mode
                                        bits used to set permissions on created files
                                        by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: items If unspecified, each key-value
                                        pair in the Data field of the referenced Secret
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the Secret, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain
                                        the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    optional:
                                      description: optional field specify whether
                                        the Secret or its keys must be defined
                                      type: boolean
                                    secretName:
                                      description: 'secretName is the name of the
                                        secret in the pod''s namespace to use. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      type: string
                                  type: object
                                storageos:
                                  description: storageOS represents a StorageOS volume
                                    attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified.
                                      type: string
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: secretRef specifies the secret
                                        to use for obtaining the StorageOS API credentials.  If
                                        not specified, default values will be attempted.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    volumeName:
                                      description: volumeName is the human-readable
                                        name of the StorageOS volume.  Volume names
                                        are only unique within a namespace.
                                      type: string
                                    volumeNamespace:
                                      description: volumeNamespace specifies the scope
                                        of the volume within StorageOS.  If no namespace
                                        is specified then the Pod's namespace will
                                        be used.  This allows the Kubernetes name
                                        scoping to be mirrored within StorageOS for
                                        tighter integration. Set VolumeName to any
                                        name to override the default behaviour. Set
                                        to "default" if you are not using namespaces
                                        within StorageOS. Namespaces that do not pre-exist
                                        within StorageOS will be created.
                                      type: string
                                  type: object
                                vsphereVolume:
                                  description: vsphereVolume represents a vSphere
                                    volume attached and mounted on kubelets host machine
                                  properties:
                                    fsType:
                                      description: fsType is filesystem type to mount.
                                        Must be a filesystem type supported by the
                                        host operating system. Ex. "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    storagePolicyID:
                                      description: storagePolicyID is the storage
                                        Policy Based Management (SPBM) profile ID
                                        associated with the StoragePolicyName.
                                      type: string
                                    storagePolicyName:
                                      description: storagePolicyName is the storage
                                        Policy Based Management (SPBM) profile name.
                                      type: string
                                    volumePath:
                                      description: volumePath is the path that identifies
                                        vSphere volume vmdk
                                      type: string
                                  required:
                                  - volumePath
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                        type: object
                      replicas:
                        description: Defines the desired replica count for the pod
                        format: int32
                        type: integer
                      web:
                        description: If set to true, creates a service on the webPort
                          defined in the ClowdEnvironment resource, along with the
                          relevant liveness and readiness probes.
                        type: boolean
                      webServices:
                        description: 'WebServices defines the structs for the three
                          exposed web services: public, private and metrics.'
                        properties:
                          metrics:
                            description: MetricsWebService is the definition of the
                              metrics web service. This is automatically enabled and
                              the configuration here at the moment is included for
                              completeness, as there are no configurable options.
                            type: object
                          private:
                            description: PrivateWebService is the definition of the
                              private web service. There can be only one private service
                              managed by Clowder.
                            properties:
                              appProtocol:
                                description: AppProtocol determines the protocol to
                                  be used for the private port, (defaults to http)
                                enum:
                                - http
                                - http2
                                - https
                                - tcp
                                - tls
                                - grpc
                                - grpc-web
                                - mongo
                                - mysql
                                - redis
                                type: string
                              enabled:
                                description: Enabled describes if Clowder should enable
                                  the private service and provide the configuration
                                  in the cdappconfig.
                                type: boolean
                            type: object
                          public:
                            description: PublicWebService is the definition of the
                              public web service. There can be only one public service
                              managed by Clowder.
                            properties:
                              apiPath:
                                description: (DEPRECATED, use apiPaths instead) Configures
                                  a path named '/api/<apiPath>/' that this app will
                                  serve requests from.
                                type: string
                              apiPaths:
                                description: 'Defines a list of API paths (each matching
                                  format: "/api/some-path/") that this app will serve
                                  requests from.'
                                items:
                                  description: A string representing an API path that
                                    should route to this app for Clowder-managed Ingresses
                                    (in format "/api/somepath/")
                                  pattern: ^\/api\/[a-zA-Z0-9-]+\/$
                                  type: string
                                type: array
                              enabled:
                                description: Enabled describes if Clowder should enable
                                  the public service and provide the configuration
                                  in the cdappconfig.
                                type: boolean
                              sessionAffinity:
                                description: Set SessionAffinity to true to enable
                                  sticky sessions
                                type: boolean
                              whitelistPaths:
                                description: WhitelistPaths define the paths that
                                  do not require authentication
                                items:
                                  type: string
                                type: array
                            type: object
                        type: object
                    required:
                    - name
                    - podSpec
                    type: object
                  type: array
                disabled:
                  description: Disabled turns off reconciliation for this ClowdApp
                  type: boolean
                envName:
                  description: The name of the ClowdEnvironment resource that this
                    ClowdApp will use as its base. This does not mean that the ClowdApp
                    needs to be placed in the same directory as the targetNamespace
                    of the ClowdEnvironment.
                  type: string
                featureFlags:
                  description: If featureFlags is set to true, Clowder will pass configuration
                    of a FeatureFlags instance to the pods in the ClowdApp. This single
                    instance will be shared between all apps.
                  type: boolean
                inMemoryDb:
                  description: If inMemoryDb is set to true, Clowder will pass configuration
                    of an In Memory Database to the pods in the ClowdApp. This single
                    instance will be shared between all apps.
                  type: boolean
                jobs:
                  description: A list of jobs
                  items:
                    description: Job defines a ClowdJob A Job struct will deploy as
                      a CronJob if `schedule` is set and will deploy as a Job if it
                      is not set. Unsupported fields will be dropped from Jobs
                    properties:
                      activeDeadlineSeconds:
                        description: 'The activeDeadlineSeconds for the Job or CronJob.
                          More info: https://kubernetes.io/docs/concepts/workloads/controllers/job/'
                        format: int64
                        type: integer
                      completions:
                        description: Defines the completions of the job
                        format: int32
                        type: integer
                      concurrencyPolicy:
                        description: Defines the concurrency policy for the CronJob,
                          defaults to Allow Only applies to Cronjobs
                        type: string
                      disabled:
                        description: Disabled allows a job to be disabled, as such,
                          the resource is not created on the system and cannot be
                          invoked with a CJI
                        type: boolean
                      failedJobsHistoryLimit:
                        description: The number of failed finished jobs to retain.
                          Value must be non-negative integer. Defaults to 1. Only
                          applies to Cronjobs
                        format: int32
                        type: integer
                      name:
                        description: Name defines identifier of the Job. This name
                          will be used to name the CronJob resource, the container
                          will be name identically.
                        type: string
                      parallelism:
                        description: Defines the parallelism of the job
                        format: int32
                        type: integer
                      podSpec:
                        description: PodSpec defines a container running inside the
                          CronJob.
                        properties:
                          args:
                            description: A list of args to be passed to the pod container.
                            items:
                              type: string
                            type: array
                          command:
                            description: The command that will be invoked inside the
                              pod at startup.
                            items:
                              type: string
                            type: array
                          env:
                            description: A list of environment variables in k8s defined
                              format.
                            items:
                              description: EnvVar represents an environment variable
                                present in a Container.
                              properties:
                                name:
                                  description: Name of the environment variable. Must
                                    be a C_IDENTIFIER.
                                  type: string
                                value:
                                  description: 'Variable references $(VAR_NAME) are
                                    expanded using the previously defined environment
                                    variables in the container and any service environment
                                    variables. If a variable cannot be resolved, the
                                    reference in the input string will be unchanged.
                                    Double $$ are reduced to a single $, which allows
                                    for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                    will produce the string literal "$(VAR_NAME)".
                                    Escaped references will never be expanded, regardless
                                    of whether the variable exists or not. Defaults
                                    to "".'
                                  type: string
                                valueFrom:
                                  description: Source for the environment variable's
                                    value. Cannot be used if value is not empty.
                                  properties:
                                    configMapKeyRef:
                                      description: Selects a key of a ConfigMap.
                                      properties:
                                        key:
                                          description: The key to select.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                    fieldRef:
                                      description: 'Selects a field of the pod: supports
                                        metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                        `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                        spec.serviceAccountName, status.hostIP, status.podIP,
                                        status.podIPs.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select
                                            in the specified API version.
                                          type: string
                                      required:
                                      - fieldPath
                                      type: object
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                        only resources limits and requests (limits.cpu,
                                        limits.memory, limits.ephemeral-storage, requests.cpu,
                                        requests.memory and requests.ephemeral-storage)
                                        are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                            volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: Specifies the output format
                                            of the exposed resources, defaults to
                                            "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                      - resource
                                      type: object
                                    secretKeyRef:
                                      description: Selects a key of a secret in the
                                        pod's namespace
                                      properties:
                                        key:
                                          description: The key of the secret to select
                                            from.  Must be a valid secret key.
                                          type: string
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret
                                            or its key must be defined
                                          type: boolean
                                      required:
                                      - key
                                      type: object
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                          image:
                            description: Image refers to the container image used
                              to create the pod.
                            type: string
                          initContainers:
                            description: A list of init containers used to perform
                              at-startup operations.
                            items:
                              description: InitContainer is a struct defining a k8s
                                init container. This will be deployed along with the
                                parent pod and is used to carry out one time initialization
                                procedures.
                              properties:
                                args:
                                  description: A list of args to be passed to the
                                    init container.
                                  items:
                                    type: string
                                  type: array
                                command:
                                  description: A list of commands to run inside the
                                    parent Pod.
                                  items:
                                    type: string
                                  type: array
                                env:
                                  description: A list of environment variables used
                                    only by the initContainer.
                                  items:
                                    description: EnvVar represents an environment
                                      variable present in a Container.
                                    properties:
                                      name:
                                        description: Name of the environment variable.
                                          Must be a C_IDENTIFIER.
                                        type: string
                                      value:
                                        description: 'Variable references $(VAR_NAME)
                                          are expanded using the previously defined
                                          environment variables in the container and
                                          any service environment variables. If a
                                          variable cannot be resolved, the reference
                                          in the input string will be unchanged. Double
                                          $$ are reduced to a single $, which allows
                                          for escaping the $(VAR_NAME) syntax: i.e.
                                          "$$(VAR_NAME)" will produce the string literal
                                          "$(VAR_NAME)". Escaped references will never
                                          be expanded, regardless of whether the variable
                                          exists or not. Defaults to "".'
                                        type: string
                                      valueFrom:
                                        description: Source for the environment variable's
                                          value. Cannot be used if value is not empty.
                                        properties:
                                          configMapKeyRef:
                                            description: Selects a key of a ConfigMap.
                                            properties:
                                              key:
                                                description: The key to select.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the ConfigMap
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                          fieldRef:
                                            description: 'Selects a field of the pod:
                                              supports metadata.name, metadata.namespace,
                                              `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                                              spec.nodeName, spec.serviceAccountName,
                                              status.hostIP, status.podIP, status.podIPs.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              limits.ephemeral-storage, requests.cpu,
                                              requests.memory and requests.ephemeral-storage)
                                              are currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                          secretKeyRef:
                                            description: Selects a key of a secret
                                              in the pod's namespace
                                            properties:
                                              key:
                                                description: The key of the secret
                                                  to select from.  Must be a valid
                                                  secret key.
                                                type: string
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: Specify whether the Secret
                                                  or its key must be defined
                                                type: boolean
                                            required:
                                            - key
                                            type: object
                                        type: object
                                    required:
                                    - name
                                    type: object
                                  type: array
                                image:
                                  description: Image refers to the container image
                                    used to create the init container (if different
                                    from the primary pod image).
                                  type: string
                                inheritEnv:
                                  description: If true, inheirts the environment variables
                                    from the parent pod. specification
                                  type: boolean
                                name:
                                  description: Name gives an identifier in the situation
                                    where multiple init containers exist
                                  type: string
                              type: object
                            type: array
                          lifecycle:
                            description: A pass-through of Lifecycle specification
                              in standard k8s format
                            properties:
                              postStart:
                                description: 'PostStart is called immediately after
                                  a container is created. If the handler fails, the
                                  container is terminated and restarted according
                                  to its restart policy. Other management of the container
                                  blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The command
                                          is simply exec'd, it is not run inside a
                                          shell, so traditional shell instructions
                                          ('|', etc) won't work. To use a shell, you
                                          need to explicitly call out to that shell.
                                          Exit status of 0 is treated as live/healthy
                                          and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set
                                          "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the
                                          request. HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name.
                                                This will be canonicalized upon output,
                                                so case-variant names will be understood
                                                as the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Name or number of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting
                                          to the host. Defaults to HTTP.
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  sleep:
                                    description: Sleep represents the duration that
                                      the container should sleep before being terminated.
                                    properties:
                                      seconds:
                                        description: Seconds is the number of seconds
                                          to sleep.
                                        format: int64
                                        type: integer
                                    required:
                                    - seconds
                                    type: object
                                  tcpSocket:
                                    description: Deprecated. TCPSocket is NOT supported
                                      as a LifecycleHandler and kept for the backward
                                      compatibility. There are no validation of this
                                      field and lifecycle hooks will fail in runtime
                                      when tcp handler is specified.
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                          to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Number or name of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                type: object
                              preStop:
                                description: 'PreStop is called immediately before
                                  a container is terminated due to an API request
                                  or management event such as liveness/startup probe
                                  failure, preemption, resource contention, etc. The
                                  handler is not called if the container crashes or
                                  exits. The Pod''s termination grace period countdown
                                  begins before the PreStop hook is executed. Regardless
                                  of the outcome of the handler, the container will
                                  eventually terminate within the Pod''s termination
                                  grace period (unless delayed by finalizers). Other
                                  management of the container blocks until the hook
                                  completes or until the termination grace period
                                  is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                                properties:
                                  exec:
                                    description: Exec specifies the action to take.
                                    properties:
                                      command:
                                        description: Command is the command line to
                                          execute inside the container, the working
                                          directory for the command  is root ('/')
                                          in the container's filesystem. The command
                                          is simply exec'd, it is not run inside a
                                          shell, so traditional shell instructions
                                          ('|', etc) won't work. To use a shell, you
                                          need to explicitly call out to that shell.
                                          Exit status of 0 is treated as live/healthy
                                          and non-zero is unhealthy.
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  httpGet:
                                    description: HTTPGet specifies the http request
                                      to perform.
                                    properties:
                                      host:
                                        description: Host name to connect to, defaults
                                          to the pod IP. You probably want to set
                                          "Host" in httpHeaders instead.
                                        type: string
                                      httpHeaders:
                                        description: Custom headers to set in the
                                          request. HTTP allows repeated headers.
                                        items:
                                          description: HTTPHeader describes a custom
                                            header to be used in HTTP probes
                                          properties:
                                            name:
                                              description: The header field name.
                                                This will be canonicalized upon output,
                                                so case-variant names will be understood
                                                as the same header.
                                              type: string
                                            value:
                                              description: The header field value
                                              type: string
                                          required:
                                          - name
                                          - value
                                          type: object
                                        type: array
                                      path:
                                        description: Path to access on the HTTP server.
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Name or number of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                      scheme:
                                        description: Scheme to use for connecting
                                          to the host. Defaults to HTTP.
                                        type: string
                                    required:
                                    - port
                                    type: object
                                  sleep:
                                    description: Sleep represents the duration that
                                      the container should sleep before being terminated.
                                    properties:
                                      seconds:
                                        description: Seconds is the number of seconds
                                          to sleep.
                                        format: int64
                                        type: integer
                                    required:
                                    - seconds
                                    type: object
                                  tcpSocket:
                                    description: Deprecated. TCPSocket is NOT supported
                                      as a LifecycleHandler and kept for the backward
                                      compatibility. There are no validation of this
                                      field and lifecycle hooks will fail in runtime
                                      when tcp handler is specified.
                                    properties:
                                      host:
                                        description: 'Optional: Host name to connect
                                          to, defaults to the pod IP.'
                                        type: string
                                      port:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Number or name of the port to
                                          access on the container. Number must be
                                          in the range 1 to 65535. Name must be an
                                          IANA_SVC_NAME.
                                        x-kubernetes-int-or-string: true
                                    required:
                                    - port
                                    type: object
                                type: object
                            type: object
                          livenessProbe:
                            description: A pass-through of a Liveness Probe specification
                              in standard k8s format. If omitted, a standard probe
                              will be setup point to the webPort defined in the ClowdEnvironment
                              and a path of /healthz. Ignored if Web is set to false.
                            properties:
                              exec:
                                description: Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              grpc:
                                description: GRPC specifies an action involving a
                                  GRPC port.
                                properties:
                                  port:
                                    description: Port number of the gRPC service.
                                      Number must be in the range 1 to 65535.
                                    format: int32
                                    type: integer
                                  service:
                                    description: "Service is the name of the service\
                                      \ to place in the gRPC HealthCheckRequest (see\
                                      \ https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                      \ \n If this is not specified, the default behavior\
                                      \ is defined by gRPC."
                                    type: string
                                required:
                                - port
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name. This
                                            will be canonicalized upon output, so
                                            case-variant names will be understood
                                            as the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: TCPSocket specifies an action involving
                                  a TCP port.
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is a beta field and requires enabling ProbeTerminationGracePeriod
                                  feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                  is used if unset.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          machinePool:
                            description: MachinePool allows the pod to be scheduled
                              to a particular machine pool.
                            type: string
                          metadata:
                            description: Allows for defining custom PodSpec metadata,
                              such as annotations
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          readinessProbe:
                            description: A pass-through of a Readiness Probe specification
                              in standard k8s format. If omitted, a standard probe
                              will be setup point to the webPort defined in the ClowdEnvironment
                              and a path of /healthz. Ignored if Web is set to false.
                            properties:
                              exec:
                                description: Exec specifies the action to take.
                                properties:
                                  command:
                                    description: Command is the command line to execute
                                      inside the container, the working directory
                                      for the command  is root ('/') in the container's
                                      filesystem. The command is simply exec'd, it
                                      is not run inside a shell, so traditional shell
                                      instructions ('|', etc) won't work. To use a
                                      shell, you need to explicitly call out to that
                                      shell. Exit status of 0 is treated as live/healthy
                                      and non-zero is unhealthy.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              failureThreshold:
                                description: Minimum consecutive failures for the
                                  probe to be considered failed after having succeeded.
                                  Defaults to 3. Minimum value is 1.
                                format: int32
                                type: integer
                              grpc:
                                description: GRPC specifies an action involving a
                                  GRPC port.
                                properties:
                                  port:
                                    description: Port number of the gRPC service.
                                      Number must be in the range 1 to 65535.
                                    format: int32
                                    type: integer
                                  service:
                                    description: "Service is the name of the service\
                                      \ to place in the gRPC HealthCheckRequest (see\
                                      \ https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\
                                      \ \n If this is not specified, the default behavior\
                                      \ is defined by gRPC."
                                    type: string
                                required:
                                - port
                                type: object
                              httpGet:
                                description: HTTPGet specifies the http request to
                                  perform.
                                properties:
                                  host:
                                    description: Host name to connect to, defaults
                                      to the pod IP. You probably want to set "Host"
                                      in httpHeaders instead.
                                    type: string
                                  httpHeaders:
                                    description: Custom headers to set in the request.
                                      HTTP allows repeated headers.
                                    items:
                                      description: HTTPHeader describes a custom header
                                        to be used in HTTP probes
                                      properties:
                                        name:
                                          description: The header field name. This
                                            will be canonicalized upon output, so
                                            case-variant names will be understood
                                            as the same header.
                                          type: string
                                        value:
                                          description: The header field value
                                          type: string
                                      required:
                                      - name
                                      - value
                                      type: object
                                    type: array
                                  path:
                                    description: Path to access on the HTTP server.
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Name or number of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                  scheme:
                                    description: Scheme to use for connecting to the
                                      host. Defaults to HTTP.
                                    type: string
                                required:
                                - port
                                type: object
                              initialDelaySeconds:
                                description: 'Number of seconds after the container
                                  has started before liveness probes are initiated.
                                  More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                              periodSeconds:
                                description: How often (in seconds) to perform the
                                  probe. Default to 10 seconds. Minimum value is 1.
                                format: int32
                                type: integer
                              successThreshold:
                                description: Minimum consecutive successes for the
                                  probe to be considered successful after having failed.
                                  Defaults to 1. Must be 1 for liveness and startup.
                                  Minimum value is 1.
                                format: int32
                                type: integer
                              tcpSocket:
                                description: TCPSocket specifies an action involving
                                  a TCP port.
                                properties:
                                  host:
                                    description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                    type: string
                                  port:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Number or name of the port to access
                                      on the container. Number must be in the range
                                      1 to 65535. Name must be an IANA_SVC_NAME.
                                    x-kubernetes-int-or-string: true
                                required:
                                - port
                                type: object
                              terminationGracePeriodSeconds:
                                description: Optional duration in seconds the pod
                                  needs to terminate gracefully upon probe failure.
                                  The grace period is the duration in seconds after
                                  the processes running in the pod are sent a termination
                                  signal and the time when the processes are forcibly
                                  halted with a kill signal. Set this value longer
                                  than the expected cleanup time for your process.
                                  If this value is nil, the pod's terminationGracePeriodSeconds
                                  will be used. Otherwise, this value overrides the
                                  value provided by the pod spec. Value must be non-negative
                                  integer. The value zero indicates stop immediately
                                  via the kill signal (no opportunity to shut down).
                                  This is a beta field and requires enabling ProbeTerminationGracePeriod
                                  feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                  is used if unset.
                                format: int64
                                type: integer
                              timeoutSeconds:
                                description: 'Number of seconds after which the probe
                                  times out. Defaults to 1 second. Minimum value is
                                  1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                                format: int32
                                type: integer
                            type: object
                          resources:
                            description: A pass-through of a resource requirements
                              in k8s ResourceRequirements format. If omitted, the
                              default resource requirements from the ClowdEnvironment
                              will be used.
                            properties:
                              claims:
                                description: "Claims lists the names of resources,\
                                  \ defined in spec.resourceClaims, that are used\
                                  \ by this container. \n This is an alpha field and\
                                  \ requires enabling the DynamicResourceAllocation\
                                  \ feature gate. \n This field is immutable. It can\
                                  \ only be set for containers."
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: Name must match the name of one
                                        entry in pod.spec.resourceClaims of the Pod
                                        where this field is used. It makes that resource
                                        available inside a container.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. Requests cannot exceed Limits. More info:
                                  https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          sidecars:
                            description: Lists the expected side cars, will be validated
                              in the validating webhook
                            items:
                              properties:
                                enabled:
                                  description: Defines if the sidecar is enabled,
                                    defaults to False
                                  type: boolean
                                name:
                                  description: The name of the sidecar, only supported
                                    names allowed, (otel-collector, token-refresher)
                                  type: string
                              required:
                              - enabled
                              - name
                              type: object
                            type: array
                          terminationGracePeriodSeconds:
                            description: A pass-through of TerminationGracePeriodSeconds
                              specification in standard k8s format default is 30 seconds
                            format: int64
                            type: integer
                          volumeMounts:
                            description: A pass-through of a list of VolumesMounts
                              in standa k8s format.
                            items:
                              description: VolumeMount describes a mounting of a Volume
                                within a container.
                              properties:
                                mountPath:
                                  description: Path within the container at which
                                    the volume should be mounted.  Must not contain
                                    ':'.
                                  type: string
                                mountPropagation:
                                  description: mountPropagation determines how mounts
                                    are propagated from the host to container and
                                    the other way around. When not set, MountPropagationNone
                                    is used. This field is beta in 1.10.
                                  type: string
                                name:
                                  description: This must match the Name of a Volume.
                                  type: string
                                readOnly:
                                  description: Mounted read-only if true, read-write
                                    otherwise (false or unspecified). Defaults to
                                    false.
                                  type: boolean
                                subPath:
                                  description: Path within the volume from which the
                                    container's volume should be mounted. Defaults
                                    to "" (volume's root).
                                  type: string
                                subPathExpr:
                                  description: Expanded path within the volume from
                                    which the container's volume should be mounted.
                                    Behaves similarly to SubPath but environment variable
                                    references $(VAR_NAME) are expanded using the
                                    container's environment. Defaults to "" (volume's
                                    root). SubPathExpr and SubPath are mutually exclusive.
                                  type: string
                              required:
                              - mountPath
                              - name
                              type: object
                            type: array
                          volumes:
                            description: A pass-through of a list of Volumes in standa
                              k8s format.
                            items:
                              description: Volume represents a named volume in a pod
                                that may be accessed by any container in the pod.
                              properties:
                                awsElasticBlockStore:
                                  description: 'awsElasticBlockStore represents an
                                    AWS Disk resource that is attached to a kubelet''s
                                    host machine and then exposed to the pod. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    partition:
                                      description: 'partition is the partition in
                                        the volume that you want to mount. If omitted,
                                        the default is to mount by volume name. Examples:
                                        For volume /dev/sda1, you specify the partition
                                        as "1". Similarly, the volume partition for
                                        /dev/sda is "0" (or you can leave the property
                                        empty).'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: 'readOnly value true will force
                                        the readOnly setting in VolumeMounts. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      type: boolean
                                    volumeID:
                                      description: 'volumeID is unique ID of the persistent
                                        disk resource in AWS (Amazon EBS volume).
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                azureDisk:
                                  description: azureDisk represents an Azure Data
                                    Disk mount on the host and bind mount to the pod.
                                  properties:
                                    cachingMode:
                                      description: 'cachingMode is the Host Caching
                                        mode: None, Read Only, Read Write.'
                                      type: string
                                    diskName:
                                      description: diskName is the Name of the data
                                        disk in the blob storage
                                      type: string
                                    diskURI:
                                      description: diskURI is the URI of data disk
                                        in the blob storage
                                      type: string
                                    fsType:
                                      description: fsType is Filesystem type to mount.
                                        Must be a filesystem type supported by the
                                        host operating system. Ex. "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    kind:
                                      description: 'kind expected values are Shared:
                                        multiple blob disks per storage account  Dedicated:
                                        single blob disk per storage account  Managed:
                                        azure managed data disk (only in managed availability
                                        set). defaults to shared'
                                      type: string
                                    readOnly:
                                      description: readOnly Defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                  required:
                                  - diskName
                                  - diskURI
                                  type: object
                                azureFile:
                                  description: azureFile represents an Azure File
                                    Service mount on the host and bind mount to the
                                    pod.
                                  properties:
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretName:
                                      description: secretName is the  name of secret
                                        that contains Azure Storage Account Name and
                                        Key
                                      type: string
                                    shareName:
                                      description: shareName is the azure share Name
                                      type: string
                                  required:
                                  - secretName
                                  - shareName
                                  type: object
                                cephfs:
                                  description: cephFS represents a Ceph FS mount on
                                    the host that shares a pod's lifetime
                                  properties:
                                    monitors:
                                      description: 'monitors is Required: Monitors
                                        is a collection of Ceph monitors More info:
                                        https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      items:
                                        type: string
                                      type: array
                                    path:
                                      description: 'path is Optional: Used as the
                                        mounted root, rather than the full Ceph tree,
                                        default is /'
                                      type: string
                                    readOnly:
                                      description: 'readOnly is Optional: Defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.
                                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: boolean
                                    secretFile:
                                      description: 'secretFile is Optional: SecretFile
                                        is the path to key ring for User, default
                                        is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: string
                                    secretRef:
                                      description: 'secretRef is Optional: SecretRef
                                        is reference to the authentication secret
                                        for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    user:
                                      description: 'user is optional: User is the
                                        rados user name, default is admin More info:
                                        https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                      type: string
                                  required:
                                  - monitors
                                  type: object
                                cinder:
                                  description: 'cinder represents a cinder volume
                                    attached and mounted on kubelets host machine.
                                    More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        to mount. Must be a filesystem type supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: string
                                    readOnly:
                                      description: 'readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is optional: points
                                        to a secret object containing parameters used
                                        to connect to OpenStack.'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    volumeID:
                                      description: 'volumeID used to identify the
                                        volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                configMap:
                                  description: configMap represents a configMap that
                                    should populate this volume
                                  properties:
                                    defaultMode:
                                      description: 'defaultMode is optional: mode
                                        bits used to set permissions on created files
                                        by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: items if unspecified, each key-value
                                        pair in the Data field of the referenced ConfigMap
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the ConfigMap, the
                                        volume setup will error unless it is marked
                                        optional. Paths must be relative and may not
                                        contain the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                      type: string
                                    optional:
                                      description: optional specify whether the ConfigMap
                                        or its keys must be defined
                                      type: boolean
                                  type: object
                                csi:
                                  description: csi (Container Storage Interface) represents
                                    ephemeral storage that is handled by certain external
                                    CSI drivers (Beta feature).
                                  properties:
                                    driver:
                                      description: driver is the name of the CSI driver
                                        that handles this volume. Consult with your
                                        admin for the correct name as registered in
                                        the cluster.
                                      type: string
                                    fsType:
                                      description: fsType to mount. Ex. "ext4", "xfs",
                                        "ntfs". If not provided, the empty value is
                                        passed to the associated CSI driver which
                                        will determine the default filesystem to apply.
                                      type: string
                                    nodePublishSecretRef:
                                      description: nodePublishSecretRef is a reference
                                        to the secret object containing sensitive
                                        information to pass to the CSI driver to complete
                                        the CSI NodePublishVolume and NodeUnpublishVolume
                                        calls. This field is optional, and  may be
                                        empty if no secret is required. If the secret
                                        object contains more than one secret, all
                                        secret references are passed.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    readOnly:
                                      description: readOnly specifies a read-only
                                        configuration for the volume. Defaults to
                                        false (read/write).
                                      type: boolean
                                    volumeAttributes:
                                      additionalProperties:
                                        type: string
                                      description: volumeAttributes stores driver-specific
                                        properties that are passed to the CSI driver.
                                        Consult your driver's documentation for supported
                                        values.
                                      type: object
                                  required:
                                  - driver
                                  type: object
                                downwardAPI:
                                  description: downwardAPI represents downward API
                                    about the pod that should populate this volume
                                  properties:
                                    defaultMode:
                                      description: 'Optional: mode bits to use on
                                        created files by default. Must be a Optional:
                                        mode bits used to set permissions on created
                                        files by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: Items is a list of downward API
                                        volume file
                                      items:
                                        description: DownwardAPIVolumeFile represents
                                          information to create the file containing
                                          the pod field
                                        properties:
                                          fieldRef:
                                            description: 'Required: Selects a field
                                              of the pod: only annotations, labels,
                                              name and namespace are supported.'
                                            properties:
                                              apiVersion:
                                                description: Version of the schema
                                                  the FieldPath is written in terms
                                                  of, defaults to "v1".
                                                type: string
                                              fieldPath:
                                                description: Path of the field to
                                                  select in the specified API version.
                                                type: string
                                            required:
                                            - fieldPath
                                            type: object
                                          mode:
                                            description: 'Optional: mode bits used
                                              to set permissions on this file, must
                                              be an octal value between 0000 and 0777
                                              or a decimal value between 0 and 511.
                                              YAML accepts both octal and decimal
                                              values, JSON requires decimal values
                                              for mode bits. If not specified, the
                                              volume defaultMode will be used. This
                                              might be in conflict with other options
                                              that affect the file mode, like fsGroup,
                                              and the result can be other mode bits
                                              set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: 'Required: Path is  the relative
                                              path name of the file to be created.
                                              Must not be absolute or contain the
                                              ''..'' path. Must be utf-8 encoded.
                                              The first item of the relative path
                                              must not start with ''..'''
                                            type: string
                                          resourceFieldRef:
                                            description: 'Selects a resource of the
                                              container: only resources limits and
                                              requests (limits.cpu, limits.memory,
                                              requests.cpu and requests.memory) are
                                              currently supported.'
                                            properties:
                                              containerName:
                                                description: 'Container name: required
                                                  for volumes, optional for env vars'
                                                type: string
                                              divisor:
                                                anyOf:
                                                - type: integer
                                                - type: string
                                                description: Specifies the output
                                                  format of the exposed resources,
                                                  defaults to "1"
                                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                x-kubernetes-int-or-string: true
                                              resource:
                                                description: 'Required: resource to
                                                  select'
                                                type: string
                                            required:
                                            - resource
                                            type: object
                                        required:
                                        - path
                                        type: object
                                      type: array
                                  type: object
                                emptyDir:
                                  description: 'emptyDir represents a temporary directory
                                    that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                  properties:
                                    medium:
                                      description: 'medium represents what type of
                                        storage medium should back this directory.
                                        The default is "" which means to use the node''s
                                        default medium. Must be an empty string (default)
                                        or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      type: string
                                    sizeLimit:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: 'sizeLimit is the total amount
                                        of local storage required for this EmptyDir
                                        volume. The size limit is also applicable
                                        for memory medium. The maximum usage on memory
                                        medium EmptyDir would be the minimum value
                                        between the SizeLimit specified here and the
                                        sum of memory limits of all containers in
                                        a pod. The default is nil which means that
                                        the limit is undefined. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                      x-kubernetes-int-or-string: true
                                  type: object
                                ephemeral:
                                  description: "ephemeral represents a volume that\
                                    \ is handled by a cluster storage driver. The\
                                    \ volume's lifecycle is tied to the pod that defines\
                                    \ it - it will be created before the pod starts,\
                                    \ and deleted when the pod is removed. \n Use\
                                    \ this if: a) the volume is only needed while\
                                    \ the pod runs, b) features of normal volumes\
                                    \ like restoring from snapshot or capacity tracking\
                                    \ are needed, c) the storage driver is specified\
                                    \ through a storage class, and d) the storage\
                                    \ driver supports dynamic volume provisioning\
                                    \ through a PersistentVolumeClaim (see EphemeralVolumeSource\
                                    \ for more information on the connection between\
                                    \ this volume type and PersistentVolumeClaim).\
                                    \ \n Use PersistentVolumeClaim or one of the vendor-specific\
                                    \ APIs for volumes that persist for longer than\
                                    \ the lifecycle of an individual pod. \n Use CSI\
                                    \ for light-weight local ephemeral volumes if\
                                    \ the CSI driver is meant to be used that way\
                                    \ - see the documentation of the driver for more\
                                    \ information. \n A pod can use both types of\
                                    \ ephemeral volumes and persistent volumes at\
                                    \ the same time."
                                  properties:
                                    volumeClaimTemplate:
                                      description: "Will be used to create a stand-alone\
                                        \ PVC to provision the volume. The pod in\
                                        \ which this EphemeralVolumeSource is embedded\
                                        \ will be the owner of the PVC, i.e. the PVC\
                                        \ will be deleted together with the pod. \
                                        \ The name of the PVC will be `<pod name>-<volume\
                                        \ name>` where `<volume name>` is the name\
                                        \ from the `PodSpec.Volumes` array entry.\
                                        \ Pod validation will reject the pod if the\
                                        \ concatenated name is not valid for a PVC\
                                        \ (for example, too long). \n An existing\
                                        \ PVC with that name that is not owned by\
                                        \ the pod will *not* be used for the pod to\
                                        \ avoid using an unrelated volume by mistake.\
                                        \ Starting the pod is then blocked until the\
                                        \ unrelated PVC is removed. If such a pre-created\
                                        \ PVC is meant to be used by the pod, the\
                                        \ PVC has to updated with an owner reference\
                                        \ to the pod once the pod exists. Normally\
                                        \ this should not be necessary, but it may\
                                        \ be useful when manually reconstructing a\
                                        \ broken cluster. \n This field is read-only\
                                        \ and no changes will be made by Kubernetes\
                                        \ to the PVC after it has been created. \n\
                                        \ Required, must not be nil."
                                      properties:
                                        metadata:
                                          description: May contain labels and annotations
                                            that will be copied into the PVC when
                                            creating it. No other fields are allowed
                                            and will be rejected during validation.
                                          type: object
                                        spec:
                                          description: The specification for the PersistentVolumeClaim.
                                            The entire content is copied unchanged
                                            into the PVC that gets created from this
                                            template. The same fields as in a PersistentVolumeClaim
                                            are also valid here.
                                          properties:
                                            accessModes:
                                              description: 'accessModes contains the
                                                desired access modes the volume should
                                                have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                              items:
                                                type: string
                                              type: array
                                            dataSource:
                                              description: 'dataSource field can be
                                                used to specify either: * An existing
                                                VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                * An existing PVC (PersistentVolumeClaim)
                                                If the provisioner or an external
                                                controller can support the specified
                                                data source, it will create a new
                                                volume based on the contents of the
                                                specified data source. When the AnyVolumeDataSource
                                                feature gate is enabled, dataSource
                                                contents will be copied to dataSourceRef,
                                                and dataSourceRef contents will be
                                                copied to dataSource when dataSourceRef.namespace
                                                is not specified. If the namespace
                                                is specified, then dataSourceRef will
                                                not be copied to dataSource.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            dataSourceRef:
                                              description: 'dataSourceRef specifies
                                                the object from which to populate
                                                the volume with data, if a non-empty
                                                volume is desired. This may be any
                                                object from a non-empty API group
                                                (non core object) or a PersistentVolumeClaim
                                                object. When this field is specified,
                                                volume binding will only succeed if
                                                the type of the specified object matches
                                                some installed volume populator or
                                                dynamic provisioner. This field will
                                                replace the functionality of the dataSource
                                                field and as such if both fields are
                                                non-empty, they must have the same
                                                value. For backwards compatibility,
                                                when namespace isn''t specified in
                                                dataSourceRef, both fields (dataSource
                                                and dataSourceRef) will be set to
                                                the same value automatically if one
                                                of them is empty and the other is
                                                non-empty. When namespace is specified
                                                in dataSourceRef, dataSource isn''t
                                                set to the same value and must be
                                                empty. There are three important differences
                                                between dataSource and dataSourceRef:
                                                * While dataSource only allows two
                                                specific types of objects, dataSourceRef
                                                allows any non-core object, as well
                                                as PersistentVolumeClaim objects.
                                                * While dataSource ignores disallowed
                                                values (dropping them), dataSourceRef
                                                preserves all values, and generates
                                                an error if a disallowed value is
                                                specified. * While dataSource only
                                                allows local objects, dataSourceRef
                                                allows objects in any namespaces.
                                                (Beta) Using this field requires the
                                                AnyVolumeDataSource feature gate to
                                                be enabled. (Alpha) Using the namespace
                                                field of dataSourceRef requires the
                                                CrossNamespaceVolumeDataSource feature
                                                gate to be enabled.'
                                              properties:
                                                apiGroup:
                                                  description: APIGroup is the group
                                                    for the resource being referenced.
                                                    If APIGroup is not specified,
                                                    the specified Kind must be in
                                                    the core API group. For any other
                                                    third-party types, APIGroup is
                                                    required.
                                                  type: string
                                                kind:
                                                  description: Kind is the type of
                                                    resource being referenced
                                                  type: string
                                                name:
                                                  description: Name is the name of
                                                    resource being referenced
                                                  type: string
                                                namespace:
                                                  description: Namespace is the namespace
                                                    of resource being referenced Note
                                                    that when a namespace is specified,
                                                    a gateway.networking.k8s.io/ReferenceGrant
                                                    object is required in the referent
                                                    namespace to allow that namespace's
                                                    owner to accept the reference.
                                                    See the ReferenceGrant documentation
                                                    for details. (Alpha) This field
                                                    requires the CrossNamespaceVolumeDataSource
                                                    feature gate to be enabled.
                                                  type: string
                                              required:
                                              - kind
                                              - name
                                              type: object
                                            resources:
                                              description: 'resources represents the
                                                minimum resources the volume should
                                                have. If RecoverVolumeExpansionFailure
                                                feature is enabled users are allowed
                                                to specify resource requirements that
                                                are lower than previous value but
                                                must still be higher than capacity
                                                recorded in the status field of the
                                                claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                              properties:
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Limits describes the
                                                    maximum amount of compute resources
                                                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                    - type: integer
                                                    - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: 'Requests describes
                                                    the minimum amount of compute
                                                    resources required. If Requests
                                                    is omitted for a container, it
                                                    defaults to Limits if that is
                                                    explicitly specified, otherwise
                                                    to an implementation-defined value.
                                                    Requests cannot exceed Limits.
                                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                                  type: object
                                              type: object
                                            selector:
                                              description: selector is a label query
                                                over volumes to consider for binding.
                                              properties:
                                                matchExpressions:
                                                  description: matchExpressions is
                                                    a list of label selector requirements.
                                                    The requirements are ANDed.
                                                  items:
                                                    description: A label selector
                                                      requirement is a selector that
                                                      contains values, a key, and
                                                      an operator that relates the
                                                      key and values.
                                                    properties:
                                                      key:
                                                        description: key is the label
                                                          key that the selector applies
                                                          to.
                                                        type: string
                                                      operator:
                                                        description: operator represents
                                                          a key's relationship to
                                                          a set of values. Valid operators
                                                          are In, NotIn, Exists and
                                                          DoesNotExist.
                                                        type: string
                                                      values:
                                                        description: values is an
                                                          array of string values.
                                                          If the operator is In or
                                                          NotIn, the values array
                                                          must be non-empty. If the
                                                          operator is Exists or DoesNotExist,
                                                          the values array must be
                                                          empty. This array is replaced
                                                          during a strategic merge
                                                          patch.
                                                        items:
                                                          type: string
                                                        type: array
                                                    required:
                                                    - key
                                                    - operator
                                                    type: object
                                                  type: array
                                                matchLabels:
                                                  additionalProperties:
                                                    type: string
                                                  description: matchLabels is a map
                                                    of {key,value} pairs. A single
                                                    {key,value} in the matchLabels
                                                    map is equivalent to an element
                                                    of matchExpressions, whose key
                                                    field is "key", the operator is
                                                    "In", and the values array contains
                                                    only "value". The requirements
                                                    are ANDed.
                                                  type: object
                                              type: object
                                            storageClassName:
                                              description: 'storageClassName is the
                                                name of the StorageClass required
                                                by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                              type: string
                                            volumeAttributesClassName:
                                              description: 'volumeAttributesClassName
                                                may be used to set the VolumeAttributesClass
                                                used by this claim. If specified,
                                                the CSI driver will create or update
                                                the volume with the attributes defined
                                                in the corresponding VolumeAttributesClass.
                                                This has a different purpose than
                                                storageClassName, it can be changed
                                                after the claim is created. An empty
                                                string value means that no VolumeAttributesClass
                                                will be applied to the claim but it''s
                                                not allowed to reset this field to
                                                empty string once it is set. If unspecified
                                                and the PersistentVolumeClaim is unbound,
                                                the default VolumeAttributesClass
                                                will be set by the persistentvolume
                                                controller if it exists. If the resource
                                                referred to by volumeAttributesClass
                                                does not exist, this PersistentVolumeClaim
                                                will be set to a Pending state, as
                                                reflected by the modifyVolumeStatus
                                                field, until such as a resource exists.
                                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
                                                (Alpha) Using this field requires
                                                the VolumeAttributesClass feature
                                                gate to be enabled.'
                                              type: string
                                            volumeMode:
                                              description: volumeMode defines what
                                                type of volume is required by the
                                                claim. Value of Filesystem is implied
                                                when not included in claim spec.
                                              type: string
                                            volumeName:
                                              description: volumeName is the binding
                                                reference to the PersistentVolume
                                                backing this claim.
                                              type: string
                                          type: object
                                      required:
                                      - spec
                                      type: object
                                  type: object
                                fc:
                                  description: fc represents a Fibre Channel resource
                                    that is attached to a kubelet's host machine and
                                    then exposed to the pod.
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        to mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. TODO: how do we prevent errors
                                        in the filesystem from compromising the machine'
                                      type: string
                                    lun:
                                      description: 'lun is Optional: FC target lun
                                        number'
                                      format: int32
                                      type: integer
                                    readOnly:
                                      description: 'readOnly is Optional: Defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.'
                                      type: boolean
                                    targetWWNs:
                                      description: 'targetWWNs is Optional: FC target
                                        worldwide names (WWNs)'
                                      items:
                                        type: string
                                      type: array
                                    wwids:
                                      description: 'wwids Optional: FC volume world
                                        wide identifiers (wwids) Either wwids or combination
                                        of targetWWNs and lun must be set, but not
                                        both simultaneously.'
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                flexVolume:
                                  description: flexVolume represents a generic volume
                                    resource that is provisioned/attached using an
                                    exec based plugin.
                                  properties:
                                    driver:
                                      description: driver is the name of the driver
                                        to use for this volume.
                                      type: string
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". The default filesystem depends
                                        on FlexVolume script.
                                      type: string
                                    options:
                                      additionalProperties:
                                        type: string
                                      description: 'options is Optional: this field
                                        holds extra command options if any.'
                                      type: object
                                    readOnly:
                                      description: 'readOnly is Optional: defaults
                                        to false (read/write). ReadOnly here will
                                        force the ReadOnly setting in VolumeMounts.'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is Optional: secretRef
                                        is reference to the secret object containing
                                        sensitive information to pass to the plugin
                                        scripts. This may be empty if no secret object
                                        is specified. If the secret object contains
                                        more than one secret, all secrets are passed
                                        to the plugin scripts.'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                  required:
                                  - driver
                                  type: object
                                flocker:
                                  description: flocker represents a Flocker volume
                                    attached to a kubelet's host machine. This depends
                                    on the Flocker control service being running
                                  properties:
                                    datasetName:
                                      description: datasetName is Name of the dataset
                                        stored as metadata -> name on the dataset
                                        for Flocker should be considered as deprecated
                                      type: string
                                    datasetUUID:
                                      description: datasetUUID is the UUID of the
                                        dataset. This is unique identifier of a Flocker
                                        dataset
                                      type: string
                                  type: object
                                gcePersistentDisk:
                                  description: 'gcePersistentDisk represents a GCE
                                    Disk resource that is attached to a kubelet''s
                                    host machine and then exposed to the pod. More
                                    info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                  properties:
                                    fsType:
                                      description: 'fsType is filesystem type of the
                                        volume that you want to mount. Tip: Ensure
                                        that the filesystem type is supported by the
                                        host operating system. Examples: "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    partition:
                                      description: 'partition is the partition in
                                        the volume that you want to mount. If omitted,
                                        the default is to mount by volume name. Examples:
                                        For volume /dev/sda1, you specify the partition
                                        as "1". Similarly, the volume partition for
                                        /dev/sda is "0" (or you can leave the property
                                        empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      format: int32
                                      type: integer
                                    pdName:
                                      description: 'pdName is unique name of the PD
                                        resource in GCE. Used to identify the disk
                                        in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                      type: boolean
                                  required:
                                  - pdName
                                  type: object
                                gitRepo:
                                  description: 'gitRepo represents a git repository
                                    at a particular revision. DEPRECATED: GitRepo
                                    is deprecated. To provision a container with a
                                    git repo, mount an EmptyDir into an InitContainer
                                    that clones the repo using git, then mount the
                                    EmptyDir into the Pod''s container.'
                                  properties:
                                    directory:
                                      description: directory is the target directory
                                        name. Must not contain or start with '..'.  If
                                        '.' is supplied, the volume directory will
                                        be the git repository.  Otherwise, if specified,
                                        the volume will contain the git repository
                                        in the subdirectory with the given name.
                                      type: string
                                    repository:
                                      description: repository is the URL
                                      type: string
                                    revision:
                                      description: revision is the commit hash for
                                        the specified revision.
                                      type: string
                                  required:
                                  - repository
                                  type: object
                                glusterfs:
                                  description: 'glusterfs represents a Glusterfs mount
                                    on the host that shares a pod''s lifetime. More
                                    info: https://examples.k8s.io/volumes/glusterfs/README.md'
                                  properties:
                                    endpoints:
                                      description: 'endpoints is the endpoint name
                                        that details Glusterfs topology. More info:
                                        https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: string
                                    path:
                                      description: 'path is the Glusterfs volume path.
                                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the Glusterfs
                                        volume to be mounted with read-only permissions.
                                        Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                      type: boolean
                                  required:
                                  - endpoints
                                  - path
                                  type: object
                                hostPath:
                                  description: 'hostPath represents a pre-existing
                                    file or directory on the host machine that is
                                    directly exposed to the container. This is generally
                                    used for system agents or other privileged things
                                    that are allowed to see the host machine. Most
                                    containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                                    --- TODO(jonesdl) We need to restrict who can
                                    use host directory mounts and who can/can not
                                    mount host directories as read/write.'
                                  properties:
                                    path:
                                      description: 'path of the directory on the host.
                                        If the path is a symlink, it will follow the
                                        link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                      type: string
                                    type:
                                      description: 'type for HostPath Volume Defaults
                                        to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                      type: string
                                  required:
                                  - path
                                  type: object
                                iscsi:
                                  description: 'iscsi represents an ISCSI Disk resource
                                    that is attached to a kubelet''s host machine
                                    and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                                  properties:
                                    chapAuthDiscovery:
                                      description: chapAuthDiscovery defines whether
                                        support iSCSI Discovery CHAP authentication
                                      type: boolean
                                    chapAuthSession:
                                      description: chapAuthSession defines whether
                                        support iSCSI Session CHAP authentication
                                      type: boolean
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    initiatorName:
                                      description: initiatorName is the custom iSCSI
                                        Initiator Name. If initiatorName is specified
                                        with iscsiInterface simultaneously, new iSCSI
                                        interface <target portal>:<volume name> will
                                        be created for the connection.
                                      type: string
                                    iqn:
                                      description: iqn is the target iSCSI Qualified
                                        Name.
                                      type: string
                                    iscsiInterface:
                                      description: iscsiInterface is the interface
                                        Name that uses an iSCSI transport. Defaults
                                        to 'default' (tcp).
                                      type: string
                                    lun:
                                      description: lun represents iSCSI Target Lun
                                        number.
                                      format: int32
                                      type: integer
                                    portals:
                                      description: portals is the iSCSI Target Portal
                                        List. The portal is either an IP or ip_addr:port
                                        if the port is other than default (typically
                                        TCP ports 860 and 3260).
                                      items:
                                        type: string
                                      type: array
                                    readOnly:
                                      description: readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                      type: boolean
                                    secretRef:
                                      description: secretRef is the CHAP Secret for
                                        iSCSI target and initiator authentication
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    targetPortal:
                                      description: targetPortal is iSCSI Target Portal.
                                        The Portal is either an IP or ip_addr:port
                                        if the port is other than default (typically
                                        TCP ports 860 and 3260).
                                      type: string
                                  required:
                                  - iqn
                                  - lun
                                  - targetPortal
                                  type: object
                                name:
                                  description: 'name of the volume. Must be a DNS_LABEL
                                    and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                nfs:
                                  description: 'nfs represents an NFS mount on the
                                    host that shares a pod''s lifetime More info:
                                    https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                  properties:
                                    path:
                                      description: 'path that is exported by the NFS
                                        server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the NFS
                                        export to be mounted with read-only permissions.
                                        Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: boolean
                                    server:
                                      description: 'server is the hostname or IP address
                                        of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                      type: string
                                  required:
                                  - path
                                  - server
                                  type: object
                                persistentVolumeClaim:
                                  description: 'persistentVolumeClaimVolumeSource
                                    represents a reference to a PersistentVolumeClaim
                                    in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                  properties:
                                    claimName:
                                      description: 'claimName is the name of a PersistentVolumeClaim
                                        in the same namespace as the pod using this
                                        volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                      type: string
                                    readOnly:
                                      description: readOnly Will force the ReadOnly
                                        setting in VolumeMounts. Default false.
                                      type: boolean
                                  required:
                                  - claimName
                                  type: object
                                photonPersistentDisk:
                                  description: photonPersistentDisk represents a PhotonController
                                    persistent disk attached and mounted on kubelets
                                    host machine
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified.
                                      type: string
                                    pdID:
                                      description: pdID is the ID that identifies
                                        Photon Controller persistent disk
                                      type: string
                                  required:
                                  - pdID
                                  type: object
                                portworxVolume:
                                  description: portworxVolume represents a portworx
                                    volume attached and mounted on kubelets host machine
                                  properties:
                                    fsType:
                                      description: fSType represents the filesystem
                                        type to mount Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    volumeID:
                                      description: volumeID uniquely identifies a
                                        Portworx volume
                                      type: string
                                  required:
                                  - volumeID
                                  type: object
                                projected:
                                  description: projected items for all in one resources
                                    secrets, configmaps, and downward API
                                  properties:
                                    defaultMode:
                                      description: defaultMode are the mode bits used
                                        to set permissions on created files by default.
                                        Must be an octal value between 0000 and 0777
                                        or a decimal value between 0 and 511. YAML
                                        accepts both octal and decimal values, JSON
                                        requires decimal values for mode bits. Directories
                                        within the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.
                                      format: int32
                                      type: integer
                                    sources:
                                      description: sources is the list of volume projections
                                      items:
                                        description: Projection that may be projected
                                          along with other supported volume types
                                        properties:
                                          clusterTrustBundle:
                                            description: "ClusterTrustBundle allows\
                                              \ a pod to access the `.spec.trustBundle`\
                                              \ field of ClusterTrustBundle objects\
                                              \ in an auto-updating file. \n Alpha,\
                                              \ gated by the ClusterTrustBundleProjection\
                                              \ feature gate. \n ClusterTrustBundle\
                                              \ objects can either be selected by\
                                              \ name, or by the combination of signer\
                                              \ name and a label selector. \n Kubelet\
                                              \ performs aggressive normalization\
                                              \ of the PEM contents written into the\
                                              \ pod filesystem.  Esoteric PEM features\
                                              \ such as inter-block comments and block\
                                              \ headers are stripped.  Certificates\
                                              \ are deduplicated. The ordering of\
                                              \ certificates within the file is arbitrary,\
                                              \ and Kubelet may change the order over\
                                              \ time."
                                            properties:
                                              labelSelector:
                                                description: Select all ClusterTrustBundles
                                                  that match this label selector.  Only
                                                  has effect if signerName is set.  Mutually-exclusive
                                                  with name.  If unset, interpreted
                                                  as "match nothing".  If set but
                                                  empty, interpreted as "match everything".
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions
                                                      is a list of label selector
                                                      requirements. The requirements
                                                      are ANDed.
                                                    items:
                                                      description: A label selector
                                                        requirement is a selector
                                                        that contains values, a key,
                                                        and an operator that relates
                                                        the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the
                                                            label key that the selector
                                                            applies to.
                                                          type: string
                                                        operator:
                                                          description: operator represents
                                                            a key's relationship to
                                                            a set of values. Valid
                                                            operators are In, NotIn,
                                                            Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: values is an
                                                            array of string values.
                                                            If the operator is In
                                                            or NotIn, the values array
                                                            must be non-empty. If
                                                            the operator is Exists
                                                            or DoesNotExist, the values
                                                            array must be empty. This
                                                            array is replaced during
                                                            a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                      required:
                                                      - key
                                                      - operator
                                                      type: object
                                                    type: array
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: matchLabels is a
                                                      map of {key,value} pairs. A
                                                      single {key,value} in the matchLabels
                                                      map is equivalent to an element
                                                      of matchExpressions, whose key
                                                      field is "key", the operator
                                                      is "In", and the values array
                                                      contains only "value". The requirements
                                                      are ANDed.
                                                    type: object
                                                type: object
                                              name:
                                                description: Select a single ClusterTrustBundle
                                                  by object name.  Mutually-exclusive
                                                  with signerName and labelSelector.
                                                type: string
                                              optional:
                                                description: If true, don't block
                                                  pod startup if the referenced ClusterTrustBundle(s)
                                                  aren't available.  If using name,
                                                  then the named ClusterTrustBundle
                                                  is allowed not to exist.  If using
                                                  signerName, then the combination
                                                  of signerName and labelSelector
                                                  is allowed to match zero ClusterTrustBundles.
                                                type: boolean
                                              path:
                                                description: Relative path from the
                                                  volume root to write the bundle.
                                                type: string
                                              signerName:
                                                description: Select all ClusterTrustBundles
                                                  that match this signer name. Mutually-exclusive
                                                  with name.  The contents of all
                                                  selected ClusterTrustBundles will
                                                  be unified and deduplicated.
                                                type: string
                                            required:
                                            - path
                                            type: object
                                          configMap:
                                            description: configMap information about
                                              the configMap data to project
                                            properties:
                                              items:
                                                description: items if unspecified,
                                                  each key-value pair in the Data
                                                  field of the referenced ConfigMap
                                                  will be projected into the volume
                                                  as a file whose name is the key
                                                  and content is the value. If specified,
                                                  the listed keys will be projected
                                                  into the specified paths, and unlisted
                                                  keys will not be present. If a key
                                                  is specified which is not present
                                                  in the ConfigMap, the volume setup
                                                  will error unless it is marked optional.
                                                  Paths must be relative and may not
                                                  contain the '..' path or start with
                                                  '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: 'mode is Optional:
                                                        mode bits used to set permissions
                                                        on this file. Must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: path is the relative
                                                        path of the file to map the
                                                        key to. May not be an absolute
                                                        path. May not contain the
                                                        path element '..'. May not
                                                        start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: optional specify whether
                                                  the ConfigMap or its keys must be
                                                  defined
                                                type: boolean
                                            type: object
                                          downwardAPI:
                                            description: downwardAPI information about
                                              the downwardAPI data to project
                                            properties:
                                              items:
                                                description: Items is a list of DownwardAPIVolume
                                                  file
                                                items:
                                                  description: DownwardAPIVolumeFile
                                                    represents information to create
                                                    the file containing the pod field
                                                  properties:
                                                    fieldRef:
                                                      description: 'Required: Selects
                                                        a field of the pod: only annotations,
                                                        labels, name and namespace
                                                        are supported.'
                                                      properties:
                                                        apiVersion:
                                                          description: Version of
                                                            the schema the FieldPath
                                                            is written in terms of,
                                                            defaults to "v1".
                                                          type: string
                                                        fieldPath:
                                                          description: Path of the
                                                            field to select in the
                                                            specified API version.
                                                          type: string
                                                      required:
                                                      - fieldPath
                                                      type: object
                                                    mode:
                                                      description: 'Optional: mode
                                                        bits used to set permissions
                                                        on this file, must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: 'Required: Path
                                                        is  the relative path name
                                                        of the file to be created.
                                                        Must not be absolute or contain
                                                        the ''..'' path. Must be utf-8
                                                        encoded. The first item of
                                                        the relative path must not
                                                        start with ''..'''
                                                      type: string
                                                    resourceFieldRef:
                                                      description: 'Selects a resource
                                                        of the container: only resources
                                                        limits and requests (limits.cpu,
                                                        limits.memory, requests.cpu
                                                        and requests.memory) are currently
                                                        supported.'
                                                      properties:
                                                        containerName:
                                                          description: 'Container
                                                            name: required for volumes,
                                                            optional for env vars'
                                                          type: string
                                                        divisor:
                                                          anyOf:
                                                          - type: integer
                                                          - type: string
                                                          description: Specifies the
                                                            output format of the exposed
                                                            resources, defaults to
                                                            "1"
                                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                          x-kubernetes-int-or-string: true
                                                        resource:
                                                          description: 'Required:
                                                            resource to select'
                                                          type: string
                                                      required:
                                                      - resource
                                                      type: object
                                                  required:
                                                  - path
                                                  type: object
                                                type: array
                                            type: object
                                          secret:
                                            description: secret information about
                                              the secret data to project
                                            properties:
                                              items:
                                                description: items if unspecified,
                                                  each key-value pair in the Data
                                                  field of the referenced Secret will
                                                  be projected into the volume as
                                                  a file whose name is the key and
                                                  content is the value. If specified,
                                                  the listed keys will be projected
                                                  into the specified paths, and unlisted
                                                  keys will not be present. If a key
                                                  is specified which is not present
                                                  in the Secret, the volume setup
                                                  will error unless it is marked optional.
                                                  Paths must be relative and may not
                                                  contain the '..' path or start with
                                                  '..'.
                                                items:
                                                  description: Maps a string key to
                                                    a path within a volume.
                                                  properties:
                                                    key:
                                                      description: key is the key
                                                        to project.
                                                      type: string
                                                    mode:
                                                      description: 'mode is Optional:
                                                        mode bits used to set permissions
                                                        on this file. Must be an octal
                                                        value between 0000 and 0777
                                                        or a decimal value between
                                                        0 and 511. YAML accepts both
                                                        octal and decimal values,
                                                        JSON requires decimal values
                                                        for mode bits. If not specified,
                                                        the volume defaultMode will
                                                        be used. This might be in
                                                        conflict with other options
                                                        that affect the file mode,
                                                        like fsGroup, and the result
                                                        can be other mode bits set.'
                                                      format: int32
                                                      type: integer
                                                    path:
                                                      description: path is the relative
                                                        path of the file to map the
                                                        key to. May not be an absolute
                                                        path. May not contain the
                                                        path element '..'. May not
                                                        start with the string '..'.
                                                      type: string
                                                  required:
                                                  - key
                                                  - path
                                                  type: object
                                                type: array
                                              name:
                                                description: 'Name of the referent.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                  TODO: Add other useful fields. apiVersion,
                                                  kind, uid?'
                                                type: string
                                              optional:
                                                description: optional field specify
                                                  whether the Secret or its key must
                                                  be defined
                                                type: boolean
                                            type: object
                                          serviceAccountToken:
                                            description: serviceAccountToken is information
                                              about the serviceAccountToken data to
                                              project
                                            properties:
                                              audience:
                                                description: audience is the intended
                                                  audience of the token. A recipient
                                                  of a token must identify itself
                                                  with an identifier specified in
                                                  the audience of the token, and otherwise
                                                  should reject the token. The audience
                                                  defaults to the identifier of the
                                                  apiserver.
                                                type: string
                                              expirationSeconds:
                                                description: expirationSeconds is
                                                  the requested duration of validity
                                                  of the service account token. As
                                                  the token approaches expiration,
                                                  the kubelet volume plugin will proactively
                                                  rotate the service account token.
                                                  The kubelet will start trying to
                                                  rotate the token if the token is
                                                  older than 80 percent of its time
                                                  to live or if the token is older
                                                  than 24 hours.Defaults to 1 hour
                                                  and must be at least 10 minutes.
                                                format: int64
                                                type: integer
                                              path:
                                                description: path is the path relative
                                                  to the mount point of the file to
                                                  project the token into.
                                                type: string
                                            required:
                                            - path
                                            type: object
                                        type: object
                                      type: array
                                  type: object
                                quobyte:
                                  description: quobyte represents a Quobyte mount
                                    on the host that shares a pod's lifetime
                                  properties:
                                    group:
                                      description: group to map volume access to Default
                                        is no group
                                      type: string
                                    readOnly:
                                      description: readOnly here will force the Quobyte
                                        volume to be mounted with read-only permissions.
                                        Defaults to false.
                                      type: boolean
                                    registry:
                                      description: registry represents a single or
                                        multiple Quobyte Registry services specified
                                        as a string as host:port pair (multiple entries
                                        are separated with commas) which acts as the
                                        central registry for volumes
                                      type: string
                                    tenant:
                                      description: tenant owning the given Quobyte
                                        volume in the Backend Used with dynamically
                                        provisioned Quobyte volumes, value is set
                                        by the plugin
                                      type: string
                                    user:
                                      description: user to map volume access to Defaults
                                        to serivceaccount user
                                      type: string
                                    volume:
                                      description: volume is a string that references
                                        an already created Quobyte volume by name.
                                      type: string
                                  required:
                                  - registry
                                  - volume
                                  type: object
                                rbd:
                                  description: 'rbd represents a Rados Block Device
                                    mount on the host that shares a pod''s lifetime.
                                    More info: https://examples.k8s.io/volumes/rbd/README.md'
                                  properties:
                                    fsType:
                                      description: 'fsType is the filesystem type
                                        of the volume that you want to mount. Tip:
                                        Ensure that the filesystem type is supported
                                        by the host operating system. Examples: "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                        TODO: how do we prevent errors in the filesystem
                                        from compromising the machine'
                                      type: string
                                    image:
                                      description: 'image is the rados image name.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    keyring:
                                      description: 'keyring is the path to key ring
                                        for RBDUser. Default is /etc/ceph/keyring.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    monitors:
                                      description: 'monitors is a collection of Ceph
                                        monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      items:
                                        type: string
                                      type: array
                                    pool:
                                      description: 'pool is the rados pool name. Default
                                        is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                    readOnly:
                                      description: 'readOnly here will force the ReadOnly
                                        setting in VolumeMounts. Defaults to false.
                                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: boolean
                                    secretRef:
                                      description: 'secretRef is name of the authentication
                                        secret for RBDUser. If provided overrides
                                        keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    user:
                                      description: 'user is the rados user name. Default
                                        is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                      type: string
                                  required:
                                  - image
                                  - monitors
                                  type: object
                                scaleIO:
                                  description: scaleIO represents a ScaleIO persistent
                                    volume attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Default is "xfs".
                                      type: string
                                    gateway:
                                      description: gateway is the host address of
                                        the ScaleIO API Gateway.
                                      type: string
                                    protectionDomain:
                                      description: protectionDomain is the name of
                                        the ScaleIO Protection Domain for the configured
                                        storage.
                                      type: string
                                    readOnly:
                                      description: readOnly Defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: secretRef references to the secret
                                        for ScaleIO user and other sensitive information.
                                        If this is not provided, Login operation will
                                        fail.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    sslEnabled:
                                      description: sslEnabled Flag enable/disable
                                        SSL communication with Gateway, default false
                                      type: boolean
                                    storageMode:
                                      description: storageMode indicates whether the
                                        storage for a volume should be ThickProvisioned
                                        or ThinProvisioned. Default is ThinProvisioned.
                                      type: string
                                    storagePool:
                                      description: storagePool is the ScaleIO Storage
                                        Pool associated with the protection domain.
                                      type: string
                                    system:
                                      description: system is the name of the storage
                                        system as configured in ScaleIO.
                                      type: string
                                    volumeName:
                                      description: volumeName is the name of a volume
                                        already created in the ScaleIO system that
                                        is associated with this volume source.
                                      type: string
                                  required:
                                  - gateway
                                  - secretRef
                                  - system
                                  type: object
                                secret:
                                  description: 'secret represents a secret that should
                                    populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                  properties:
                                    defaultMode:
                                      description: 'defaultMode is Optional: mode
                                        bits used to set permissions on created files
                                        by default. Must be an octal value between
                                        0000 and 0777 or a decimal value between 0
                                        and 511. YAML accepts both octal and decimal
                                        values, JSON requires decimal values for mode
                                        bits. Defaults to 0644. Directories within
                                        the path are not affected by this setting.
                                        This might be in conflict with other options
                                        that affect the file mode, like fsGroup, and
                                        the result can be other mode bits set.'
                                      format: int32
                                      type: integer
                                    items:
                                      description: items If unspecified, each key-value
                                        pair in the Data field of the referenced Secret
                                        will be projected into the volume as a file
                                        whose name is the key and content is the value.
                                        If specified, the listed keys will be projected
                                        into the specified paths, and unlisted keys
                                        will not be present. If a key is specified
                                        which is not present in the Secret, the volume
                                        setup will error unless it is marked optional.
                                        Paths must be relative and may not contain
                                        the '..' path or start with '..'.
                                      items:
                                        description: Maps a string key to a path within
                                          a volume.
                                        properties:
                                          key:
                                            description: key is the key to project.
                                            type: string
                                          mode:
                                            description: 'mode is Optional: mode bits
                                              used to set permissions on this file.
                                              Must be an octal value between 0000
                                              and 0777 or a decimal value between
                                              0 and 511. YAML accepts both octal and
                                              decimal values, JSON requires decimal
                                              values for mode bits. If not specified,
                                              the volume defaultMode will be used.
                                              This might be in conflict with other
                                              options that affect the file mode, like
                                              fsGroup, and the result can be other
                                              mode bits set.'
                                            format: int32
                                            type: integer
                                          path:
                                            description: path is the relative path
                                              of the file to map the key to. May not
                                              be an absolute path. May not contain
                                              the path element '..'. May not start
                                              with the string '..'.
                                            type: string
                                        required:
                                        - key
                                        - path
                                        type: object
                                      type: array
                                    optional:
                                      description: optional field specify whether
                                        the Secret or its keys must be defined
                                      type: boolean
                                    secretName:
                                      description: 'secretName is the name of the
                                        secret in the pod''s namespace to use. More
                                        info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                      type: string
                                  type: object
                                storageos:
                                  description: storageOS represents a StorageOS volume
                                    attached and mounted on Kubernetes nodes.
                                  properties:
                                    fsType:
                                      description: fsType is the filesystem type to
                                        mount. Must be a filesystem type supported
                                        by the host operating system. Ex. "ext4",
                                        "xfs", "ntfs". Implicitly inferred to be "ext4"
                                        if unspecified.
                                      type: string
                                    readOnly:
                                      description: readOnly defaults to false (read/write).
                                        ReadOnly here will force the ReadOnly setting
                                        in VolumeMounts.
                                      type: boolean
                                    secretRef:
                                      description: secretRef specifies the secret
                                        to use for obtaining the StorageOS API credentials.  If
                                        not specified, default values will be attempted.
                                      properties:
                                        name:
                                          description: 'Name of the referent. More
                                            info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            TODO: Add other useful fields. apiVersion,
                                            kind, uid?'
                                          type: string
                                      type: object
                                    volumeName:
                                      description: volumeName is the human-readable
                                        name of the StorageOS volume.  Volume names
                                        are only unique within a namespace.
                                      type: string
                                    volumeNamespace:
                                      description: volumeNamespace specifies the scope
                                        of the volume within StorageOS.  If no namespace
                                        is specified then the Pod's namespace will
                                        be used.  This allows the Kubernetes name
                                        scoping to be mirrored within StorageOS for
                                        tighter integration. Set VolumeName to any
                                        name to override the default behaviour. Set
                                        to "default" if you are not using namespaces
                                        within StorageOS. Namespaces that do not pre-exist
                                        within StorageOS will be created.
                                      type: string
                                  type: object
                                vsphereVolume:
                                  description: vsphereVolume represents a vSphere
                                    volume attached and mounted on kubelets host machine
                                  properties:
                                    fsType:
                                      description: fsType is filesystem type to mount.
                                        Must be a filesystem type supported by the
                                        host operating system. Ex. "ext4", "xfs",
                                        "ntfs". Implicitly inferred to be "ext4" if
                                        unspecified.
                                      type: string
                                    storagePolicyID:
                                      description: storagePolicyID is the storage
                                        Policy Based Management (SPBM) profile ID
                                        associated with the StoragePolicyName.
                                      type: string
                                    storagePolicyName:
                                      description: storagePolicyName is the storage
                                        Policy Based Management (SPBM) profile name.
                                      type: string
                                    volumePath:
                                      description: volumePath is the path that identifies
                                        vSphere volume vmdk
                                      type: string
                                  required:
                                  - volumePath
                                  type: object
                              required:
                              - name
                              type: object
                            type: array
                        type: object
                      restartPolicy:
                        description: Defines the restart policy for the CronJob, defaults
                          to never
                        type: string
                      schedule:
                        description: Defines the schedule for the job to run
                        type: string
                      startingDeadlineSeconds:
                        description: Defines the StartingDeadlineSeconds for the CronJob
                        format: int64
                        type: integer
                      successfulJobsHistoryLimit:
                        description: The number of successful finished jobs to retain.
                          Value must be non-negative integer. Defaults to 3. Only
                          applies to Cronjobs
                        format: int32
                        type: integer
                      suspend:
                        description: This flag tells the controller to suspend subsequent
                          executions, it does not apply to already started executions.  Defaults
                          to false. Only applies to Cronjobs
                        type: boolean
                    required:
                    - name
                    - podSpec
                    type: object
                  type: array
                kafkaTopics:
                  description: A list of Kafka topics that will be created and made
                    available to all the pods listed in the ClowdApp.
                  items:
                    description: KafkaTopicSpec defines the desired state of KafkaTopic
                    properties:
                      config:
                        additionalProperties:
                          type: string
                        description: A key/value pair describing the configuration
                          of a particular topic.
                        type: object
                      partitions:
                        description: The requested number of partitions for this topic.
                          If unset, default is '3'
                        format: int32
                        maximum: 200000
                        minimum: 1
                        type: integer
                      replicas:
                        description: The requested number of replicas for this topic.
                          If unset, default is '3'
                        format: int32
                        maximum: 32767
                        minimum: 1
                        type: integer
                      topicName:
                        description: The requested name for this topic.
                        maxLength: 249
                        minLength: 1
                        pattern: '[a-zA-Z0-9\._\-]'
                        type: string
                    required:
                    - topicName
                    type: object
                  type: array
                objectStore:
                  description: A list of string names defining storage buckets. In
                    certain modes, defined by the ClowdEnvironment, Clowder will create
                    those buckets.
                  items:
                    type: string
                  type: array
                optionalDependencies:
                  description: A list of optional dependencies in the form of the
                    name of the ClowdApps that will be added to the configuration
                    when present.
                  items:
                    type: string
                  type: array
                testing:
                  description: Iqe plugin and other specifics
                  properties:
                    iqePlugin:
                      type: string
                  required:
                  - iqePlugin
                  type: object
              required:
              - envName
              type: object
            status:
              description: ClowdAppStatus defines the observed state of ClowdApp
              properties:
                conditions:
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                deployments:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file ClowdEnvironmentStatus defines the observed state of
                    ClowdEnvironment'
                  properties:
                    managedDeployments:
                      format: int32
                      type: integer
                    readyDeployments:
                      format: int32
                      type: integer
                  required:
                  - managedDeployments
                  - readyDeployments
                  type: object
                ready:
                  type: boolean
              required:
              - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ''
      plural: ''
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.8.0
    creationTimestamp: null
    name: clowdenvironments.cloud.redhat.com
  spec:
    group: cloud.redhat.com
    names:
      kind: ClowdEnvironment
      listKind: ClowdEnvironmentList
      plural: clowdenvironments
      shortNames:
      - env
      singular: clowdenvironment
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.deployments.readyDeployments
        name: Ready
        type: integer
      - jsonPath: .status.deployments.managedDeployments
        name: Managed
        type: integer
      - jsonPath: .status.targetNamespace
        name: Namespace
        type: string
      - jsonPath: .metadata.creationTimestamp
        name: Age
        type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClowdEnvironment is the Schema for the clowdenvironments API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: A ClowdEnvironmentSpec object.
              properties:
                disabled:
                  description: Disabled turns off reconciliation for this ClowdEnv
                  type: boolean
                providers:
                  description: A ProvidersConfig object, detailing the setup and configuration
                    of all the providers used in this ClowdEnvironment.
                  properties:
                    autoScaler:
                      description: Defines the autoscaler configuration
                      properties:
                        mode:
                          description: Enable the autoscaler feature
                          enum:
                          - none
                          - enabled
                          - keda
                          type: string
                      type: object
                    db:
                      description: Defines the Configuration for the Clowder Database
                        Provider.
                      properties:
                        caBundleURL:
                          description: Indicates where Clowder will fetch the database
                            CA certificate bundle from. Currently only used in (*_app-interface_*)
                            mode. If none is specified, the AWS RDS combined CA bundle
                            is used.
                          pattern: ^https?:\/\/.+$
                          type: string
                        mode:
                          description: 'The mode of operation of the Clowder Database
                            Provider. Valid options are: (*_app-interface_*) where
                            the provider will pass through database credentials found
                            in the secret defined by the database name in the ClowdApp,
                            and (*_local_*) where the provider will spin up a local
                            instance of the database.'
                          enum:
                          - shared
                          - app-interface
                          - local
                          - none
                          type: string
                        pvc:
                          description: If using the (*_local_*) mode and PVC is set
                            to true, this instructs the local Database instance to
                            use a PVC instead of emptyDir for its volumes.
                          type: boolean
                      required:
                      - mode
                      type: object
                    deployment:
                      description: Defines the Deployment provider options
                      properties:
                        omitPullPolicy:
                          type: boolean
                      type: object
                    featureFlags:
                      description: Defines the Configuration for the Clowder FeatureFlags
                        Provider.
                      properties:
                        credentialRef:
                          description: Defines the secret containing the client access
                            token, only used for (*_app-interface_*) mode.
                          properties:
                            name:
                              description: Name defines the Name of a resource.
                              type: string
                            namespace:
                              description: Namespace defines the Namespace of a resource.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        hostname:
                          description: Defines the hostname for (*_app-interface_*)
                            mode
                          type: string
                        images:
                          description: Defines images used for the feature flags provider
                          properties:
                            unleash:
                              type: string
                          type: object
                        mode:
                          description: 'The mode of operation of the Clowder FeatureFlag
                            Provider. Valid options are: (*_app-interface_*) where
                            the provider will pass through credentials to the app
                            configuration, and (*_local_*) where a local Unleash instance
                            will be created.'
                          enum:
                          - local
                          - app-interface
                          - none
                          type: string
                        port:
                          description: Defineds the port for (*_app-interface_*) mode
                          format: int32
                          type: integer
                        pvc:
                          description: If using the (*_local_*) mode and PVC is set
                            to true, this instructs the local Database instance to
                            use a PVC instead of emptyDir for its volumes.
                          type: boolean
                      type: object
                    inMemoryDb:
                      description: Defines the Configuration for the Clowder InMemoryDB
                        Provider.
                      properties:
                        mode:
                          description: 'The mode of operation of the Clowder InMemory
                            Provider. Valid options are: (*_redis_*) where a local
                            Minio instance will be created, and (*_elasticache_*)
                            which will search the namespace of the ClowdApp for a
                            secret called ''elasticache'''
                          enum:
                          - redis
                          - app-interface
                          - elasticache
                          - none
                          type: string
                        pvc:
                          description: If using the (*_local_*) mode and PVC is set
                            to true, this instructs the local Database instance to
                            use a PVC instead of emptyDir for its volumes.
                          type: boolean
                      required:
                      - mode
                      type: object
                    kafka:
                      description: Defines the Configuration for the Clowder Kafka
                        Provider.
                      properties:
                        cluster:
                          description: Defines options related to the Kafka cluster
                            for this environment. Ignored for (*_local_*) mode.
                          properties:
                            config:
                              additionalProperties:
                                type: string
                              description: Config full options
                              type: object
                            deleteClaim:
                              description: Delete persistent volume claim if the Kafka
                                cluster is deleted Only applies when KafkaConfig.PVC
                                is set to 'true'
                              type: boolean
                            forceTLS:
                              description: Force TLS
                              type: boolean
                            jvmOptions:
                              description: JVM Options
                              properties:
                                -XX:
                                  description: A map of -XX options to the JVM.
                                  x-kubernetes-preserve-unknown-fields: true
                                -Xms:
                                  description: -Xms option to to the JVM.
                                  type: string
                                -Xmx:
                                  description: -Xmx option to to the JVM.
                                  type: string
                                gcLoggingEnabled:
                                  description: Specifies whether the Garbage Collection
                                    logging is enabled. The default is false.
                                  type: boolean
                                javaSystemProperties:
                                  description: A map of additional system properties
                                    which will be passed using the `-D` option to
                                    the JVM.
                                  items:
                                    properties:
                                      name:
                                        description: The system property name.
                                        type: string
                                      value:
                                        description: The system property value.
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            name:
                              description: 'Defines the kafka cluster name (default:
                                <ClowdEnvironment Name>-<UID>)'
                              type: string
                            namespace:
                              description: 'The namespace the kafka cluster is expected
                                to reside in (default: the environment''s targetNamespace)'
                              type: string
                            replicas:
                              description: The requested number of replicas for kafka/zookeeper.
                                If unset, default is '1'
                              format: int32
                              minimum: 1
                              type: integer
                            resources:
                              description: Resource Limits
                              properties:
                                limits:
                                  description: Limits corresponds to the JSON schema
                                    field "limits".
                                  x-kubernetes-preserve-unknown-fields: true
                                requests:
                                  description: Requests corresponds to the JSON schema
                                    field "requests".
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            storageSize:
                              description: Persistent volume storage size. If unset,
                                default is '1Gi' Only applies when KafkaConfig.PVC
                                is set to 'true'
                              type: string
                            version:
                              description: Version. If unset, default is '2.5.0'
                              type: string
                          type: object
                        clusterAnnotation:
                          description: Cluster annotation identifier for (*_msk_*)
                            mode.
                          type: string
                        clusterName:
                          description: (Deprecated) Defines the cluster name to be
                            used by the Kafka Provider this will be used in some modes
                            to locate the Kafka instance.
                          type: string
                        connect:
                          description: Defines options related to the Kafka Connect
                            cluster for this environment. Ignored for (*_local_*)
                            mode.
                          properties:
                            image:
                              description: Image. If unset, default is 'quay.io/cloudservices/xjoin-kafka-connect-strimzi:latest'
                              type: string
                            name:
                              description: 'Defines the kafka connect cluster name
                                (default: <kafka cluster''s name>)'
                              type: string
                            namespace:
                              description: 'The namespace the kafka connect cluster
                                is expected to reside in (default: the kafka cluster''s
                                namespace)'
                              type: string
                            replicas:
                              description: The requested number of replicas for kafka
                                connect. If unset, default is '1'
                              format: int32
                              minimum: 1
                              type: integer
                            resources:
                              description: Resource Limits
                              properties:
                                limits:
                                  description: Limits corresponds to the JSON schema
                                    field "limits".
                                  x-kubernetes-preserve-unknown-fields: true
                                requests:
                                  description: Requests corresponds to the JSON schema
                                    field "requests".
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            version:
                              description: Version. If unset, default is '2.5.0'
                              type: string
                          type: object
                        connectClusterName:
                          description: (Deprecated) Defines the kafka connect cluster
                            name that is used in this environment.
                          type: string
                        connectNamespace:
                          description: (Deprecated) The namespace that the Kafka Connect
                            cluster is expected to reside in. This is only used in
                            (*_app-interface_*) and (*_operator_*) modes.
                          type: string
                        enableLegacyStrimzi:
                          description: EnableLegacyStrimzi disables TLS + user auth
                          type: boolean
                        kafkaConnectReplicaCount:
                          description: Sets the replica count for ephem-msk mode for
                            kafka connect
                          type: integer
                        managedPrefix:
                          description: Managed topic prefix for the managed cluster.
                            Only used in (*_managed_*) mode.
                          type: string
                        managedSecretRef:
                          description: Defines the secret reference for the Managed
                            Kafka mode. Only used in (*_managed_*) mode.
                          properties:
                            name:
                              description: Name defines the Name of a resource.
                              type: string
                            namespace:
                              description: Namespace defines the Namespace of a resource.
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        mode:
                          description: 'The mode of operation of the Clowder Kafka
                            Provider. Valid options are: (*_operator_*) which provisions
                            Strimzi resources and will configure KafkaTopic CRs and
                            place them in the Kafka cluster''s namespace described
                            in the configuration, (*_app-interface_*) which simply
                            passes the topic names through to the App''s cdappconfig.json
                            and expects app-interface to have created the relevant
                            topics, and (*_local_*) where a small instance of Kafka
                            is created in the desired cluster namespace and configured
                            to auto-create topics.'
                          enum:
                          - ephem-msk
                          - managed
                          - operator
                          - app-interface
                          - local
                          - none
                          type: string
                        namespace:
                          description: (Deprecated) The Namespace the cluster is expected
                            to reside in. This is only used in (*_app-interface_*)
                            and (*_operator_*) modes.
                          type: string
                        pvc:
                          description: If using the (*_local_*) or (*_operator_*)
                            mode and PVC is set to true, this sets the provisioned
                            Kafka instance to use a PVC instead of emptyDir for its
                            volumes.
                          type: boolean
                        suffix:
                          description: (Deprecated) (Unused)
                          type: string
                        topicNamespace:
                          description: Namespace that kafkaTopics should be written
                            to for (*_msk_*) mode.
                          type: string
                      required:
                      - mode
                      type: object
                    logging:
                      description: Defines the Configuration for the Clowder Logging
                        Provider.
                      properties:
                        mode:
                          description: 'The mode of operation of the Clowder Logging
                            Provider. Valid options are: (*_app-interface_*) where
                            the provider will pass through cloudwatch credentials
                            to the app configuration, and (*_none_*) where no logging
                            will be configured.'
                          enum:
                          - app-interface
                          - 'null'
                          - none
                          type: string
                      required:
                      - mode
                      type: object
                    metrics:
                      description: Defines the Configuration for the Clowder Metrics
                        Provider.
                      properties:
                        mode:
                          description: The mode of operation of the Metrics provider.
                            The allowed modes are (*_none_*), which disables metrics
                            service generation, or (*_operator_*) where services and
                            probes are generated. (*_app-interface_*) where services
                            and probes are generated for app-interface.
                          enum:
                          - none
                          - operator
                          - app-interface
                          type: string
                        path:
                          description: A prefix path that pods will be instructed
                            to use when setting up their metrics server.
                          type: string
                        port:
                          description: The port that metrics services inside ClowdApp
                            pods should be served on.
                          format: int32
                          type: integer
                        prometheus:
                          description: Prometheus specific configuration
                          properties:
                            appInterfaceHostname:
                              description: Specify prometheus hostname when in app-interface
                                mode
                              type: string
                            deploy:
                              description: Determines whether to deploy prometheus
                                in operator mode
                              type: boolean
                          type: object
                      required:
                      - mode
                      - port
                      type: object
                    objectStore:
                      description: Defines the Configuration for the Clowder ObjectStore
                        Provider.
                      properties:
                        images:
                          description: Override the object store images
                          properties:
                            minio:
                              type: string
                          type: object
                        mode:
                          description: 'The mode of operation of the Clowder ObjectStore
                            Provider. Valid options are: (*_app-interface_*) where
                            the provider will pass through Amazon S3 credentials to
                            the app configuration, and (*_minio_*) where a local Minio
                            instance will be created.'
                          enum:
                          - minio
                          - app-interface
                          - none
                          type: string
                        pvc:
                          description: If using the (*_local_*) mode and PVC is set
                            to true, this instructs the local Database instance to
                            use a PVC instead of emptyDir for its volumes.
                          type: boolean
                        suffix:
                          description: Currently unused.
                          type: string
                      required:
                      - mode
                      type: object
                    pullSecrets:
                      description: Defines the pull secret to use for the service
                        accounts.
                      items:
                        description: NamespacedName type to represent a real Namespaced
                          Name
                        properties:
                          name:
                            description: Name defines the Name of a resource.
                            type: string
                          namespace:
                            description: Namespace defines the Namespace of a resource.
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      type: array
                    serviceMesh:
                      description: Defines the Configuration for the Clowder ServiceMesh
                        Provider.
                      properties:
                        mode:
                          description: ServiceMeshMode just determines if we enable
                            or disable the service mesh
                          enum:
                          - enabled
                          - disabled
                          type: string
                      type: object
                    sidecars:
                      description: Defines the sidecar configuration
                      properties:
                        otelCollector:
                          description: Sets up OpenTelemetry collector configuration
                          properties:
                            enabled:
                              description: Enable or disable otel collector sidecar
                              type: boolean
                            image:
                              description: Configurable image
                              type: string
                          required:
                          - enabled
                          type: object
                        tokenRefresher:
                          description: Sets up Token Refresher configuration
                          properties:
                            enabled:
                              description: Enables or disables token refresher sidecars
                              type: boolean
                            image:
                              description: Configurable image
                              type: string
                          required:
                          - enabled
                          type: object
                      type: object
                    testing:
                      description: Defines the environment for iqe/smoke testing
                      properties:
                        configAccess:
                          description: 'The mode of operation for access to outside
                            app configs. Valid options are: (*_none_*) -- no app config
                            is mounted to the pod (*_app_*) -- only the ClowdApp''s
                            config is mounted to the pod (*_environment_*) -- the
                            config for all apps in the env are mounted'
                          enum:
                          - none
                          - app
                          - ''
                          - environment
                          type: string
                        iqe:
                          description: Defines the environment for iqe/smoke testing
                          properties:
                            imageBase:
                              type: string
                            resources:
                              description: A pass-through of a resource requirements
                                in k8s ResourceRequirements format. If omitted, the
                                default resource requirements from the ClowdEnvironment
                                will be used.
                              properties:
                                claims:
                                  description: "Claims lists the names of resources,\
                                    \ defined in spec.resourceClaims, that are used\
                                    \ by this container. \n This is an alpha field\
                                    \ and requires enabling the DynamicResourceAllocation\
                                    \ feature gate. \n This field is immutable. It\
                                    \ can only be set for containers."
                                  items:
                                    description: ResourceClaim references one entry
                                      in PodSpec.ResourceClaims.
                                    properties:
                                      name:
                                        description: Name must match the name of one
                                          entry in pod.spec.resourceClaims of the
                                          Pod where this field is used. It makes that
                                          resource available inside a container.
                                        type: string
                                    required:
                                    - name
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                                limits:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Limits describes the maximum amount
                                    of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                                requests:
                                  additionalProperties:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  description: 'Requests describes the minimum amount
                                    of compute resources required. If Requests is
                                    omitted for a container, it defaults to Limits
                                    if that is explicitly specified, otherwise to
                                    an implementation-defined value. Requests cannot
                                    exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                  type: object
                              type: object
                            ui:
                              description: Defines configurations related to UI testing
                                containers
                              properties:
                                selenium:
                                  description: Defines configurations for selenium
                                    containers in this environment
                                  properties:
                                    defaultImageTag:
                                      description: Defines the default image tag used
                                        for selenium containers in this environment
                                      type: string
                                    imageBase:
                                      description: Defines the image used for selenium
                                        containers in this environment
                                      type: string
                                    resources:
                                      description: Defines the resource requests/limits
                                        set on selenium containers
                                      properties:
                                        claims:
                                          description: "Claims lists the names of\
                                            \ resources, defined in spec.resourceClaims,\
                                            \ that are used by this container. \n\
                                            \ This is an alpha field and requires\
                                            \ enabling the DynamicResourceAllocation\
                                            \ feature gate. \n This field is immutable.\
                                            \ It can only be set for containers."
                                          items:
                                            description: ResourceClaim references
                                              one entry in PodSpec.ResourceClaims.
                                            properties:
                                              name:
                                                description: Name must match the name
                                                  of one entry in pod.spec.resourceClaims
                                                  of the Pod where this field is used.
                                                  It makes that resource available
                                                  inside a container.
                                                type: string
                                            required:
                                            - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                          - name
                                          x-kubernetes-list-type: map
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                            - type: integer
                                            - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. Requests cannot exceed Limits.
                                            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                          type: object
                                      type: object
                                  type: object
                              type: object
                            vaultSecretRef:
                              description: Defines the secret reference for loading
                                vault credentials into the IQE job
                              properties:
                                name:
                                  description: Name defines the Name of a resource.
                                  type: string
                                namespace:
                                  description: Namespace defines the Namespace of
                                    a resource.
                                  type: string
                              required:
                              - name
                              - namespace
                              type: object
                          required:
                          - imageBase
                          type: object
                        k8sAccessLevel:
                          description: 'The mode of operation of the testing Pod.
                            Valid options are: ''default'', ''view'' or ''edit'''
                          enum:
                          - default
                          - view
                          - ''
                          - edit
                          type: string
                      required:
                      - configAccess
                      - k8sAccessLevel
                      type: object
                    web:
                      description: Defines the Configuration for the Clowder Web Provider.
                      properties:
                        aiuthPort:
                          description: The auth port that the web local mode will
                            use with the AuthSidecar
                          format: int32
                          type: integer
                        apiPrefix:
                          description: An api prefix path that pods will be instructed
                            to use when setting up their web server.
                          type: string
                        bopURL:
                          description: The URL of BOP - only used in (*_none_*/*_operator_*)
                            mode.
                          type: string
                        gatewayCert:
                          description: Gateway cert
                          properties:
                            certMode:
                              description: Determines the mode of certificate generation,
                                either self-signed or acme
                              enum:
                              - self-signed
                              - acme
                              - none
                              type: string
                            emailAddress:
                              description: The email address used to register with
                                Let's Encrypt for acme mode certs
                              type: string
                            enabled:
                              description: Determines whether to enable the gateway
                                cert, default is disabled
                              type: boolean
                            localCAConfigMap:
                              description: Determines a ConfigMap in the target namespace
                                of the env which has ca.pem detailing the cert to
                                use for mTLS verification
                              type: string
                          type: object
                        images:
                          description: Optional images to use for web provider components
                            -- only applies when running in (*_local_*) mode.
                          properties:
                            caddy:
                              description: Caddy image -- if not defined, value from
                                operator config is used if set, otherwise a hard-coded
                                default is used.
                              type: string
                            caddyGateway:
                              description: Caddy Gateway image -- if not defined,
                                value from operator config is used if set, otherwise
                                a hard-coded default is used.
                              type: string
                            keycloak:
                              description: Keycloak image -- default is 'quay.io/keycloak/keycloak:{KeycloakVersion}'
                                unless overridden here
                              type: string
                            mockBop:
                              description: Mock BOP image -- if not defined, value
                                from operator config is used if set, otherwise a hard-coded
                                default is used.
                              type: string
                            mocktitlements:
                              description: Mock entitlements image -- if not defined,
                                value from operator config is used if set, otherwise
                                a hard-coded default is used.
                              type: string
                          type: object
                        ingressClass:
                          description: Ingress Class Name used only in (*_local_*)
                            mode.
                          type: string
                        keycloakPVC:
                          description: Optionally use PVC storage for keycloak db
                          type: boolean
                        keycloakVersion:
                          description: Optional keycloak version override -- used
                            only in (*_local_*) mode -- if not set, a hard-coded default
                            is used.
                          type: string
                        mode:
                          description: The mode of operation of the Web provider.
                            The allowed modes are (*_none_*/*_operator_*), and (*_local_*)
                            which deploys keycloak and BOP.
                          enum:
                          - none
                          - operator
                          - local
                          type: string
                        port:
                          description: The port that web services inside ClowdApp
                            pods should be served on.
                          format: int32
                          type: integer
                        privatePort:
                          description: The private port that web services inside a
                            ClowdApp should be served on.
                          format: int32
                          type: integer
                        tls:
                          description: TLS sidecar enablement
                          properties:
                            enabled:
                              type: boolean
                            port:
                              format: int32
                              type: integer
                            privatePort:
                              format: int32
                              type: integer
                          type: object
                      required:
                      - mode
                      - port
                      type: object
                  required:
                  - inMemoryDb
                  - kafka
                  - logging
                  - objectStore
                  type: object
                resourceDefaults:
                  description: Defines the default resource requirements in standard
                    k8s format in the event that they omitted from a PodSpec inside
                    a ClowdApp.
                  properties:
                    claims:
                      description: "Claims lists the names of resources, defined in\
                        \ spec.resourceClaims, that are used by this container. \n\
                        \ This is an alpha field and requires enabling the DynamicResourceAllocation\
                        \ feature gate. \n This field is immutable. It can only be\
                        \ set for containers."
                      items:
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                        properties:
                          name:
                            description: Name must match the name of one entry in
                              pod.spec.resourceClaims of the Pod where this field
                              is used. It makes that resource available inside a container.
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                      - name
                      x-kubernetes-list-type: map
                    limits:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      type: object
                    requests:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. Requests cannot exceed
                        Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                      type: object
                  type: object
                serviceConfig:
                  description: ServiceConfig provides options for k8s Service resources
                  properties:
                    type:
                      enum:
                      - ClusterIP
                      - NodePort
                      - ''
                      type: string
                  required:
                  - type
                  type: object
                targetNamespace:
                  description: TargetNamespace describes the namespace where any generated
                    environmental resources should end up, this is particularly important
                    in (*_local_*) mode.
                  type: string
              required:
              - providers
              - resourceDefaults
              type: object
            status:
              description: ClowdEnvironmentStatus defines the observed state of ClowdEnvironment
              properties:
                apps:
                  items:
                    description: AppInfo details information about a specific app.
                    properties:
                      deployments:
                        items:
                          description: DeploymentInfo defailts information about a
                            specific deployment.
                          properties:
                            hostname:
                              type: string
                            name:
                              type: string
                            port:
                              format: int32
                              type: integer
                          required:
                          - name
                          type: object
                        type: array
                      name:
                        type: string
                    required:
                    - deployments
                    - name
                    type: object
                  type: array
                conditions:
                  description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                    of cluster Important: Run "make" to regenerate code after modifying
                    this file'
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                deployments:
                  properties:
                    managedDeployments:
                      format: int32
                      type: integer
                    managedTopics:
                      format: int32
                      type: integer
                    readyDeployments:
                      format: int32
                      type: integer
                    readyTopics:
                      format: int32
                      type: integer
                  required:
                  - managedDeployments
                  - managedTopics
                  - readyDeployments
                  - readyTopics
                  type: object
                generation:
                  format: int64
                  type: integer
                hostname:
                  type: string
                prometheus:
                  description: PrometheusStatus provides info on how to connect to
                    Prometheus
                  properties:
                    hostname:
                      type: string
                  required:
                  - hostname
                  type: object
                ready:
                  type: boolean
                targetNamespace:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ''
      plural: ''
    conditions: []
    storedVersions: []
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.8.0
    creationTimestamp: null
    name: clowdjobinvocations.cloud.redhat.com
  spec:
    group: cloud.redhat.com
    names:
      kind: ClowdJobInvocation
      listKind: ClowdJobInvocationList
      plural: clowdjobinvocations
      shortNames:
      - cji
      singular: clowdjobinvocation
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - jsonPath: .status.completed
        name: Completed
        type: boolean
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClowdJobInvocation is the Schema for the jobinvocations API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClowdJobInvocationSpec defines the desired state of ClowdJobInvocation
              properties:
                appName:
                  description: Name of the ClowdApp who owns the jobs
                  type: string
                disabled:
                  description: Disabled is a flag to turn off CJI(s) from running
                  type: boolean
                jobs:
                  description: Jobs is the set of jobs to be run by the invocation
                  items:
                    type: string
                  type: array
                runOnNotReady:
                  description: RunOnNotReady is a flag that when true, the job will
                    not wait for the deployment to be ready to run
                  type: boolean
                testing:
                  description: Testing is the struct for building out test jobs (iqe,
                    etc) in a CJI
                  properties:
                    iqe:
                      description: Iqe is the job spec to override defaults from the
                        ClowdApp's definition of the job
                      properties:
                        debug:
                          description: Changes entrypoint to invoke 'iqe container-debug'
                            so that container starts but does not run tests, allowing
                            'rsh' to be invoked
                          type: boolean
                        dynaconfEnvName:
                          description: (DEPRECATED, using 'env' now preferred) sets
                            ENV_FOR_DYNACONF env var on the IQE container
                          type: string
                        env:
                          description: Specifies environment variables to set on the
                            IQE container
                          items:
                            description: EnvVar represents an environment variable
                              present in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are
                                  expanded using the previously defined environment
                                  variables in the container and any service environment
                                  variables. If a variable cannot be resolved, the
                                  reference in the input string will be unchanged.
                                  Double $$ are reduced to a single $, which allows
                                  for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)"
                                  will produce the string literal "$(VAR_NAME)". Escaped
                                  references will never be expanded, regardless of
                                  whether the variable exists or not. Defaults to
                                  "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's
                                  value. Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap
                                          or its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                      metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                      `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                      spec.serviceAccountName, status.hostIP, status.podIP,
                                      status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, limits.ephemeral-storage, requests.cpu,
                                      requests.memory and requests.ephemeral-storage)
                                      are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for
                                          volumes, optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                        - type: integer
                                        - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the
                                      pod's namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or
                                          its key must be defined
                                        type: boolean
                                    required:
                                    - key
                                    type: object
                                type: object
                            required:
                            - name
                            type: object
                          type: array
                        filter:
                          description: (DEPRECATED, using 'env' now preferred) sets
                            IQE_FILTER_EXPRESSION env var on the IQE container
                          type: string
                        ibutsuSource:
                          description: (DEPRECATED, using 'env' now preferred) sets
                            IQE_IBUTSU_SOURCE env var on the IQE container
                          type: string
                        imageTag:
                          description: Image tag to use for IQE container. By default,
                            Clowder will set the image tag to be baseImage:name-of-iqe-plugin,
                            where baseImage is defined in the ClowdEnvironment. Only
                            the tag can be overridden here.
                          type: string
                        logLevel:
                          description: (DEPRECATED, using 'env' now preferred) sets
                            IQE_LOG_LEVEL env var on the IQE container
                          enum:
                          - ''
                          - critical
                          - error
                          - warning
                          - info
                          - debug
                          - notset
                          type: string
                        marker:
                          description: (DEPRECATED, using 'env' now preferred) sets
                            IQE_MARKER_EXPRESSION env var on the IQE container
                          type: string
                        parallelEnabled:
                          description: (DEPRECATED, using 'env' now preferred) sets
                            IQE_PARALLEL_ENABLED env var on the IQE container
                          type: string
                        parallelWorkerCount:
                          description: (DEPRECATED, using 'env' now preferred) sets
                            IQE_PARALLEL_WORKER_COUNT env var on the IQE container
                          type: string
                        plugins:
                          description: A comma,separated,list indicating IQE plugin(s)
                            to run tests for. By default, Clowder will use the plugin
                            name given on the ClowdApp's spec.testing.iqePlugin field.
                            Use this field if you wish you override the plugin list.
                          type: string
                        requirements:
                          description: (DEPRECATED, using 'env' now preferred) sets
                            IQE_REQUIREMENTS env var on the IQE container
                          items:
                            type: string
                          type: array
                        requirementsPriority:
                          description: (DEPRECATED, using 'env' now preferred) sets
                            IQE_REQUIREMENTS_PRIORITY env var on the IQE container
                          items:
                            type: string
                          type: array
                        rpArgs:
                          description: (DEPRECATED, using 'env' now preferred) sets
                            IQE_RP_ARGS env var on the IQE container
                          type: string
                        testImportance:
                          description: (DEPRECATED, using 'env' now preferred) sets
                            IQE_TEST_IMPORTANCE env var on the IQE container
                          items:
                            type: string
                          type: array
                        ui:
                          description: Defines configuration for a selenium container
                            (optional)
                          properties:
                            enabled:
                              description: No longer used
                              type: boolean
                            selenium:
                              description: Configuration options for running IQE with
                                a selenium container
                              properties:
                                deploy:
                                  description: Whether or not a selenium container
                                    should be deployed in the IQE pod
                                  type: boolean
                                imageTag:
                                  description: Name of selenium image tag to use if
                                    not using the environment's default
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
              required:
              - appName
              type: object
            status:
              description: ClowdJobInvocationStatus defines the observed state of
                ClowdJobInvocation
              properties:
                completed:
                  description: Completed is false and updated when all jobs have either
                    finished successfully or failed past their backoff and retry values
                  type: boolean
                conditions:
                  items:
                    description: Condition defines an observation of a Cluster API
                      resource operational state.
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one
                          status to another. This should be when the underlying condition
                          changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition. This field may be empty.
                        type: string
                      reason:
                        description: The reason for the condition's last transition
                          in CamelCase. The specific API may choose whether or not
                          this field is considered a guaranteed API. This field may
                          not be empty.
                        type: string
                      severity:
                        description: Severity provides an explicit classification
                          of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly. The
                          Severity field MUST be set only when Status=False.
                        type: string
                      status:
                        description: Status of the condition, one of True, False,
                          Unknown.
                        type: string
                      type:
                        description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources
                          like Available, but because arbitrary conditions can be
                          useful (see .node.status.conditions), the ability to deconflict
                          is important.
                        type: string
                    required:
                    - lastTransitionTime
                    - status
                    - type
                    type: object
                  type: array
                jobMap:
                  additionalProperties:
                    type: string
                  description: JobMap is a map of the job names run by Job invocation
                    and their outcomes
                  type: object
                jobs:
                  description: 'DEPRECATED : Jobs is an array of jobs name run by
                    a CJI.'
                  items:
                    type: string
                  type: array
              required:
              - completed
              - jobMap
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: ''
      plural: ''
    conditions: []
    storedVersions: []
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: clowder-controller-manager
    namespace: clowder-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: clowder-leader-election-role
    namespace: clowder-system
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ''
    resources:
    - events
    verbs:
    - create
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      managed.openshift.io/aggregate-to-dedicated-admins: cluster
      rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    name: clowder-clowdapp-editor-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdapps
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdapps/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      rbac.authorization.k8s.io/aggregate-to-view: 'true'
    name: clowder-clowdapp-viewer-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdapps
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdapps/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      managed.openshift.io/aggregate-to-dedicated-admins: cluster
      rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    name: clowder-clowdenvironment-editor-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdenvironments
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdenvironments/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      rbac.authorization.k8s.io/aggregate-to-view: 'true'
    name: clowder-clowdenvironment-viewer-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdenvironments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdenvironments/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      managed.openshift.io/aggregate-to-dedicated-admins: cluster
      rbac.authorization.k8s.io/aggregate-to-edit: 'true'
    name: clowder-clowdjobinvocation-editor-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdjobinvocations
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdjobinvocations/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    labels:
      rbac.authorization.k8s.io/aggregate-to-view: 'true'
    name: clowder-clowdjobinvocation-viewer-role
  rules:
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdjobinvocations
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdjobinvocations/status
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: clowder-manager-role
  rules:
  - apiGroups:
    - ''
    resources:
    - configmaps
    - events
    - namespaces
    - persistentvolumeclaims
    - secrets
    - serviceaccounts
    - services
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ''
    resources:
    - endpoints
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - issuers
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdapps
    - clowdenvironments
    - clowdjobinvocations
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - cloud.redhat.com
    resources:
    - clowdapps/status
    - clowdenvironments/status
    - clowdjobinvocations/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - config.openshift.io
    resources:
    - ingresses
    verbs:
    - get
    - list
  - apiGroups:
    - cyndi.cloud.redhat.com
    resources:
    - cyndipipelines
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - kafka.strimzi.io
    resources:
    - kafkaconnectors
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - kafka.strimzi.io
    resources:
    - kafkaconnects
    - kafkas
    - kafkatopics
    - kafkausers
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - keda.sh
    resources:
    - scaledobjects
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - monitoring.coreos.com
    resources:
    - prometheuses
    - servicemonitors
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - operators.coreos.com
    resources:
    - subscriptions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: clowder-metrics-reader
  rules:
  - nonResourceURLs:
    - /metrics
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: clowder-prometheus
  rules:
  - apiGroups:
    - ''
    resources:
    - services
    - endpoints
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ''
    resources:
    - configmaps
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: clowder-proxy-role
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: clowder-leader-election-rolebinding
    namespace: clowder-system
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: clowder-leader-election-role
  subjects:
  - kind: ServiceAccount
    name: clowder-controller-manager
    namespace: clowder-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: clowder-admin-role-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: admin
  subjects:
  - kind: ServiceAccount
    name: clowder-controller-manager
    namespace: clowder-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: clowder-manager-rolebinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: clowder-manager-role
  subjects:
  - kind: ServiceAccount
    name: clowder-controller-manager
    namespace: clowder-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: clowder-proxy-rolebinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: clowder-proxy-role
  subjects:
  - kind: ServiceAccount
    name: clowder-controller-manager
    namespace: clowder-system
- apiVersion: v1
  data:
    controller_manager_config.yaml: "apiVersion: controller-runtime.sigs.k8s.io/v1alpha1\n\
      kind: ControllerManagerConfig\nhealth:\n  healthProbeBindAddress: :8081\nmetrics:\n\
      \  bindAddress: 127.0.0.1:8080\nwebhook:\n  port: 9443\nleaderElection:\n  leaderElect:\
      \ true\n  resourceName: 51a7d5b5.cloud.redhat.com\n"
  kind: ConfigMap
  metadata:
    name: clowder-manager-config
    namespace: clowder-system
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      control-plane: controller-manager
    name: clowder-controller-manager
    namespace: clowder-system
  spec:
    ports:
    - name: metrics
      port: 8080
      targetPort: metrics
    selector:
      control-plane: controller-manager
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      control-plane: controller-manager
    name: clowder-controller-manager-metrics-service
    namespace: clowder-system
  spec:
    ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
    selector:
      control-plane: controller-manager
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      control-plane: controller-manager
      operator-name: clowder
    name: clowder-controller-manager-metrics-service-non-auth
    namespace: clowder-system
  spec:
    ports:
    - name: metrics
      port: 8080
      targetPort: metrics
    selector:
      control-plane: controller-manager
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.beta.openshift.io/serving-cert-secret-name: webhook-server-cert
    name: clowder-webhook-service
    namespace: clowder-system
  spec:
    ports:
    - port: 443
      targetPort: 9443
    selector:
      control-plane: controller-manager
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      ignore-check.kube-linter.io/minimum-three-replicas: Not applicable
    labels:
      control-plane: controller-manager
      operator-name: clowder
    name: clowder-controller-manager
    namespace: clowder-system
  spec:
    replicas: 1
    selector:
      matchLabels:
        control-plane: controller-manager
        operator-name: clowder
    template:
      metadata:
        labels:
          control-plane: controller-manager
          operator-name: clowder
      spec:
        containers:
        - args:
          - --leader-elect
          command:
          - /manager
          env:
          - name: AWS_CW_KEY
            valueFrom:
              secretKeyRef:
                key: aws_access_key_id
                name: cloudwatch
                optional: true
          - name: AWS_CW_REGION
            valueFrom:
              secretKeyRef:
                key: aws_region
                name: cloudwatch
                optional: true
          - name: AWS_CW_SECRET
            valueFrom:
              secretKeyRef:
                key: aws_secret_access_key
                name: cloudwatch
                optional: true
          - name: AWS_CW_LOG_GROUP
            valueFrom:
              secretKeyRef:
                key: log_group_name
                name: cloudwatch
                optional: true
          image: ${IMAGE}:${IMAGE_TAG}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - containerPort: 8080
            name: metrics
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 1500Mi
            requests:
              cpu: 100m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          volumeMounts:
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
          - mountPath: /config/
            name: config
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        serviceAccountName: clowder-controller-manager
        terminationGracePeriodSeconds: 10
        volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
        - configMap:
            name: clowder-config
            optional: true
          name: config
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: clowder-allow-to-admission-controller
    namespace: clowder-system
  spec:
    ingress:
    - {}
    podSelector:
      matchLabels:
        control-plane: controller-manager
    policyTypes:
    - Ingress
- apiVersion: admissionregistration.k8s.io/v1
  kind: MutatingWebhookConfiguration
  metadata:
    annotations:
      service.beta.openshift.io/inject-cabundle: 'true'
    creationTimestamp: null
    name: clowder-mutating-webhook-configuration
  webhooks:
  - admissionReviewVersions:
    - v1
    clientConfig:
      service:
        name: clowder-webhook-service
        namespace: clowder-system
        path: /mutate-pod
    failurePolicy: Ignore
    name: vclowdmutatepod.kb.io
    rules:
    - apiGroups:
      - ''
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - pods
    sideEffects: None
- apiVersion: admissionregistration.k8s.io/v1
  kind: ValidatingWebhookConfiguration
  metadata:
    annotations:
      service.beta.openshift.io/inject-cabundle: 'true'
    creationTimestamp: null
    name: clowder-validating-webhook-configuration
  webhooks:
  - admissionReviewVersions:
    - v1
    clientConfig:
      service:
        name: clowder-webhook-service
        namespace: clowder-system
        path: /validate-cloud-redhat-com-v1alpha1-clowdapp
    failurePolicy: Fail
    name: vclowdapp.kb.io
    rules:
    - apiGroups:
      - cloud.redhat.com
      apiVersions:
      - v1alpha1
      operations:
      - CREATE
      - UPDATE
      resources:
      - clowdapps
    sideEffects: None
- apiVersion: v1
  data:
    clowder_config.json: "{\n    \"debugOptions\": {\n        \"trigger\": {\n   \
      \         \"diff\": ${DEBUG_TRIGGERS}\n        },\n        \"cache\": {\n  \
      \          \"create\": ${DEBUG_CACHE_CREATE},\n            \"update\": ${DEBUG_CACHE_UPDATE},\n\
      \            \"apply\": ${DEBUG_CACHE_APPLY}\n        },\n        \"pprof\"\
      : {\n            \"enable\": ${DEBUG_PPROF_ENABLE}\n        }\n    },\n    \"\
      features\": {\n        \"createServiceMonitor\": ${CREATE_SERVICE_MONITORS},\n\
      \        \"watchStrimziResources\": ${WATCH_STRIMZI_RESOURCES},\n        \"\
      enableKedaResources\": ${ENABLE_KEDA_RESOURCES},\n        \"perProviderMetrics\"\
      : ${PER_PROVIDER_METRICS},\n        \"reconciliationMetrics\": ${RECONCILIATION_METRICS},\n\
      \        \"enableDependencyMetrics\": ${ENABLE_DEPENDENCY_METRICS},\n      \
      \  \"disableStrimziFinalizer\": ${DISABLE_STRIMZI_FINALIZER}\n    },\n    \"\
      settings\": {\n        \"managedKafkaEphemDeleteRegex\": \"${MANAGED_EPHEM_DELETE_REGEX}\"\
      \n    },\n    \"images\": {\n        \"objectStoreMinio\": \"${OBJECTSTORE_IMAGE}\"\
      ,\n        \"featureFlagsUnleash\": \"${FEATUREFLAGS_IMAGE}\"\n    }\n}\n"
  kind: ConfigMap
  metadata:
    name: clowder-config
parameters:
- name: IMAGE_TAG
  value: latest
- name: IMAGE
  value: quay.io/redhat-services-prod/hcm-eng-prod-tenant/clowder
- name: DEBUG_TRIGGERS
  value: 'false'
- name: DEBUG_CACHE_CREATE
  value: 'false'
- name: DEBUG_CACHE_UPDATE
  value: 'false'
- name: DEBUG_CACHE_APPLY
  value: 'false'
- name: DEBUG_PPROF_ENABLE
  value: 'false'
- name: CREATE_SERVICE_MONITORS
  value: 'false'
- name: WATCH_STRIMZI_RESOURCES
  value: 'false'
- name: PER_PROVIDER_METRICS
  value: 'false'
- name: RECONCILIATION_METRICS
  value: 'false'
- name: ENABLE_DEPENDENCY_METRICS
  value: 'false'
- name: MANAGED_EPHEM_DELETE_REGEX
  value: .*ephemeral.*
- name: ENABLE_KEDA_RESOURCES
  value: 'false'
- name: OBJECTSTORE_IMAGE
  value: quay.io/cloudservices/minio:RELEASE.2020-11-19T23-48-16Z-amd64
- name: FEATUREFLAGS_IMAGE
  value: quay.io/cloudservices/unleash-docker:5.6.9
- name: DISABLE_STRIMZI_FINALIZER
  value: 'false'

