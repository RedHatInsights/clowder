---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
- script: >
    for i in {1..10}; do
    kubectl get secret -n test-cyndi-strimzi-kafka test-cyndi-strimzi-host-inventory-db-cyndi -o json > /tmp/host-inventory-db-cyndi-secret &&
    kubectl get secret -n test-cyndi-strimzi-kafka test-cyndi-strimzi-myapp-db-cyndi -o json > /tmp/myapp-db-cyndi-secret &&
    kubectl get secret -n test-cyndi-strimzi host-inventory-db -o json > /tmp/host-inventory-db-secret &&
    kubectl get secret -n test-cyndi-strimzi myapp-db -o json > /tmp/myapp-db-secret &&
    kubectl get cyndipipeline -n test-cyndi-strimzi -o json > /tmp/cyndipipeline &&
    exit 0 || sleep 1;
    done;
    echo "Expected secrets/cyndipipeline not found"; exit 1
- script: EXPECTED=$(jq '.data["hostname"]' /tmp/host-inventory-db-secret); jq -e '.data["db.host"] == '$EXPECTED /tmp/host-inventory-db-cyndi-secret
- script: EXPECTED=$(jq '.data["port"]' /tmp/host-inventory-db-secret); jq -e '.data["db.port"] == '$EXPECTED /tmp/host-inventory-db-cyndi-secret
- script: EXPECTED=$(jq '.data["name"]' /tmp/host-inventory-db-secret); jq -e '.data["db.name"] == '$EXPECTED /tmp/host-inventory-db-cyndi-secret
- script: EXPECTED=$(jq '.data["username"]' /tmp/host-inventory-db-secret); jq -e '.data["db.user"] == '$EXPECTED /tmp/host-inventory-db-cyndi-secret
- script: EXPECTED=$(jq '.data["password"]' /tmp/host-inventory-db-secret); jq -e '.data["db.password"] == '$EXPECTED /tmp/host-inventory-db-cyndi-secret
- script: EXPECTED=$(jq '.data["hostname"]' /tmp/myapp-db-secret); jq -e '.data["db.host"] == '$EXPECTED /tmp/myapp-db-cyndi-secret
- script: EXPECTED=$(jq '.data["port"]' /tmp/myapp-db-secret); jq -e '.data["db.port"] == '$EXPECTED /tmp/myapp-db-cyndi-secret
- script: EXPECTED=$(jq '.data["name"]' /tmp/myapp-db-secret); jq -e '.data["db.name"] == '$EXPECTED /tmp/myapp-db-cyndi-secret
- script: USER=$(jq -r '.data["db.user"]' /tmp/myapp-db-cyndi-secret | base64 -d); [ "$USER" = "cyndi" ]
- script: PW=$(jq -r '.data["db.password"]' /tmp/myapp-db-cyndi-secret | base64 -d); [ "$PW" = "cyndi" ]
- script: EXPECTED=$(jq '."spec".additionalFilters' /tmp/cyndipipeline); jq -e '."spec".additionalFilters == '$EXPECTED /tmp/cyndipipeline
