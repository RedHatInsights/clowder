---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
- script: sleep 2

# do not overwrite /tmp/test-ephemeral-gateway created in earlier 02-json-assert.yaml
- script: kubectl get secret --namespace=test-ephemeral-gateway puptoo -o json > /tmp/test-ephemeral-gateway-apipaths
- script: jq -r '.data["cdappconfig.json"]' < /tmp/test-ephemeral-gateway-apipaths | base64 -d > /tmp/test-ephemeral-gateway-apipaths-json
- script: jq -r '.endpoints[] | select(.app == "puptoo") | select(.name == "processor") | .apiPath == "/api/puptoo/"' -e < /tmp/test-ephemeral-gateway-apipaths-json
- script: jq -r '.endpoints[] | select(.app == "puptoo") | select(.name == "processor") | .apiPaths[0] == "/api/puptoo/"' -e < /tmp/test-ephemeral-gateway-apipaths-json
- script: kubectl get secret --namespace=test-ephemeral-gateway puptoo-2paths -o json > /tmp/test-ephemeral-gateway-apipaths
- script: jq -r '.data["cdappconfig.json"]' < /tmp/test-ephemeral-gateway-apipaths | base64 -d > /tmp/test-ephemeral-gateway-apipaths-json
- script: jq -r '.endpoints[] | select(.app == "puptoo-2paths") | select(.name == "processor") | .apiPath == "/api/puptoo1/"' -e < /tmp/test-ephemeral-gateway-apipaths-json
- script: jq -r '.endpoints[] | select(.app == "puptoo-2paths") | select(.name == "processor") | .apiPaths[0] == "/api/puptoo1/"' -e < /tmp/test-ephemeral-gateway-apipaths-json
- script: jq -r '.endpoints[] | select(.app == "puptoo-2paths") | select(.name == "processor") | .apiPaths[1] == "/api/puptoo2/"' -e < /tmp/test-ephemeral-gateway-apipaths-json

- script: kubectl get secret test-ephemeral-gateway-keycloak -n test-ephemeral-gateway -o json | jq -r '.data.defaultUsername == "amRvZQ=="'
- script: kubectl get secret test-ephemeral-gateway-keycloak -n test-ephemeral-gateway -o json | jq -r '.data.version == "MTUuMC4yCg=="'
- script: kubectl get pod -l pod=puptoo-processor -n test-ephemeral-gateway -o json  | jq -r '.items[0].spec.containers[0].name=="puptoo-processor"'
- script: kubectl get pod -l pod=puptoo-processor -n test-ephemeral-gateway -o json  | jq -r '.items[0].spec.containers[1].name=="crcauth"'
- script: sh test_creds.sh
