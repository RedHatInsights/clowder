---
apiVersion: cloud.redhat.com/v1alpha1
kind: ClowdEnvironment
metadata:
  name: test-sidecars
spec:
  targetNamespace: test-sidecars
  providers:
    web:
      port: 8000
      mode: operator
    metrics:
      port: 9000
      mode: operator
      path: "/metrics"
    kafka:
      mode: none
    db:
      mode: none
    logging:
      mode: none
    objectStore:
      mode: none
    inMemoryDb:
      mode: none
    sidecars:
      tokenRefresher:
        enabled: True
      otelCollector:
        enabled: True
  resourceDefaults:
    limits:
      cpu: 400m
      memory: 1024Mi
    requests:
      cpu: 30m
      memory: 512Mi
---
apiVersion: cloud.redhat.com/v1alpha1
kind: ClowdApp
metadata:
  name: puptoo
  namespace: test-sidecars
spec:
  envName: test-sidecars
  deployments:
  - name: processor
    podSpec:
      image: quay.io/psav/clowder-hello
      sidecars:
        - name: token-refresher
          enabled: true
        - name: otel-collector
          enabled: true
  jobs:
    - name: cron
      schedule: "*/1 * * * *"
      podSpec:
        image: quay.io/psav/clowder-hello
        sidecars:
          - name: token-refresher
            enabled: true
          - name: otel-collector
            enabled: true
---
apiVersion: v1
data:
  CLIENT_ID: Y2xpZW50X2lk #client_id
  CLIENT_SECRET: Y2xpZW50X3NlY3JldA== #client_secret
  ISSUER_URL: aHR0cDovLzEyNy4wLjAuMQ== #http://127.0.0.1
  URL: aHR0cDovLzEyNy4wLjAuMQ== #http://127.0.0.1
  SCOPE: b3BlbmlkIG9mZmxpbmVfYWNjZXNz #openid offline_access
kind: Secret
metadata:
  name: puptoo-token-refresher
  namespace: test-sidecars
type: Opaque
---
apiVersion: v1
data:
  relay: |
        exporters:
          sapm:
            access_token: ${SPLUNK_OBSERVABILITY_ACCESS_TOKEN}
            endpoint: https://ingest.us1.signalfx.com/v2/trace
            sending_queue:
              num_consumers: 32
          signalfx:
            access_token: ${SPLUNK_OBSERVABILITY_ACCESS_TOKEN}
            api_url: https://api.us1.signalfx.com
            ingest_url: https://ingest.us1.signalfx.com
            sending_queue:
              num_consumers: 32
        extensions:
          health_check:
            endpoint: 0.0.0.0:13133
          http_forwarder:
            egress:
              endpoint: https://api.us1.signalfx.com
          zpages: null
        processors:
          batch: null
          filter/logs:
            logs:
              exclude:
                match_type: strict
                resource_attributes:
                - key: splunk.com/exclude
                  value: "true"
          k8sattributes:
            extract:
              annotations:
              - from: pod
                key: splunk.com/sourcetype
              - from: namespace
                key: splunk.com/exclude
                tag_name: splunk.com/exclude
              - from: pod
                key: splunk.com/exclude
                tag_name: splunk.com/exclude
              - from: namespace
                key: splunk.com/index
                tag_name: com.splunk.index
              - from: pod
                key: splunk.com/index
                tag_name: com.splunk.index
              labels:
              - key: app
              metadata:
              - k8s.namespace.name
              - k8s.node.name
              - k8s.pod.name
              - k8s.pod.uid
            pod_association:
            - sources:
              - from: resource_attribute
                name: k8s.pod.uid
            - sources:
              - from: resource_attribute
                name: k8s.pod.ip
            - sources:
              - from: resource_attribute
                name: ip
            - sources:
              - from: connection
            - sources:
              - from: resource_attribute
                name: host.name
          memory_limiter:
            check_interval: 2s
            limit_mib: ${SPLUNK_MEMORY_LIMIT_MIB}
          resource/add_cluster_name:
            attributes:
            - action: upsert
              key: k8s.cluster.name
              value: ${K8S_CLUSTER_NAME}
          resource/add_collector_k8s:
            attributes:
            - action: insert
              key: k8s.node.name
              value: ${K8S_NODE_NAME}
            - action: insert
              key: k8s.pod.name
              value: ${K8S_POD_NAME}
            - action: insert
              key: k8s.pod.uid
              value: ${K8S_POD_UID}
            - action: insert
              key: k8s.namespace.name
              value: ${K8S_NAMESPACE}
          resource/add_env_name:
            attributes:
            - action: insert
              key: deployment.environment
              value: ${ENV_NAME}
          resource/logs:
            attributes:
            - action: upsert
              from_attribute: k8s.pod.annotations.splunk.com/sourcetype
              key: com.splunk.sourcetype
            - action: delete
              key: k8s.pod.annotations.splunk.com/sourcetype
            - action: delete
              key: splunk.com/exclude
          resourcedetection:
            detectors:
            - env
            - system
            override: true
            timeout: 10s
        receivers:
          jaeger:
            protocols:
              grpc:
                endpoint: 0.0.0.0:14250
              thrift_http:
                endpoint: 0.0.0.0:14268
          otlp:
            protocols:
              grpc:
                endpoint: 0.0.0.0:4317
              http:
                endpoint: 0.0.0.0:4318
          prometheus/collector:
            config:
              scrape_configs:
              - job_name: otel-collector
                metric_relabel_configs:
                - action: drop
                  regex: otelcol_rpc_.*
                  source_labels:
                  - __name__
                - action: drop
                  regex: otelcol_http_.*
                  source_labels:
                  - __name__
                - action: drop
                  regex: otelcol_processor_batch_.*
                  source_labels:
                  - __name__
                scrape_interval: 10s
                static_configs:
                - targets:
                  - ${K8S_POD_IP}:8889
          signalfx:
            access_token_passthrough: true
            endpoint: 0.0.0.0:9943
          zipkin:
            endpoint: 0.0.0.0:9411
        service:
          extensions:
          - health_check
          - zpages
          - http_forwarder
          pipelines:
            logs/signalfx-events:
              exporters:
              - signalfx
              processors:
              - memory_limiter
              - batch
              receivers:
              - signalfx
            metrics:
              exporters:
              - signalfx
              processors:
              - memory_limiter
              - batch
              - resource/add_cluster_name
              - resource/add_env_name
              receivers:
              - otlp
              - signalfx
            metrics/collector:
              exporters:
              - signalfx
              processors:
              - memory_limiter
              - batch
              - resource/add_collector_k8s
              - resourcedetection
              - resource/add_cluster_name
              - resource/add_env_name
              receivers:
              - prometheus/collector
            traces:
              exporters:
              - sapm
              processors:
              - memory_limiter
              - k8sattributes
              - batch
              - resource/add_cluster_name
              - resource/add_env_name
              receivers:
              - otlp
              - jaeger
              - zipkin
          telemetry:
            logs:
              level: "debug"
            metrics:
              address: 0.0.0.0:8889
kind: ConfigMap
metadata:
  name: puptoo-otel-config
  namespace: test-sidecars
---
