apiVersion: batch/v1
kind: Job
metadata:
  name: clowder-e2e
spec:
  backoffLimit: 0
  template:
    spec:
      serviceAccountName: clowder-e2e-sa
      restartPolicy: Never
      containers:
        - name: e2e
          image: quay.io/jbarea/clowder-e2e:0.1.2
          imagePullPolicy: IfNotPresent
          env:
            # In-cluster auth via ServiceAccount; no user tokens needed

            # Git repository to clone and ref to checkout (branch/tag/commit)
            - name: REPO_URL
              value: "https://github.com/JuanmaBM/clowder"
            - name: REPO_REF
              value: "full-cicd"

            # Path inside the repo to the test resources YAML
            - name: RESOURCES_PATH
              value: "ci/full-cicd/resources/puptoo-test-resources.yaml"

            # Namespace to deploy test resources into
            - name: TEST_NS
              value: "clowder-e2e"

            # App name used by tests (keep in sync with resources)
            - name: CLOWDAPP_NAME
              value: "puptoo"

            # Optional: timeout for waits
            - name: WAIT_TIMEOUT
              value: "5m"

            # Verbose test output
            - name: VERBOSE
              value: "1"

          command: ["bash","-lc"]
          args:
            - >-
              set -euo pipefail;
              export HOME=/tmp;
              mkdir -p /tmp/src && cd /tmp/src;
              : "${REPO_URL:?Set REPO_URL}";
              REPO_REF="${REPO_REF:-master}";
              if git ls-remote --heads "$REPO_URL" "$REPO_REF" >/dev/null 2>&1; then
                git clone --depth=1 -b "$REPO_REF" "$REPO_URL" .;
              else
                git clone "$REPO_URL" . && git checkout "$REPO_REF";
              fi;
              chmod +x ci/full-cicd/deploy.sh ci/full-cicd/run.sh || true;
              ci/full-cicd/run.sh;

            # Optional: override if needed
            # - name: CLOWDAPP_NAME
            #   value: "your-app-name"

          # If your cluster enforces restricted SCC and random UIDs, this image runs as non-root (10001)
          # Uncomment if needed to match the image's user
          # securityContext:
          #   runAsUser: 10001

