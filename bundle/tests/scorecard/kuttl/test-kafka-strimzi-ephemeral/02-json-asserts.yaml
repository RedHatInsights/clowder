---
apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
- script: sleep 5
# assert that kafka cluster name matches expected
- script: ENV_UID=$(kubectl get env env-test-kafka-strimzi-ephemeral -o jsonpath={.metadata.uid} | cut -f1 -d'-'); CLUSTER_NAME=$(kubectl get kafka -n test-kafka-strimzi-ephemeral-kafka -o jsonpath='{.items[0].metadata.name}'); [[ "$CLUSTER_NAME" == "env-test-kafka-strimzi-ephemeral-$ENV_UID" ]]
# assert that kafka connect cluster name matches expected
- script: ENV_UID=$(kubectl get env env-test-kafka-strimzi-ephemeral -o jsonpath={.metadata.uid} | cut -f1 -d'-'); CLUSTER_NAME=$(kubectl get kafkaconnect -n test-kafka-strimzi-ephemeral-connect -o jsonpath='{.items[0].metadata.name}'); [[ "$CLUSTER_NAME" == "env-test-kafka-strimzi-ephemeral-$ENV_UID" ]]
# assert that kafka connect's bootstrap servers matches kafka cluster hostname
- script: KAFKA_CLUSTER_NAME=$(kubectl get kafka -n test-kafka-strimzi-ephemeral-kafka -o jsonpath='{.items[0].metadata.name}'); CONNECT_BOOTSTRAP_SERVERS=$(kubectl get kafkaconnect -n test-kafka-strimzi-ephemeral-connect -o jsonpath='{.items[0].spec.bootstrapServers}'); [[ "$CONNECT_BOOTSTRAP_SERVERS" == "$KAFKA_CLUSTER_NAME-kafka-bootstrap.test-kafka-strimzi-ephemeral-kafka.svc:9092" ]]
