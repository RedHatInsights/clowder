// Code generated by schema-generate. DO NOT EDIT.

package config

// AppConfig application deployment configuration for cloud.redhat.com applications
type AppConfig struct {
  Database *Database `json:"database,omitempty"`
  Kafka *Kafka `json:"kafka,omitempty"`
  Logging *Logging `json:"logging,omitempty"`
  MetricsPath string `json:"metricsPath,omitempty"`
  MetricsPort float64 `json:"metricsPort,omitempty"`
  ObjectStore *ObjectStore `json:"objectStore,omitempty"`
  WebPort float64 `json:"webPort,omitempty"`
}

// BrokerConfig broker configuration
type BrokerConfig struct {
  Hostname string `json:"hostname,omitempty"`
  Port float64 `json:"port,omitempty"`
}

// Cloudwatch Cloud Watch configuration
type Cloudwatch struct {
  AccessKeyId string `json:"accessKeyId,omitempty"`
  LogGroup string `json:"logGroup,omitempty"`
  Region string `json:"region,omitempty"`
  SecretAccessKey string `json:"secretAccessKey,omitempty"`
}

// Database database configuration
type Database struct {
  Hostname string `json:"hostname,omitempty"`
  Name string `json:"name,omitempty"`
  Pass string `json:"pass,omitempty"`
  PgPass string `json:"pgPass,omitempty"`
  Port float64 `json:"port,omitempty"`
  User string `json:"user,omitempty"`
}

// Kafka kafka configuration
type Kafka struct {
  Brokers []interface{} `json:"brokers,omitempty"`
  Topics []interface{} `json:"topics,omitempty"`
}

// Logging Logging Configuration
type Logging struct {
  Cloudwatch *Cloudwatch `json:"cloudwatch,omitempty"`
  Type string `json:"type,omitempty"`
}

// ObjectStore object storage configuration
type ObjectStore struct {
  AccessKey string `json:"accessKey,omitempty"`
  Endpoint string `json:"endpoint,omitempty"`
  SecretKey string `json:"secretKey,omitempty"`
}

// TopicConfig topic configuration
type TopicConfig struct {
  ConsumerGroup string `json:"consumerGroup,omitempty"`
  Name string `json:"name,omitempty"`
}
