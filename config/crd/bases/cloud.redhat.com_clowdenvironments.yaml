
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: clowdenvironments.cloud.redhat.com
spec:
  additionalPrinterColumns:
  - JSONPath: .status.deployments.readyDeployments
    name: Ready
    type: integer
  - JSONPath: .status.deployments.managedDeployments
    name: Managed
    type: integer
  - JSONPath: .status.targetNamespace
    name: Namespace
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: cloud.redhat.com
  names:
    kind: ClowdEnvironment
    listKind: ClowdEnvironmentList
    plural: clowdenvironments
    shortNames:
    - env
    singular: clowdenvironment
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ClowdEnvironment is the Schema for the clowdenvironments API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: A ClowdEnvironmentSpec object.
          properties:
            providers:
              description: A ProvidersConfig object, detailing the setup and configuration
                of all the providers used in this ClowdEnvironment.
              properties:
                db:
                  description: Defines the Configuration for the Clowder Database
                    Provider.
                  properties:
                    image:
                      description: DEPRECATED In (*_local_*) mode, the Image field
                        is used to define the database image for local database instances.
                      type: string
                    imageList:
                      description: Allows the definition of multiple versions of database
                        images, if Image is present ImageList is ignored.
                      items:
                        properties:
                          image:
                            description: Defines the image name to be deployed.
                            type: string
                          version:
                            description: Defines the major version of the postgres
                              version to use.
                            format: int32
                            type: integer
                        required:
                        - image
                        - version
                        type: object
                      type: array
                    mode:
                      description: 'The mode of operation of the Clowder Database
                        Provider. Valid options are: (*_app-interface_*) where the
                        provider will pass through database credentials found in the
                        secret defined by the database name in the ClowdApp, and (*_local_*)
                        where the provider will spin up a local instance of the database.'
                      enum:
                      - app-interface
                      - local
                      type: string
                    pvc:
                      description: If using the (*_local_*) mode and PVC is set to
                        true, this instructs the local Database instance to use a
                        PVC instead of emptyDir for its volumes.
                      type: boolean
                  required:
                  - mode
                  type: object
                inMemoryDb:
                  description: Defines the Configuration for the Clowder InMemoryDB
                    Provider.
                  properties:
                    mode:
                      description: 'The mode of operation of the Clowder InMemory
                        Provider. Valid options are: (*_redis_*) where a local Minio
                        instance will be created, and (*_elasticache_*) which will
                        search the namespace of the ClowdApp for a secret called ''elasticache'''
                      enum:
                      - redis
                      - app-interface
                      - elasticache
                      type: string
                    pvc:
                      description: If using the (*_local_*) mode and PVC is set to
                        true, this instructs the local Database instance to use a
                        PVC instead of emptyDir for its volumes.
                      type: boolean
                  required:
                  - mode
                  type: object
                kafka:
                  description: Defines the Configuration for the Clowder Kafka Provider.
                  properties:
                    clusterName:
                      description: Defines the cluster name to be used by the Kafka
                        Provider this will be used in some modes to locate the Kafka
                        instance.
                      type: string
                    mode:
                      description: 'The mode of operation of the Clowder Kafka Provider.
                        Valid options are: (*_operator_*) which expects a Strimzi
                        Kafka instance and will configure KafkaTopic CRs and place
                        them in the Namespace described in the configuration, (*_app-interface_*)
                        which simple passes the topic names through to the App''s
                        cdappconfig.json and expects app-interface to have created
                        the relevant topics, and (*_local_*) where a small instance
                        of Kafka is created in the Env namespace and configured to
                        auto-create topics.'
                      enum:
                      - operator
                      - app-interface
                      - local
                      type: string
                    namespace:
                      description: The Namespace the cluster is expected to reside
                        in. This is only used in (*_app-interface_*) and (*_operator_*)
                        modes.
                      type: string
                    pvc:
                      description: If using the (*_local_*) mode and PVC is set to
                        true, this instructs the local Kafka instance to use a PVC
                        instead of emptyDir for its volumes.
                      type: boolean
                    suffix:
                      description: (Unused)
                      type: string
                  required:
                  - clusterName
                  - mode
                  - namespace
                  type: object
                logging:
                  description: Defines the Configuration for the Clowder Logging Provider.
                  properties:
                    mode:
                      description: 'The mode of operation of the Clowder Logging Provider.
                        Valid options are: (*_app-interface_*) where the provider
                        will pass through cloudwatch credentials to the app configuration,
                        and (*_none_*) where no logging will be configured.'
                      type: string
                  required:
                  - mode
                  type: object
                metrics:
                  description: Defines the Configuration for the Clowder Metrics Provider.
                  properties:
                    mode:
                      description: The mode of operation of the Metrics provider.
                        The allowed modes are  (*_none_*), which disables metrics
                        service generation, or (*_operator_*) where services and probes
                        are generated.
                      enum:
                      - none
                      - operator
                      type: string
                    path:
                      description: A prefix path that pods will be instructed to use
                        when setting up their metrics server.
                      type: string
                    port:
                      description: The port that metrics services inside ClowdApp
                        pods should be served on. If omitted, defaults to 9000.
                      format: int32
                      type: integer
                  required:
                  - mode
                  type: object
                objectStore:
                  description: Defines the Configuration for the Clowder ObjectStore
                    Provider.
                  properties:
                    mode:
                      description: 'The mode of operation of the Clowder ObjectStore
                        Provider. Valid options are: (*_app-interface_*) where the
                        provider will pass through Amazon S3 credentials to the app
                        configuration, and (*_minio_*) where a local Minio instance
                        will be created.'
                      enum:
                      - minio
                      - app-interface
                      type: string
                    pvc:
                      description: If using the (*_local_*) mode and PVC is set to
                        true, this instructs the local Database instance to use a
                        PVC instead of emptyDir for its volumes.
                      type: boolean
                    suffix:
                      description: Currently unused.
                      type: string
                  required:
                  - mode
                  type: object
                web:
                  description: Defines the Configuration for the Clowder Web Provider.
                  properties:
                    apiPrefix:
                      description: An api prefix path that pods will be instructed
                        to use when setting up their web server.
                      type: string
                    mode:
                      description: The mode of operation of the Web provider. The
                        allowed modes are (*_none_*), which disables web service generation,
                        or (*_operator_*) where services and probes are generated.
                      enum:
                      - none
                      - operator
                      type: string
                    port:
                      description: The port that web services inside ClowdApp pods
                        should be served on. If omitted, defaults to 8000.
                      format: int32
                      type: integer
                  required:
                  - mode
                  type: object
              required:
              - inMemoryDb
              - kafka
              - logging
              - objectStore
              type: object
            resourceDefaults:
              description: Defines the default resource requirements in standard k8s
                format in the event that they omitted from a PodSpec inside a ClowdApp.
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            targetNamespace:
              description: TargetNamespace describes the namespace where any generated
                environmental resources should end up, this is particularly important
                in (*_local_*) mode.
              type: string
          required:
          - providers
          - resourceDefaults
          type: object
        status:
          description: ClowdEnvironmentStatus defines the observed state of ClowdEnvironment
          properties:
            apps:
              items:
                properties:
                  deployments:
                    items:
                      properties:
                        hostname:
                          type: string
                        name:
                          type: string
                        port:
                          format: int32
                          type: integer
                      required:
                      - name
                      type: object
                    type: array
                  name:
                    type: string
                required:
                - deployments
                - name
                type: object
              type: array
            deployments:
              description: DeploymentStatus defines Overall and ready deployment counts
              properties:
                managedDeployments:
                  format: int32
                  type: integer
                readyDeployments:
                  format: int32
                  type: integer
              required:
              - managedDeployments
              - readyDeployments
              type: object
            targetNamespace:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              type: string
          required:
          - deployments
          - targetNamespace
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
