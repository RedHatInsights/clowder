
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: clowdenvironments.cloud.redhat.com
spec:
  group: cloud.redhat.com
  names:
    kind: ClowdEnvironment
    listKind: ClowdEnvironmentList
    plural: clowdenvironments
    shortNames:
    - env
    singular: clowdenvironment
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: ClowdEnvironment is the Schema for the clowdenvironments API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ClowdEnvironmentSpec defines the desired state of ClowdEnvironment
          properties:
            providers:
              properties:
                db:
                  properties:
                    image:
                      type: string
                    mode:
                      enum:
                      - app-interface
                      - local
                      type: string
                    pvc:
                      type: boolean
                  required:
                  - image
                  - mode
                  type: object
                inMemoryDb:
                  properties:
                    mode:
                      enum:
                      - redis
                      - app-interface
                      type: string
                    pvc:
                      type: boolean
                  required:
                  - mode
                  type: object
                kafka:
                  properties:
                    clusterName:
                      type: string
                    mode:
                      enum:
                      - operator
                      - app-interface
                      - local
                      type: string
                    namespace:
                      type: string
                    pvc:
                      type: boolean
                    suffix:
                      type: string
                  required:
                  - clusterName
                  - mode
                  - namespace
                  type: object
                logging:
                  properties:
                    mode:
                      type: string
                  required:
                  - mode
                  type: object
                metrics:
                  properties:
                    mode:
                      enum:
                      - none
                      - operator
                      type: string
                    path:
                      type: string
                    port:
                      format: int32
                      type: integer
                  required:
                  - mode
                  type: object
                objectStore:
                  properties:
                    mode:
                      enum:
                      - minio
                      - app-interface
                      type: string
                    pvc:
                      type: boolean
                    suffix:
                      type: string
                  required:
                  - mode
                  type: object
                web:
                  properties:
                    apiPrefix:
                      type: string
                    mode:
                      enum:
                      - none
                      - operator
                      type: string
                    port:
                      format: int32
                      type: integer
                  required:
                  - mode
                  type: object
              required:
              - inMemoryDb
              - kafka
              - logging
              - objectStore
              type: object
            resourceDefaults:
              description: ResourceRequirements describes the compute resource requirements.
              properties:
                limits:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Limits describes the maximum amount of compute resources
                    allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
                requests:
                  additionalProperties:
                    anyOf:
                    - type: integer
                    - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: 'Requests describes the minimum amount of compute resources
                    required. If Requests is omitted for a container, it defaults
                    to Limits if that is explicitly specified, otherwise to an implementation-defined
                    value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  type: object
              type: object
            targetNamespace:
              type: string
          required:
          - providers
          - resourceDefaults
          - targetNamespace
          type: object
        status:
          description: ClowdEnvironmentStatus defines the observed state of ClowdEnvironment
          properties:
            objectStore:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "make" to regenerate code after modifying
                this file'
              properties:
                buckets:
                  items:
                    type: string
                  type: array
                minio:
                  properties:
                    credentials:
                      description: SecretReference represents a Secret Reference.
                        It has enough information to retrieve secret in any namespace
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                    hostname:
                      type: string
                    port:
                      format: int32
                      type: integer
                  required:
                  - credentials
                  - hostname
                  - port
                  type: object
              required:
              - buckets
              type: object
          required:
          - objectStore
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
