---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: clowdenvironments.cloud.redhat.com
spec:
  group: cloud.redhat.com
  names:
    kind: ClowdEnvironment
    listKind: ClowdEnvironmentList
    plural: clowdenvironments
    shortNames:
    - env
    singular: clowdenvironment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.deployments.readyDeployments
      name: Ready
      type: integer
    - jsonPath: .status.deployments.managedDeployments
      name: Managed
      type: integer
    - jsonPath: .status.targetNamespace
      name: Namespace
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClowdEnvironment is the Schema for the clowdenvironments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: A ClowdEnvironmentSpec object.
            properties:
              disabled:
                description: Disabled turns off reconciliation for this ClowdEnv
                type: boolean
              providers:
                description: A ProvidersConfig object, detailing the setup and configuration
                  of all the providers used in this ClowdEnvironment.
                properties:
                  autoScaler:
                    description: Defines the autoscaler configuration
                    properties:
                      mode:
                        description: Enable the autoscaler feature
                        enum:
                        - none
                        - enabled
                        - keda
                        type: string
                    type: object
                  db:
                    description: Defines the Configuration for the Clowder Database
                      Provider.
                    properties:
                      caBundleURL:
                        description: Indicates where Clowder will fetch the database
                          CA certificate bundle from. Currently only used in (*_app-interface_*)
                          mode. If none is specified, the AWS RDS combined CA bundle
                          is used.
                        pattern: ^https?:\/\/.+$
                        type: string
                      mode:
                        description: 'The mode of operation of the Clowder Database
                          Provider. Valid options are: (*_app-interface_*) where the
                          provider will pass through database credentials found in
                          the secret defined by the database name in the ClowdApp,
                          and (*_local_*) where the provider will spin up a local
                          instance of the database.'
                        enum:
                        - shared
                        - app-interface
                        - local
                        - none
                        type: string
                      pvc:
                        description: If using the (*_local_*) mode and PVC is set
                          to true, this instructs the local Database instance to use
                          a PVC instead of emptyDir for its volumes.
                        type: boolean
                    required:
                    - mode
                    type: object
                  deployment:
                    description: Defines the Deployment provider options
                    properties:
                      omitPullPolicy:
                        type: boolean
                    type: object
                  featureFlags:
                    description: Defines the Configuration for the Clowder FeatureFlags
                      Provider.
                    properties:
                      credentialRef:
                        description: Defines the secret containing the client access
                          token, only used for (*_app-interface_*) mode.
                        properties:
                          name:
                            description: Name defines the Name of a resource.
                            type: string
                          namespace:
                            description: Namespace defines the Namespace of a resource.
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      hostname:
                        description: Defines the hostname for (*_app-interface_*)
                          mode
                        type: string
                      mode:
                        description: 'The mode of operation of the Clowder FeatureFlag
                          Provider. Valid options are: (*_app-interface_*) where the
                          provider will pass through credentials to the app configuration,
                          and (*_local_*) where a local Unleash instance will be created.'
                        enum:
                        - local
                        - app-interface
                        - none
                        type: string
                      port:
                        description: Defineds the port for (*_app-interface_*) mode
                        format: int32
                        type: integer
                      pvc:
                        description: If using the (*_local_*) mode and PVC is set
                          to true, this instructs the local Database instance to use
                          a PVC instead of emptyDir for its volumes.
                        type: boolean
                    type: object
                  inMemoryDb:
                    description: Defines the Configuration for the Clowder InMemoryDB
                      Provider.
                    properties:
                      mode:
                        description: 'The mode of operation of the Clowder InMemory
                          Provider. Valid options are: (*_redis_*) where a local Minio
                          instance will be created, and (*_elasticache_*) which will
                          search the namespace of the ClowdApp for a secret called
                          ''elasticache'''
                        enum:
                        - redis
                        - app-interface
                        - elasticache
                        - none
                        type: string
                      pvc:
                        description: If using the (*_local_*) mode and PVC is set
                          to true, this instructs the local Database instance to use
                          a PVC instead of emptyDir for its volumes.
                        type: boolean
                    required:
                    - mode
                    type: object
                  kafka:
                    description: Defines the Configuration for the Clowder Kafka Provider.
                    properties:
                      cluster:
                        description: Defines options related to the Kafka cluster
                          for this environment. Ignored for (*_local_*) mode.
                        properties:
                          config:
                            additionalProperties:
                              type: string
                            description: Config full options
                            type: object
                          deleteClaim:
                            description: Delete persistent volume claim if the Kafka
                              cluster is deleted Only applies when KafkaConfig.PVC
                              is set to 'true'
                            type: boolean
                          forceTLS:
                            description: Force TLS
                            type: boolean
                          jvmOptions:
                            description: JVM Options
                            properties:
                              -XX:
                                description: A map of -XX options to the JVM.
                                x-kubernetes-preserve-unknown-fields: true
                              -Xms:
                                description: -Xms option to to the JVM.
                                type: string
                              -Xmx:
                                description: -Xmx option to to the JVM.
                                type: string
                              gcLoggingEnabled:
                                description: Specifies whether the Garbage Collection
                                  logging is enabled. The default is false.
                                type: boolean
                              javaSystemProperties:
                                description: A map of additional system properties
                                  which will be passed using the `-D` option to the
                                  JVM.
                                items:
                                  properties:
                                    name:
                                      description: The system property name.
                                      type: string
                                    value:
                                      description: The system property value.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          name:
                            description: 'Defines the kafka cluster name (default:
                              <ClowdEnvironment Name>-<UID>)'
                            type: string
                          namespace:
                            description: 'The namespace the kafka cluster is expected
                              to reside in (default: the environment''s targetNamespace)'
                            type: string
                          replicas:
                            description: The requested number of replicas for kafka/zookeeper.
                              If unset, default is '1'
                            format: int32
                            minimum: 1
                            type: integer
                          resources:
                            description: Resource Limits
                            properties:
                              limits:
                                description: Limits corresponds to the JSON schema
                                  field "limits".
                                x-kubernetes-preserve-unknown-fields: true
                              requests:
                                description: Requests corresponds to the JSON schema
                                  field "requests".
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          storageSize:
                            description: Persistent volume storage size. If unset,
                              default is '1Gi' Only applies when KafkaConfig.PVC is
                              set to 'true'
                            type: string
                          version:
                            description: Version. If unset, default is '2.5.0'
                            type: string
                        type: object
                      clusterAnnotation:
                        description: Cluster annotation identifier for (*_msk_*) mode.
                        type: string
                      clusterName:
                        description: (Deprecated) Defines the cluster name to be used
                          by the Kafka Provider this will be used in some modes to
                          locate the Kafka instance.
                        type: string
                      connect:
                        description: Defines options related to the Kafka Connect
                          cluster for this environment. Ignored for (*_local_*) mode.
                        properties:
                          image:
                            description: Image. If unset, default is 'quay.io/cloudservices/xjoin-kafka-connect-strimzi:latest'
                            type: string
                          name:
                            description: 'Defines the kafka connect cluster name (default:
                              <kafka cluster''s name>)'
                            type: string
                          namespace:
                            description: 'The namespace the kafka connect cluster
                              is expected to reside in (default: the kafka cluster''s
                              namespace)'
                            type: string
                          replicas:
                            description: The requested number of replicas for kafka
                              connect. If unset, default is '1'
                            format: int32
                            minimum: 1
                            type: integer
                          resources:
                            description: Resource Limits
                            properties:
                              limits:
                                description: Limits corresponds to the JSON schema
                                  field "limits".
                                x-kubernetes-preserve-unknown-fields: true
                              requests:
                                description: Requests corresponds to the JSON schema
                                  field "requests".
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          version:
                            description: Version. If unset, default is '2.5.0'
                            type: string
                        type: object
                      connectClusterName:
                        description: (Deprecated) Defines the kafka connect cluster
                          name that is used in this environment.
                        type: string
                      connectNamespace:
                        description: (Deprecated) The namespace that the Kafka Connect
                          cluster is expected to reside in. This is only used in (*_app-interface_*)
                          and (*_operator_*) modes.
                        type: string
                      enableLegacyStrimzi:
                        description: EnableLegacyStrimzi disables TLS + user auth
                        type: boolean
                      kafkaConnectReplicaCount:
                        description: Sets the replica count for ephem-msk mode for
                          kafka connect
                        type: integer
                      managedPrefix:
                        description: Managed topic prefix for the managed cluster.
                          Only used in (*_managed_*) mode.
                        type: string
                      managedSecretRef:
                        description: Defines the secret reference for the Managed
                          Kafka mode. Only used in (*_managed_*) mode.
                        properties:
                          name:
                            description: Name defines the Name of a resource.
                            type: string
                          namespace:
                            description: Namespace defines the Namespace of a resource.
                            type: string
                        required:
                        - name
                        - namespace
                        type: object
                      mode:
                        description: 'The mode of operation of the Clowder Kafka Provider.
                          Valid options are: (*_operator_*) which provisions Strimzi
                          resources and will configure KafkaTopic CRs and place them
                          in the Kafka cluster''s namespace described in the configuration,
                          (*_app-interface_*) which simply passes the topic names
                          through to the App''s cdappconfig.json and expects app-interface
                          to have created the relevant topics, and (*_local_*) where
                          a small instance of Kafka is created in the desired cluster
                          namespace and configured to auto-create topics.'
                        enum:
                        - ephem-msk
                        - managed
                        - operator
                        - app-interface
                        - local
                        - none
                        type: string
                      namespace:
                        description: (Deprecated) The Namespace the cluster is expected
                          to reside in. This is only used in (*_app-interface_*) and
                          (*_operator_*) modes.
                        type: string
                      pvc:
                        description: If using the (*_local_*) or (*_operator_*) mode
                          and PVC is set to true, this sets the provisioned Kafka
                          instance to use a PVC instead of emptyDir for its volumes.
                        type: boolean
                      suffix:
                        description: (Deprecated) (Unused)
                        type: string
                      topicNamespace:
                        description: Namespace that kafkaTopics should be written
                          to for (*_msk_*) mode.
                        type: string
                    required:
                    - mode
                    type: object
                  logging:
                    description: Defines the Configuration for the Clowder Logging
                      Provider.
                    properties:
                      mode:
                        description: 'The mode of operation of the Clowder Logging
                          Provider. Valid options are: (*_app-interface_*) where the
                          provider will pass through cloudwatch credentials to the
                          app configuration, and (*_none_*) where no logging will
                          be configured.'
                        enum:
                        - app-interface
                        - "null"
                        - none
                        type: string
                    required:
                    - mode
                    type: object
                  metrics:
                    description: Defines the Configuration for the Clowder Metrics
                      Provider.
                    properties:
                      mode:
                        description: The mode of operation of the Metrics provider.
                          The allowed modes are (*_none_*), which disables metrics
                          service generation, or (*_operator_*) where services and
                          probes are generated. (*_app-interface_*) where services
                          and probes are generated for app-interface.
                        enum:
                        - none
                        - operator
                        - app-interface
                        type: string
                      path:
                        description: A prefix path that pods will be instructed to
                          use when setting up their metrics server.
                        type: string
                      port:
                        description: The port that metrics services inside ClowdApp
                          pods should be served on.
                        format: int32
                        type: integer
                      prometheus:
                        description: Prometheus specific configuration
                        properties:
                          appInterfaceHostname:
                            description: Specify prometheus hostname when in app-interface
                              mode
                            type: string
                          deploy:
                            description: Determines whether to deploy prometheus in
                              operator mode
                            type: boolean
                        type: object
                    required:
                    - mode
                    - port
                    type: object
                  objectStore:
                    description: Defines the Configuration for the Clowder ObjectStore
                      Provider.
                    properties:
                      mode:
                        description: 'The mode of operation of the Clowder ObjectStore
                          Provider. Valid options are: (*_app-interface_*) where the
                          provider will pass through Amazon S3 credentials to the
                          app configuration, and (*_minio_*) where a local Minio instance
                          will be created.'
                        enum:
                        - minio
                        - app-interface
                        - none
                        type: string
                      pvc:
                        description: If using the (*_local_*) mode and PVC is set
                          to true, this instructs the local Database instance to use
                          a PVC instead of emptyDir for its volumes.
                        type: boolean
                      suffix:
                        description: Currently unused.
                        type: string
                    required:
                    - mode
                    type: object
                  pullSecrets:
                    description: Defines the pull secret to use for the service accounts.
                    items:
                      description: NamespacedName type to represent a real Namespaced
                        Name
                      properties:
                        name:
                          description: Name defines the Name of a resource.
                          type: string
                        namespace:
                          description: Namespace defines the Namespace of a resource.
                          type: string
                      required:
                      - name
                      - namespace
                      type: object
                    type: array
                  serviceMesh:
                    description: Defines the Configuration for the Clowder ServiceMesh
                      Provider.
                    properties:
                      mode:
                        description: ServiceMeshMode just determines if we enable
                          or disable the service mesh
                        enum:
                        - enabled
                        - disabled
                        type: string
                    type: object
                  sidecars:
                    description: Defines the sidecar configuration
                    properties:
                      tokenRefresher:
                        description: Sets up Token Refresher configuration
                        properties:
                          enabled:
                            description: Enables or disables token refresher sidecars
                            type: boolean
                        required:
                        - enabled
                        type: object
                    type: object
                  testing:
                    description: Defines the environment for iqe/smoke testing
                    properties:
                      configAccess:
                        description: 'The mode of operation for access to outside
                          app configs. Valid options are: (*_none_*) -- no app config
                          is mounted to the pod (*_app_*) -- only the ClowdApp''s
                          config is mounted to the pod (*_environment_*) -- the config
                          for all apps in the env are mounted'
                        enum:
                        - none
                        - app
                        - ""
                        - environment
                        type: string
                      iqe:
                        description: Defines the environment for iqe/smoke testing
                        properties:
                          imageBase:
                            type: string
                          resources:
                            description: A pass-through of a resource requirements
                              in k8s ResourceRequirements format. If omitted, the
                              default resource requirements from the ClowdEnvironment
                              will be used.
                            properties:
                              claims:
                                description: "Claims lists the names of resources,
                                  defined in spec.resourceClaims, that are used by
                                  this container. \n This is an alpha field and requires
                                  enabling the DynamicResourceAllocation feature gate.
                                  \n This field is immutable. It can only be set for
                                  containers."
                                items:
                                  description: ResourceClaim references one entry
                                    in PodSpec.ResourceClaims.
                                  properties:
                                    name:
                                      description: Name must match the name of one
                                        entry in pod.spec.resourceClaims of the Pod
                                        where this field is used. It makes that resource
                                        available inside a container.
                                      type: string
                                  required:
                                  - name
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          ui:
                            description: Defines configurations related to UI testing
                              containers
                            properties:
                              selenium:
                                description: Defines configurations for selenium containers
                                  in this environment
                                properties:
                                  defaultImageTag:
                                    description: Defines the default image tag used
                                      for selenium containers in this environment
                                    type: string
                                  imageBase:
                                    description: Defines the image used for selenium
                                      containers in this environment
                                    type: string
                                  resources:
                                    description: Defines the resource requests/limits
                                      set on selenium containers
                                    properties:
                                      claims:
                                        description: "Claims lists the names of resources,
                                          defined in spec.resourceClaims, that are
                                          used by this container. \n This is an alpha
                                          field and requires enabling the DynamicResourceAllocation
                                          feature gate. \n This field is immutable.
                                          It can only be set for containers."
                                        items:
                                          description: ResourceClaim references one
                                            entry in PodSpec.ResourceClaims.
                                          properties:
                                            name:
                                              description: Name must match the name
                                                of one entry in pod.spec.resourceClaims
                                                of the Pod where this field is used.
                                                It makes that resource available inside
                                                a container.
                                              type: string
                                          required:
                                          - name
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                        - name
                                        x-kubernetes-list-type: map
                                      limits:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Limits describes the maximum
                                          amount of compute resources allowed. More
                                          info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                      requests:
                                        additionalProperties:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        description: 'Requests describes the minimum
                                          amount of compute resources required. If
                                          Requests is omitted for a container, it
                                          defaults to Limits if that is explicitly
                                          specified, otherwise to an implementation-defined
                                          value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                        type: object
                                    type: object
                                type: object
                            type: object
                          vaultSecretRef:
                            description: Defines the secret reference for loading
                              vault credentials into the IQE job
                            properties:
                              name:
                                description: Name defines the Name of a resource.
                                type: string
                              namespace:
                                description: Namespace defines the Namespace of a
                                  resource.
                                type: string
                            required:
                            - name
                            - namespace
                            type: object
                        required:
                        - imageBase
                        type: object
                      k8sAccessLevel:
                        description: 'The mode of operation of the testing Pod. Valid
                          options are: ''default'', ''view'' or ''edit'''
                        enum:
                        - default
                        - view
                        - ""
                        - edit
                        type: string
                    required:
                    - configAccess
                    - k8sAccessLevel
                    type: object
                  web:
                    description: Defines the Configuration for the Clowder Web Provider.
                    properties:
                      aiuthPort:
                        description: The auth port that the web local mode will use
                          with the AuthSidecar
                        format: int32
                        type: integer
                      apiPrefix:
                        description: An api prefix path that pods will be instructed
                          to use when setting up their web server.
                        type: string
                      bopURL:
                        description: The URL of BOP - only used in (*_none_*/*_operator_*)
                          mode.
                        type: string
                      gatewayCert:
                        description: Gateway cert
                        properties:
                          certMode:
                            description: Determines the mode of certificate generation,
                              either self-signed or acme
                            enum:
                            - self-signed
                            - acme
                            - none
                            type: string
                          emailAddress:
                            description: The email address used to register with Let's
                              Encrypt for acme mode certs
                            type: string
                          enabled:
                            description: Determines whether to enable the gateway
                              cert, default is disabled
                            type: boolean
                          localCAConfigMap:
                            description: Determines a ConfigMap in the target namespace
                              of the env which has ca.pem detailing the cert to use
                              for mTLS verification
                            type: string
                        type: object
                      images:
                        description: Optional images to use for web provider components
                          -- only applies when running in (*_local_*) mode.
                        properties:
                          caddy:
                            description: Caddy image -- if not defined, value from
                              operator config is used if set, otherwise a hard-coded
                              default is used.
                            type: string
                          caddyGateway:
                            description: Caddy Gateway image -- if not defined, value
                              from operator config is used if set, otherwise a hard-coded
                              default is used.
                            type: string
                          keycloak:
                            description: Keycloak image -- default is 'quay.io/keycloak/keycloak:{KeycloakVersion}'
                              unless overridden here
                            type: string
                          mockBop:
                            description: Mock BOP image -- if not defined, value from
                              operator config is used if set, otherwise a hard-coded
                              default is used.
                            type: string
                          mocktitlements:
                            description: Mock entitlements image -- if not defined,
                              value from operator config is used if set, otherwise
                              a hard-coded default is used.
                            type: string
                        type: object
                      ingressClass:
                        description: Ingress Class Name used only in (*_local_*) mode.
                        type: string
                      keycloakPVC:
                        description: Optionally use PVC storage for keycloak db
                        type: boolean
                      keycloakVersion:
                        description: Optional keycloak version override -- used only
                          in (*_local_*) mode -- if not set, a hard-coded default
                          is used.
                        type: string
                      mode:
                        description: The mode of operation of the Web provider. The
                          allowed modes are (*_none_*/*_operator_*), and (*_local_*)
                          which deploys keycloak and BOP.
                        enum:
                        - none
                        - operator
                        - local
                        type: string
                      port:
                        description: The port that web services inside ClowdApp pods
                          should be served on.
                        format: int32
                        type: integer
                      privatePort:
                        description: The private port that web services inside a ClowdApp
                          should be served on.
                        format: int32
                        type: integer
                      tls:
                        description: TLS sidecar enablement
                        properties:
                          enabled:
                            type: boolean
                          port:
                            format: int32
                            type: integer
                          privatePort:
                            format: int32
                            type: integer
                        type: object
                    required:
                    - mode
                    - port
                    type: object
                required:
                - inMemoryDb
                - kafka
                - logging
                - objectStore
                type: object
              resourceDefaults:
                description: Defines the default resource requirements in standard
                  k8s format in the event that they omitted from a PodSpec inside
                  a ClowdApp.
                properties:
                  claims:
                    description: "Claims lists the names of resources, defined in
                      spec.resourceClaims, that are used by this container. \n This
                      is an alpha field and requires enabling the DynamicResourceAllocation
                      feature gate. \n This field is immutable. It can only be set
                      for containers."
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: Name must match the name of one entry in pod.spec.resourceClaims
                            of the Pod where this field is used. It makes that resource
                            available inside a container.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              serviceConfig:
                description: ServiceConfig provides options for k8s Service resources
                properties:
                  type:
                    enum:
                    - ClusterIP
                    - NodePort
                    - ""
                    type: string
                required:
                - type
                type: object
              targetNamespace:
                description: TargetNamespace describes the namespace where any generated
                  environmental resources should end up, this is particularly important
                  in (*_local_*) mode.
                type: string
            required:
            - providers
            - resourceDefaults
            type: object
          status:
            description: ClowdEnvironmentStatus defines the observed state of ClowdEnvironment
            properties:
              apps:
                items:
                  description: AppInfo details information about a specific app.
                  properties:
                    deployments:
                      items:
                        description: DeploymentInfo defailts information about a specific
                          deployment.
                        properties:
                          hostname:
                            type: string
                          name:
                            type: string
                          port:
                            format: int32
                            type: integer
                        required:
                        - name
                        type: object
                      type: array
                    name:
                      type: string
                  required:
                  - deployments
                  - name
                  type: object
                type: array
              conditions:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              deployments:
                properties:
                  managedDeployments:
                    format: int32
                    type: integer
                  managedTopics:
                    format: int32
                    type: integer
                  readyDeployments:
                    format: int32
                    type: integer
                  readyTopics:
                    format: int32
                    type: integer
                required:
                - managedDeployments
                - managedTopics
                - readyDeployments
                - readyTopics
                type: object
              generation:
                format: int64
                type: integer
              hostname:
                type: string
              prometheus:
                description: PrometheusStatus provides info on how to connect to Prometheus
                properties:
                  hostname:
                    type: string
                required:
                - hostname
                type: object
              ready:
                type: boolean
              targetNamespace:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
