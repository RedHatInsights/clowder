---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.4
  name: clowdapprefs.cloud.redhat.com
spec:
  group: cloud.redhat.com
  names:
    kind: ClowdAppRef
    listKind: ClowdAppRefList
    plural: clowdapprefs
    singular: clowdappref
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ready
      name: Ready
      type: boolean
    - jsonPath: .spec.envName
      name: Env
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ClowdAppRef is the Schema for the clowdapprefs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClowdAppRefSpec defines the desired state of ClowdAppRef
            properties:
              deployments:
                description: Deployments defines a list of deployments associated
                  with the ClowdApp in the remote cluster
                items:
                  description: ClowdAppRefDeployment represents a deployment within
                    a ClowdAppRef
                  properties:
                    hostname:
                      description: Hostname (FQDN) used to reach this deployment in
                        the remote cluster
                      type: string
                    name:
                      description: Name of the deployment
                      type: string
                    web:
                      description: |-
                        If set to true, creates a service on the webPort defined in the ClowdEnvironment resource, along with the relevant liveness and readiness probes.
                        Deprecated: Use WebServices instead.
                      type: boolean
                    webServices:
                      description: WebServices defines the web services configuration
                        for this deployment
                      properties:
                        metrics:
                          description: |-
                            MetricsWebService is the definition of the metrics web service. This is automatically
                            enabled and the configuration here at the moment is included for completeness, as there
                            are no configurable options.
                          type: object
                        private:
                          description: |-
                            PrivateWebService is the definition of the private web service. There can be only
                            one private service managed by Clowder.
                          properties:
                            appProtocol:
                              description: AppProtocol determines the protocol to
                                be used for the private port, (defaults to http)
                              enum:
                              - http
                              - http2
                              - https
                              - tcp
                              - tls
                              - grpc
                              - grpc-web
                              - mongo
                              - mysql
                              - redis
                              type: string
                            enabled:
                              description: |-
                                Enabled describes if Clowder should enable the private service and provide the
                                configuration in the cdappconfig.
                              type: boolean
                          type: object
                        public:
                          description: |-
                            PublicWebService is the definition of the public web service. There can be only
                            one public service managed by Clowder.
                          properties:
                            apiPath:
                              description: (DEPRECATED, use apiPaths instead) Configures
                                a path named '/api/<apiPath>/' that this app will
                                serve requests from.
                              type: string
                            apiPaths:
                              description: 'Defines a list of API paths (each matching
                                format: "/api/some-path/") that this app will serve
                                requests from.'
                              items:
                                description: A string representing an API path that
                                  should route to this app for Clowder-managed Ingresses
                                  (in format "/api/somepath/")
                                pattern: ^\/api\/[a-zA-Z0-9-]+\/$
                                type: string
                              type: array
                            enabled:
                              description: |-
                                Enabled describes if Clowder should enable the public service and provide the
                                configuration in the cdappconfig.
                              type: boolean
                            sessionAffinity:
                              description: Set SessionAffinity to true to enable sticky
                                sessions
                              type: boolean
                            whitelistPaths:
                              description: WhitelistPaths define the paths that do
                                not require authentication
                              items:
                                type: string
                              type: array
                          type: object
                      type: object
                  required:
                  - hostname
                  - name
                  type: object
                type: array
              disabled:
                description: Disabled turns off this ClowdAppRef
                type: boolean
              envName:
                description: The name of the ClowdEnvironment resource that this ClowdAppRef
                  will be used in
                type: string
              remoteCluster:
                description: RemoteCluster defines information about the remote cluster
                  where the services are located
                properties:
                  name:
                    description: Name defines the name of the remote cluster
                    type: string
                  region:
                    description: Region defines the region of the remote cluster
                    type: string
                type: object
              remoteEnvironment:
                description: ClowdAppRefRemoteEnvironment defines details about the
                  remote ClowdEnvironment configuration
                properties:
                  name:
                    description: Name defines the name of the remote ClowdEnvironment
                    type: string
                  port:
                    description: 'Port defines the port used to reach deployments
                      in the remote cluster (default: use the same value as ClowdApps
                      in the local cluster)'
                    format: int32
                    type: integer
                  privatePort:
                    description: 'PrivatePort defines the private port used to reach
                      deployments in the remote cluster (default: use the same value
                      as ClowdApps in the local cluster)'
                    format: int32
                    type: integer
                  tlsPort:
                    description: 'TLSPort defines the TLS port used to reach deployments
                      in the remote cluster (default: use the same value as ClowdApps
                      in the local cluster)'
                    format: int32
                    type: integer
                  tlsPrivatePort:
                    description: 'TLSPrivatePort defines the TLS private port used
                      to reach deployments in the remote cluster (default: use the
                      same value as ClowdApps in the local cluster)'
                    format: int32
                    type: integer
                type: object
            required:
            - envName
            type: object
          status:
            description: ClowdAppRefStatus defines the observed state of ClowdAppRef
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of the ClowdAppRef's current state
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                description: Ready indicates if the ClowdAppRef is ready to be used
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
